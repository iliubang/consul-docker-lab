---
name: build-cpp
on:
  push:
    branches:
      - main
    paths:
      - "cpp/**"
      - ".github/workflows/build_cpp.yml"
  workflow_dispatch:

jobs:
  build-cpp:
    name: cpp playground
    runs-on: ubuntu-latest
    container: gcc:13
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - uses: actions/setup-go@v3
        with:
          go-version: "^1.23.0"
      - uses: bazelbuild/setup-bazelisk@v2
      - uses: actions/cache@v3
        env:
          cache-name: bazel-cpp
        with:
          path: "~/.cache/bazel"
          key: ${{ env.cache-name }}-${{ runner.os }}
          restore-keys: |
            ${{ env.cache-name }}-${{ runner.os }}
      - run: go install github.com/bazelbuild/bazelisk@latest
      - run: sudo apt install yasm
      - run: sudo apt install nasm
      - name: build and test
        run: |
          bazelisk clean
          rm -rf ~/.cache/bazel
          bazelisk build //cpp/...
          bazelisk test  //cpp/...
  coverage:
    name: code coverage
    runs-on: ubuntu-latest
    needs: [build-cpp]
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - uses: actions/setup-go@v3
        with:
          go-version: "^1.23.0"
      - uses: actions/cache@v3
        env:
          cache-name: bazel-coverage
        with:
          path: ~/.cache/bazelisk
          key: ${{ env.cache-name }}-${{ runner.os }}
          restore-keys: |
            ${{ env.cache-name }}-${{ runner.os }}
      - run: go install github.com/bazelbuild/bazelisk@latest
      - run: sudo apt install lcov
      - run: sudo apt install yasm
      - run: sudo apt install nasm
      - name: run build
        run: |
          bazelisk coverage --instrument_test_targets --combined_report=lcov //cpp/...
          genhtml --output coverage "./bazel-out/_coverage/_coverage_report.dat"
          cp -r ./registry ./coverage/
      - name: Deploy ðŸš€
        uses: peaceiris/actions-gh-pages@v3
        if: ${{ github.ref == 'refs/heads/main' }}
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./coverage
          publish_branch: coverage
          user_name: "liubang"
          user_email: "it.liubang@gmail.com"
