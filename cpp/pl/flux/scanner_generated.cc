#include <string>
#include <vector>
#include "cpp/pl/flux/token.h"



namespace pl {
	

	static const char _flux_actions[] = {
		0, 1, 0, 1, 1, 1, 3, 1,
		4, 1, 7, 1, 9, 1, 10, 1,
		11, 1, 12, 1, 13, 1, 14, 1,
		35, 1, 36, 1, 37, 1, 38, 1,
		39, 1, 40, 1, 41, 1, 42, 1,
		43, 1, 44, 1, 45, 1, 46, 1,
		47, 1, 48, 1, 49, 1, 50, 1,
		51, 1, 52, 1, 53, 1, 54, 1,
		55, 1, 56, 1, 57, 1, 58, 1,
		59, 1, 61, 1, 62, 1, 63, 1,
		64, 1, 65, 1, 66, 1, 67, 1,
		68, 1, 69, 1, 70, 1, 71, 1,
		72, 1, 73, 1, 74, 1, 75, 1,
		76, 1, 77, 1, 79, 1, 80, 1,
		81, 1, 82, 1, 83, 1, 84, 2,
		0, 8, 2, 0, 34, 2, 0, 60,
		2, 1, 2, 2, 4, 5, 2, 4,
		6, 2, 4, 15, 2, 4, 16, 2,
		4, 17, 2, 4, 18, 2, 4, 19,
		2, 4, 20, 2, 4, 21, 2, 4,
		22, 2, 4, 23, 2, 4, 24, 2,
		4, 25, 2, 4, 26, 2, 4, 27,
		2, 4, 28, 2, 4, 29, 2, 4,
		30, 2, 4, 31, 2, 4, 32, 2,
		4, 33, 2, 4, 78, 3, 4, 0,
		78, 0
	};
	
	static const short _flux_key_offsets[] = {
		0, 0, 2, 6, 9, 16, 17, 23,
		29, 31, 33, 34, 36, 38, 40, 42,
		43, 45, 47, 48, 50, 52, 54, 56,
		57, 59, 61, 71, 72, 113, 116, 122,
		122, 124, 126, 135, 142, 150, 151, 153,
		155, 159, 164, 173, 177, 183, 194, 196,
		198, 200, 205, 232, 236, 246, 261, 275,
		293, 306, 322, 330, 346, 359, 380, 388,
		402, 411, 425, 436, 448, 458, 467, 476,
		478, 481, 502, 508, 509, 515, 523, 572,
		577, 583, 587, 592, 594, 596, 598, 605,
		613, 620, 623, 627, 631, 633, 635, 639,
		643, 647, 653, 661, 665, 671, 673, 675,
		677, 683, 687, 691, 693, 695, 699, 702,
		706, 708, 712, 716, 726, 731, 745, 761,
		763, 765, 781, 786, 788, 790, 792, 796,
		800, 802, 806, 810, 820, 830, 831, 842,
		850, 853, 856, 860, 864, 866, 869, 871,
		871, 874, 876, 901, 903, 909, 914, 916,
		920, 924, 926, 931, 933, 937, 939, 941,
		943, 946, 948, 969, 971, 973, 975, 986,
		992, 994, 996, 998, 1000, 1004, 1008, 1010,
		1012, 1016, 1018, 1026, 1034, 1051, 1061, 1065,
		1067, 1069, 1073, 1075, 1079, 1081, 1085, 1090,
		1092, 1101, 1105, 1115, 1121, 1123, 1125, 1139,
		1140, 1150, 1151, 1159, 1166, 1168, 1171, 1173,
		1175, 1177, 1180, 1183, 1186, 1188, 1192, 1195,
		1201, 1201, 1203, 1205, 1214, 1221, 1229, 1230,
		1232, 1234, 1238, 1243, 1252, 1256, 1262, 1273,
		1275, 1277, 1279, 1284, 1311, 1315, 1325, 1340,
		1354, 1372, 1385, 1401, 1409, 1425, 1438, 1459,
		1467, 1481, 1490, 1504, 1515, 1527, 1537, 1546,
		1555, 1557, 1560, 1581, 1587, 1588, 1594, 1602,
		1651, 1656, 1662, 1666, 1671, 1673, 1675, 1677,
		1684, 1692, 1699, 1702, 1706, 1710, 1712, 1714,
		1718, 1722, 1726, 1732, 1740, 1744, 1750, 1752,
		1754, 1756, 1762, 1766, 1770, 1772, 1774, 1778,
		1781, 1785, 1787, 1791, 1795, 1805, 1810, 1824,
		1840, 1842, 1844, 1860, 1865, 1867, 1869, 1871,
		1875, 1879, 1881, 1885, 1889, 1899, 1909, 1910,
		1921, 1929, 1932, 1935, 1939, 1943, 1945, 1948,
		1950, 1950, 1953, 1955, 1980, 1982, 1988, 1993,
		1995, 1999, 2003, 2005, 2010, 2012, 2016, 2018,
		2020, 2022, 2025, 2027, 2048, 2050, 2052, 2054,
		2065, 2071, 2073, 2075, 2077, 2079, 2083, 2087,
		2089, 2091, 2095, 2097, 2105, 2113, 2130, 2140,
		2144, 2146, 2148, 2152, 2154, 2158, 2160, 2164,
		2169, 2171, 2180, 2184, 2194, 2200, 2202, 2204,
		2218, 2219, 2229, 2230, 2238, 2245, 2247, 2250,
		2252, 2254, 2256, 2259, 2262, 2265, 2267, 2271,
		2272, 2275, 2278, 2282, 2291, 2300, 2303, 2306,
		2313, 2314, 2320, 2326, 2329, 2408, 2412, 2416,
		2418, 2419, 2420, 2431, 2442, 2453, 2465, 2466,
		2470, 2475, 2486, 2488, 2492, 2494, 2497, 2498,
		2541, 2584, 2628, 2672, 2716, 2760, 2804, 2848,
		2892, 2936, 2981, 3025, 3069, 3113, 3157, 3201,
		3245, 3290, 3334, 3378, 3422, 3466, 3510, 3554,
		3599, 3643, 3687, 3731, 3775, 3819, 3863, 3907,
		3951, 3995, 4039, 4083, 4127, 4171, 4215, 4259,
		4304, 4348, 4392, 4436, 4480, 4524, 4568, 4612,
		4656, 4661, 4665, 4668, 4671, 4675, 0
	};
	
	static const unsigned char _flux_trans_keys[] = {
		61u, 126u, 10u, 34u, 36u, 92u, 10u, 34u,
		123u, 34u, 36u, 92u, 110u, 114u, 116u, 120u,
		123u, 48u, 57u, 65u, 70u, 97u, 102u, 48u,
		57u, 65u, 70u, 97u, 102u, 48u, 57u, 48u,
		57u, 45u, 48u, 57u, 48u, 57u, 48u, 57u,
		48u, 57u, 58u, 48u, 57u, 48u, 57u, 58u,
		48u, 57u, 48u, 57u, 48u, 57u, 48u, 57u,
		58u, 48u, 57u, 48u, 57u, 100u, 104u, 109u,
		110u, 115u, 117u, 119u, 121u, 48u, 57u, 115u,
		95u, 194u, 195u, 198u, 199u, 203u, 205u, 206u,
		207u, 210u, 212u, 213u, 214u, 215u, 216u, 217u,
		219u, 220u, 221u, 222u, 223u, 224u, 225u, 226u,
		227u, 228u, 233u, 234u, 237u, 239u, 240u, 65u,
		90u, 97u, 122u, 196u, 202u, 208u, 218u, 229u,
		236u, 170u, 181u, 186u, 128u, 150u, 152u, 182u,
		184u, 255u, 192u, 255u, 0u, 127u, 173u, 130u,
		133u, 146u, 159u, 165u, 171u, 175u, 255u, 133u,
		176u, 180u, 182u, 183u, 186u, 189u, 134u, 140u,
		136u, 138u, 142u, 161u, 163u, 255u, 182u, 130u,
		137u, 164u, 176u, 151u, 152u, 154u, 160u, 190u,
		136u, 175u, 192u, 255u, 135u, 129u, 130u, 132u,
		133u, 144u, 170u, 176u, 178u, 144u, 154u, 161u,
		191u, 128u, 151u, 153u, 158u, 174u, 255u, 148u,
		157u, 160u, 169u, 172u, 176u, 185u, 189u, 190u,
		192u, 255u, 144u, 191u, 141u, 255u, 178u, 255u,
		186u, 138u, 170u, 180u, 181u, 164u, 165u, 166u,
		167u, 168u, 169u, 170u, 171u, 172u, 173u, 174u,
		175u, 176u, 177u, 178u, 179u, 180u, 181u, 182u,
		183u, 184u, 185u, 186u, 187u, 188u, 189u, 190u,
		129u, 185u, 189u, 255u, 141u, 143u, 145u, 151u,
		164u, 176u, 179u, 186u, 192u, 255u, 178u, 129u,
		131u, 133u, 140u, 143u, 144u, 147u, 168u, 170u,
		176u, 182u, 185u, 189u, 255u, 141u, 158u, 133u,
		134u, 137u, 138u, 143u, 150u, 152u, 155u, 164u,
		175u, 178u, 255u, 129u, 131u, 133u, 138u, 143u,
		144u, 147u, 168u, 170u, 176u, 178u, 179u, 181u,
		182u, 184u, 185u, 190u, 255u, 157u, 131u, 134u,
		137u, 138u, 141u, 144u, 146u, 152u, 159u, 175u,
		182u, 255u, 129u, 131u, 133u, 141u, 143u, 145u,
		147u, 168u, 170u, 176u, 178u, 179u, 181u, 185u,
		189u, 255u, 134u, 138u, 141u, 143u, 145u, 159u,
		164u, 255u, 129u, 131u, 133u, 140u, 143u, 144u,
		147u, 168u, 170u, 176u, 178u, 179u, 181u, 185u,
		189u, 191u, 177u, 128u, 132u, 135u, 136u, 139u,
		140u, 150u, 151u, 156u, 157u, 159u, 163u, 156u,
		130u, 131u, 133u, 138u, 142u, 144u, 146u, 149u,
		153u, 154u, 158u, 159u, 163u, 164u, 168u, 170u,
		174u, 185u, 190u, 191u, 144u, 151u, 128u, 130u,
		134u, 136u, 138u, 140u, 129u, 131u, 133u, 140u,
		142u, 144u, 146u, 168u, 170u, 179u, 181u, 185u,
		189u, 255u, 133u, 137u, 151u, 141u, 148u, 154u,
		159u, 164u, 255u, 130u, 131u, 133u, 140u, 142u,
		144u, 146u, 168u, 170u, 179u, 181u, 185u, 189u,
		191u, 158u, 128u, 132u, 134u, 136u, 138u, 140u,
		149u, 150u, 160u, 163u, 130u, 131u, 133u, 140u,
		142u, 144u, 146u, 168u, 170u, 185u, 189u, 255u,
		133u, 137u, 141u, 150u, 152u, 159u, 164u, 185u,
		192u, 255u, 189u, 130u, 131u, 133u, 150u, 154u,
		177u, 179u, 187u, 150u, 128u, 134u, 143u, 148u,
		152u, 159u, 178u, 179u, 129u, 186u, 141u, 128u,
		134u, 132u, 138u, 141u, 165u, 167u, 129u, 130u,
		135u, 136u, 148u, 151u, 153u, 159u, 161u, 163u,
		170u, 171u, 173u, 185u, 187u, 189u, 134u, 141u,
		128u, 132u, 156u, 157u, 128u, 128u, 135u, 137u,
		172u, 177u, 191u, 128u, 129u, 136u, 139u, 144u,
		151u, 153u, 188u, 128u, 129u, 130u, 131u, 133u,
		134u, 135u, 137u, 138u, 139u, 140u, 141u, 142u,
		143u, 144u, 153u, 154u, 155u, 156u, 157u, 158u,
		159u, 160u, 161u, 162u, 164u, 165u, 166u, 167u,
		168u, 172u, 173u, 174u, 176u, 177u, 180u, 181u,
		182u, 184u, 188u, 189u, 190u, 191u, 132u, 136u,
		145u, 152u, 185u, 187u, 184u, 128u, 182u, 187u,
		191u, 144u, 162u, 165u, 168u, 174u, 255u, 135u,
		141u, 143u, 159u, 187u, 134u, 143u, 189u, 255u,
		154u, 158u, 163u, 167u, 186u, 255u, 137u, 151u,
		153u, 142u, 143u, 158u, 159u, 137u, 177u, 142u,
		143u, 182u, 183u, 191u, 255u, 128u, 130u, 133u,
		136u, 150u, 152u, 255u, 145u, 150u, 151u, 155u,
		158u, 160u, 255u, 128u, 143u, 160u, 255u, 181u,
		255u, 129u, 255u, 173u, 174u, 183u, 255u, 129u,
		154u, 160u, 255u, 171u, 173u, 177u, 255u, 128u,
		140u, 142u, 147u, 160u, 179u, 128u, 147u, 160u,
		172u, 174u, 176u, 178u, 179u, 128u, 179u, 182u,
		255u, 137u, 150u, 152u, 155u, 157u, 255u, 160u,
		255u, 184u, 255u, 128u, 170u, 128u, 156u, 160u,
		171u, 176u, 184u, 144u, 173u, 176u, 180u, 128u,
		169u, 176u, 255u, 138u, 255u, 128u, 155u, 128u,
		179u, 181u, 255u, 132u, 140u, 255u, 128u, 169u,
		174u, 175u, 128u, 181u, 141u, 143u, 154u, 189u,
		150u, 151u, 158u, 159u, 152u, 154u, 156u, 158u,
		134u, 135u, 142u, 143u, 190u, 255u, 190u, 128u,
		180u, 182u, 188u, 130u, 132u, 134u, 140u, 144u,
		147u, 150u, 155u, 160u, 172u, 178u, 180u, 182u,
		188u, 129u, 130u, 132u, 133u, 134u, 146u, 147u,
		176u, 177u, 178u, 179u, 180u, 181u, 182u, 183u,
		184u, 177u, 191u, 144u, 148u, 130u, 135u, 149u,
		164u, 166u, 168u, 138u, 147u, 153u, 157u, 170u,
		173u, 175u, 185u, 188u, 191u, 142u, 133u, 137u,
		160u, 255u, 137u, 255u, 182u, 255u, 170u, 255u,
		128u, 174u, 176u, 255u, 159u, 176u, 190u, 255u,
		165u, 255u, 128u, 165u, 176u, 255u, 166u, 174u,
		176u, 255u, 128u, 150u, 160u, 166u, 168u, 174u,
		176u, 182u, 184u, 190u, 128u, 134u, 136u, 142u,
		144u, 150u, 152u, 158u, 160u, 191u, 175u, 128u,
		129u, 130u, 131u, 132u, 133u, 134u, 135u, 144u,
		145u, 255u, 133u, 135u, 161u, 169u, 177u, 181u,
		184u, 188u, 160u, 151u, 156u, 187u, 192u, 255u,
		133u, 173u, 177u, 255u, 143u, 159u, 184u, 255u,
		176u, 191u, 182u, 183u, 184u, 182u, 255u, 191u,
		192u, 255u, 132u, 255u, 128u, 146u, 148u, 152u,
		153u, 154u, 156u, 157u, 158u, 159u, 160u, 161u,
		162u, 163u, 164u, 165u, 168u, 169u, 176u, 129u,
		145u, 149u, 151u, 177u, 255u, 141u, 255u, 141u,
		143u, 160u, 169u, 172u, 255u, 191u, 128u, 159u,
		162u, 174u, 128u, 151u, 151u, 159u, 162u, 255u,
		137u, 138u, 141u, 255u, 187u, 255u, 130u, 134u,
		139u, 168u, 255u, 128u, 179u, 138u, 170u, 176u,
		255u, 147u, 255u, 128u, 182u, 128u, 141u, 158u,
		159u, 255u, 164u, 255u, 164u, 168u, 169u, 171u,
		172u, 173u, 174u, 175u, 180u, 181u, 182u, 183u,
		185u, 186u, 187u, 188u, 189u, 190u, 191u, 165u,
		179u, 174u, 175u, 171u, 175u, 154u, 255u, 190u,
		128u, 134u, 147u, 151u, 157u, 168u, 170u, 182u,
		184u, 188u, 128u, 129u, 131u, 132u, 134u, 255u,
		147u, 255u, 190u, 255u, 144u, 255u, 144u, 145u,
		136u, 175u, 188u, 255u, 176u, 180u, 182u, 255u,
		189u, 255u, 161u, 186u, 129u, 154u, 166u, 255u,
		191u, 255u, 130u, 135u, 138u, 143u, 146u, 151u,
		154u, 156u, 144u, 146u, 157u, 160u, 170u, 175u,
		161u, 169u, 128u, 129u, 130u, 131u, 133u, 138u,
		139u, 140u, 141u, 142u, 143u, 144u, 145u, 146u,
		160u, 164u, 168u, 128u, 139u, 141u, 166u, 168u,
		186u, 188u, 189u, 191u, 255u, 142u, 143u, 158u,
		255u, 187u, 255u, 128u, 180u, 128u, 156u, 160u,
		255u, 145u, 255u, 128u, 158u, 176u, 255u, 139u,
		255u, 128u, 157u, 160u, 255u, 144u, 132u, 135u,
		150u, 255u, 158u, 255u, 136u, 188u, 191u, 128u,
		133u, 138u, 181u, 183u, 184u, 128u, 149u, 160u,
		185u, 128u, 131u, 133u, 134u, 140u, 147u, 149u,
		151u, 153u, 179u, 128u, 141u, 144u, 145u, 129u,
		140u, 175u, 255u, 163u, 255u, 144u, 145u, 146u,
		147u, 148u, 149u, 154u, 155u, 156u, 157u, 158u,
		159u, 150u, 153u, 149u, 157u, 173u, 186u, 188u,
		160u, 161u, 163u, 164u, 167u, 168u, 132u, 134u,
		149u, 157u, 186u, 139u, 140u, 191u, 255u, 134u,
		128u, 132u, 138u, 144u, 146u, 255u, 166u, 167u,
		129u, 155u, 187u, 149u, 181u, 143u, 175u, 137u,
		169u, 131u, 140u, 255u, 128u, 129u, 255u, 155u,
		156u, 255u, 151u, 255u, 160u, 168u, 161u, 167u,
		170u, 181u, 186u, 128u, 150u, 152u, 182u, 184u,
		255u, 192u, 255u, 128u, 255u, 173u, 130u, 133u,
		146u, 159u, 165u, 171u, 175u, 255u, 133u, 176u,
		180u, 182u, 183u, 186u, 189u, 134u, 140u, 136u,
		138u, 142u, 161u, 163u, 255u, 182u, 130u, 137u,
		164u, 176u, 151u, 152u, 154u, 160u, 190u, 136u,
		175u, 192u, 255u, 135u, 129u, 130u, 132u, 133u,
		144u, 170u, 176u, 178u, 144u, 154u, 161u, 191u,
		128u, 151u, 153u, 158u, 174u, 255u, 148u, 157u,
		160u, 169u, 172u, 176u, 185u, 189u, 190u, 192u,
		255u, 144u, 191u, 141u, 255u, 178u, 255u, 186u,
		138u, 170u, 180u, 181u, 164u, 165u, 166u, 167u,
		168u, 169u, 170u, 171u, 172u, 173u, 174u, 175u,
		176u, 177u, 178u, 179u, 180u, 181u, 182u, 183u,
		184u, 185u, 186u, 187u, 188u, 189u, 190u, 129u,
		185u, 189u, 255u, 141u, 143u, 145u, 151u, 164u,
		176u, 179u, 186u, 192u, 255u, 178u, 129u, 131u,
		133u, 140u, 143u, 144u, 147u, 168u, 170u, 176u,
		182u, 185u, 189u, 255u, 141u, 158u, 133u, 134u,
		137u, 138u, 143u, 150u, 152u, 155u, 164u, 175u,
		178u, 255u, 129u, 131u, 133u, 138u, 143u, 144u,
		147u, 168u, 170u, 176u, 178u, 179u, 181u, 182u,
		184u, 185u, 190u, 255u, 157u, 131u, 134u, 137u,
		138u, 141u, 144u, 146u, 152u, 159u, 175u, 182u,
		255u, 129u, 131u, 133u, 141u, 143u, 145u, 147u,
		168u, 170u, 176u, 178u, 179u, 181u, 185u, 189u,
		255u, 134u, 138u, 141u, 143u, 145u, 159u, 164u,
		255u, 129u, 131u, 133u, 140u, 143u, 144u, 147u,
		168u, 170u, 176u, 178u, 179u, 181u, 185u, 189u,
		191u, 177u, 128u, 132u, 135u, 136u, 139u, 140u,
		150u, 151u, 156u, 157u, 159u, 163u, 156u, 130u,
		131u, 133u, 138u, 142u, 144u, 146u, 149u, 153u,
		154u, 158u, 159u, 163u, 164u, 168u, 170u, 174u,
		185u, 190u, 191u, 144u, 151u, 128u, 130u, 134u,
		136u, 138u, 140u, 129u, 131u, 133u, 140u, 142u,
		144u, 146u, 168u, 170u, 179u, 181u, 185u, 189u,
		255u, 133u, 137u, 151u, 141u, 148u, 154u, 159u,
		164u, 255u, 130u, 131u, 133u, 140u, 142u, 144u,
		146u, 168u, 170u, 179u, 181u, 185u, 189u, 191u,
		158u, 128u, 132u, 134u, 136u, 138u, 140u, 149u,
		150u, 160u, 163u, 130u, 131u, 133u, 140u, 142u,
		144u, 146u, 168u, 170u, 185u, 189u, 255u, 133u,
		137u, 141u, 150u, 152u, 159u, 164u, 185u, 192u,
		255u, 189u, 130u, 131u, 133u, 150u, 154u, 177u,
		179u, 187u, 150u, 128u, 134u, 143u, 148u, 152u,
		159u, 178u, 179u, 129u, 186u, 141u, 128u, 134u,
		132u, 138u, 141u, 165u, 167u, 129u, 130u, 135u,
		136u, 148u, 151u, 153u, 159u, 161u, 163u, 170u,
		171u, 173u, 185u, 187u, 189u, 134u, 141u, 128u,
		132u, 156u, 157u, 128u, 128u, 135u, 137u, 172u,
		177u, 191u, 128u, 129u, 136u, 139u, 144u, 151u,
		153u, 188u, 128u, 129u, 130u, 131u, 133u, 134u,
		135u, 137u, 138u, 139u, 140u, 141u, 142u, 143u,
		144u, 153u, 154u, 155u, 156u, 157u, 158u, 159u,
		160u, 161u, 162u, 164u, 165u, 166u, 167u, 168u,
		172u, 173u, 174u, 176u, 177u, 180u, 181u, 182u,
		184u, 188u, 189u, 190u, 191u, 132u, 136u, 145u,
		152u, 185u, 187u, 184u, 128u, 182u, 187u, 191u,
		144u, 162u, 165u, 168u, 174u, 255u, 135u, 141u,
		143u, 159u, 187u, 134u, 143u, 189u, 255u, 154u,
		158u, 163u, 167u, 186u, 255u, 137u, 151u, 153u,
		142u, 143u, 158u, 159u, 137u, 177u, 142u, 143u,
		182u, 183u, 191u, 255u, 128u, 130u, 133u, 136u,
		150u, 152u, 255u, 145u, 150u, 151u, 155u, 158u,
		160u, 255u, 128u, 143u, 160u, 255u, 181u, 255u,
		129u, 255u, 173u, 174u, 183u, 255u, 129u, 154u,
		160u, 255u, 171u, 173u, 177u, 255u, 128u, 140u,
		142u, 147u, 160u, 179u, 128u, 147u, 160u, 172u,
		174u, 176u, 178u, 179u, 128u, 179u, 182u, 255u,
		137u, 150u, 152u, 155u, 157u, 255u, 160u, 255u,
		184u, 255u, 128u, 170u, 128u, 156u, 160u, 171u,
		176u, 184u, 144u, 173u, 176u, 180u, 128u, 169u,
		176u, 255u, 138u, 255u, 128u, 155u, 128u, 179u,
		181u, 255u, 132u, 140u, 255u, 128u, 169u, 174u,
		175u, 128u, 181u, 141u, 143u, 154u, 189u, 150u,
		151u, 158u, 159u, 152u, 154u, 156u, 158u, 134u,
		135u, 142u, 143u, 190u, 255u, 190u, 128u, 180u,
		182u, 188u, 130u, 132u, 134u, 140u, 144u, 147u,
		150u, 155u, 160u, 172u, 178u, 180u, 182u, 188u,
		129u, 130u, 132u, 133u, 134u, 146u, 147u, 176u,
		177u, 178u, 179u, 180u, 181u, 182u, 183u, 184u,
		177u, 191u, 144u, 148u, 130u, 135u, 149u, 164u,
		166u, 168u, 138u, 147u, 153u, 157u, 170u, 173u,
		175u, 185u, 188u, 191u, 142u, 133u, 137u, 160u,
		255u, 137u, 255u, 182u, 255u, 170u, 255u, 128u,
		174u, 176u, 255u, 159u, 176u, 190u, 255u, 165u,
		255u, 128u, 165u, 176u, 255u, 166u, 174u, 176u,
		255u, 128u, 150u, 160u, 166u, 168u, 174u, 176u,
		182u, 184u, 190u, 128u, 134u, 136u, 142u, 144u,
		150u, 152u, 158u, 160u, 191u, 175u, 128u, 129u,
		130u, 131u, 132u, 133u, 134u, 135u, 144u, 145u,
		255u, 133u, 135u, 161u, 169u, 177u, 181u, 184u,
		188u, 160u, 151u, 156u, 187u, 192u, 255u, 133u,
		173u, 177u, 255u, 143u, 159u, 184u, 255u, 176u,
		191u, 182u, 183u, 184u, 182u, 255u, 191u, 192u,
		255u, 132u, 255u, 128u, 146u, 148u, 152u, 153u,
		154u, 156u, 157u, 158u, 159u, 160u, 161u, 162u,
		163u, 164u, 165u, 168u, 169u, 176u, 129u, 145u,
		149u, 151u, 177u, 255u, 141u, 255u, 141u, 143u,
		160u, 169u, 172u, 255u, 191u, 128u, 159u, 162u,
		174u, 128u, 151u, 151u, 159u, 162u, 255u, 137u,
		138u, 141u, 255u, 187u, 255u, 130u, 134u, 139u,
		168u, 255u, 128u, 179u, 138u, 170u, 176u, 255u,
		147u, 255u, 128u, 182u, 128u, 141u, 158u, 159u,
		255u, 164u, 255u, 164u, 168u, 169u, 171u, 172u,
		173u, 174u, 175u, 180u, 181u, 182u, 183u, 185u,
		186u, 187u, 188u, 189u, 190u, 191u, 165u, 179u,
		174u, 175u, 171u, 175u, 154u, 255u, 190u, 128u,
		134u, 147u, 151u, 157u, 168u, 170u, 182u, 184u,
		188u, 128u, 129u, 131u, 132u, 134u, 255u, 147u,
		255u, 190u, 255u, 144u, 255u, 144u, 145u, 136u,
		175u, 188u, 255u, 176u, 180u, 182u, 255u, 189u,
		255u, 161u, 186u, 129u, 154u, 166u, 255u, 191u,
		255u, 130u, 135u, 138u, 143u, 146u, 151u, 154u,
		156u, 144u, 146u, 157u, 160u, 170u, 175u, 161u,
		169u, 128u, 129u, 130u, 131u, 133u, 138u, 139u,
		140u, 141u, 142u, 143u, 144u, 145u, 146u, 160u,
		164u, 168u, 128u, 139u, 141u, 166u, 168u, 186u,
		188u, 189u, 191u, 255u, 142u, 143u, 158u, 255u,
		187u, 255u, 128u, 180u, 128u, 156u, 160u, 255u,
		145u, 255u, 128u, 158u, 176u, 255u, 139u, 255u,
		128u, 157u, 160u, 255u, 144u, 132u, 135u, 150u,
		255u, 158u, 255u, 136u, 188u, 191u, 128u, 133u,
		138u, 181u, 183u, 184u, 128u, 149u, 160u, 185u,
		128u, 131u, 133u, 134u, 140u, 147u, 149u, 151u,
		153u, 179u, 128u, 141u, 144u, 145u, 129u, 140u,
		175u, 255u, 163u, 255u, 144u, 145u, 146u, 147u,
		148u, 149u, 154u, 155u, 156u, 157u, 158u, 159u,
		150u, 153u, 149u, 157u, 173u, 186u, 188u, 160u,
		161u, 163u, 164u, 167u, 168u, 132u, 134u, 149u,
		157u, 186u, 139u, 140u, 191u, 255u, 134u, 128u,
		132u, 138u, 144u, 146u, 255u, 166u, 167u, 129u,
		155u, 187u, 149u, 181u, 143u, 175u, 137u, 169u,
		131u, 140u, 255u, 128u, 129u, 255u, 155u, 156u,
		255u, 151u, 255u, 160u, 168u, 161u, 167u, 62u,
		10u, 47u, 92u, 10u, 47u, 92u, 10u, 47u,
		92u, 120u, 10u, 47u, 92u, 48u, 57u, 65u,
		70u, 97u, 102u, 10u, 47u, 92u, 48u, 57u,
		65u, 70u, 97u, 102u, 10u, 47u, 92u, 10u,
		34u, 123u, 34u, 36u, 92u, 110u, 114u, 116u,
		120u, 123u, 48u, 57u, 65u, 70u, 97u, 102u,
		48u, 57u, 65u, 70u, 97u, 102u, 10u, 34u,
		123u, 10u, 32u, 33u, 34u, 37u, 40u, 41u,
		42u, 43u, 44u, 45u, 46u, 47u, 58u, 60u,
		61u, 62u, 63u, 64u, 91u, 93u, 94u, 95u,
		97u, 98u, 101u, 105u, 110u, 111u, 112u, 114u,
		116u, 123u, 124u, 125u, 194u, 195u, 198u, 199u,
		203u, 205u, 206u, 207u, 210u, 212u, 213u, 214u,
		215u, 216u, 217u, 219u, 220u, 221u, 222u, 223u,
		224u, 225u, 226u, 227u, 228u, 233u, 234u, 237u,
		239u, 240u, 9u, 13u, 48u, 57u, 65u, 90u,
		99u, 122u, 196u, 202u, 208u, 218u, 229u, 236u,
		9u, 32u, 11u, 13u, 10u, 34u, 36u, 92u,
		48u, 57u, 47u, 10u, 46u, 100u, 104u, 109u,
		110u, 115u, 117u, 119u, 121u, 48u, 57u, 46u,
		100u, 104u, 109u, 110u, 115u, 117u, 119u, 121u,
		48u, 57u, 46u, 100u, 104u, 109u, 110u, 115u,
		117u, 119u, 121u, 48u, 57u, 45u, 46u, 100u,
		104u, 109u, 110u, 115u, 117u, 119u, 121u, 48u,
		57u, 84u, 43u, 45u, 46u, 90u, 43u, 45u,
		90u, 48u, 57u, 46u, 100u, 104u, 109u, 110u,
		115u, 117u, 119u, 121u, 48u, 57u, 48u, 57u,
		111u, 115u, 48u, 57u, 45u, 61u, 61u, 62u,
		126u, 61u, 95u, 194u, 195u, 198u, 199u, 203u,
		205u, 206u, 207u, 210u, 212u, 213u, 214u, 215u,
		216u, 217u, 219u, 220u, 221u, 222u, 223u, 224u,
		225u, 226u, 227u, 228u, 233u, 234u, 237u, 239u,
		240u, 48u, 57u, 65u, 90u, 97u, 122u, 196u,
		202u, 208u, 218u, 229u, 236u, 95u, 194u, 195u,
		198u, 199u, 203u, 205u, 206u, 207u, 210u, 212u,
		213u, 214u, 215u, 216u, 217u, 219u, 220u, 221u,
		222u, 223u, 224u, 225u, 226u, 227u, 228u, 233u,
		234u, 237u, 239u, 240u, 48u, 57u, 65u, 90u,
		97u, 122u, 196u, 202u, 208u, 218u, 229u, 236u,
		95u, 110u, 194u, 195u, 198u, 199u, 203u, 205u,
		206u, 207u, 210u, 212u, 213u, 214u, 215u, 216u,
		217u, 219u, 220u, 221u, 222u, 223u, 224u, 225u,
		226u, 227u, 228u, 233u, 234u, 237u, 239u, 240u,
		48u, 57u, 65u, 90u, 97u, 122u, 196u, 202u,
		208u, 218u, 229u, 236u, 95u, 100u, 194u, 195u,
		198u, 199u, 203u, 205u, 206u, 207u, 210u, 212u,
		213u, 214u, 215u, 216u, 217u, 219u, 220u, 221u,
		222u, 223u, 224u, 225u, 226u, 227u, 228u, 233u,
		234u, 237u, 239u, 240u, 48u, 57u, 65u, 90u,
		97u, 122u, 196u, 202u, 208u, 218u, 229u, 236u,
		95u, 117u, 194u, 195u, 198u, 199u, 203u, 205u,
		206u, 207u, 210u, 212u, 213u, 214u, 215u, 216u,
		217u, 219u, 220u, 221u, 222u, 223u, 224u, 225u,
		226u, 227u, 228u, 233u, 234u, 237u, 239u, 240u,
		48u, 57u, 65u, 90u, 97u, 122u, 196u, 202u,
		208u, 218u, 229u, 236u, 95u, 105u, 194u, 195u,
		198u, 199u, 203u, 205u, 206u, 207u, 210u, 212u,
		213u, 214u, 215u, 216u, 217u, 219u, 220u, 221u,
		222u, 223u, 224u, 225u, 226u, 227u, 228u, 233u,
		234u, 237u, 239u, 240u, 48u, 57u, 65u, 90u,
		97u, 122u, 196u, 202u, 208u, 218u, 229u, 236u,
		95u, 108u, 194u, 195u, 198u, 199u, 203u, 205u,
		206u, 207u, 210u, 212u, 213u, 214u, 215u, 216u,
		217u, 219u, 220u, 221u, 222u, 223u, 224u, 225u,
		226u, 227u, 228u, 233u, 234u, 237u, 239u, 240u,
		48u, 57u, 65u, 90u, 97u, 122u, 196u, 202u,
		208u, 218u, 229u, 236u, 95u, 116u, 194u, 195u,
		198u, 199u, 203u, 205u, 206u, 207u, 210u, 212u,
		213u, 214u, 215u, 216u, 217u, 219u, 220u, 221u,
		222u, 223u, 224u, 225u, 226u, 227u, 228u, 233u,
		234u, 237u, 239u, 240u, 48u, 57u, 65u, 90u,
		97u, 122u, 196u, 202u, 208u, 218u, 229u, 236u,
		95u, 105u, 194u, 195u, 198u, 199u, 203u, 205u,
		206u, 207u, 210u, 212u, 213u, 214u, 215u, 216u,
		217u, 219u, 220u, 221u, 222u, 223u, 224u, 225u,
		226u, 227u, 228u, 233u, 234u, 237u, 239u, 240u,
		48u, 57u, 65u, 90u, 97u, 122u, 196u, 202u,
		208u, 218u, 229u, 236u, 95u, 110u, 194u, 195u,
		198u, 199u, 203u, 205u, 206u, 207u, 210u, 212u,
		213u, 214u, 215u, 216u, 217u, 219u, 220u, 221u,
		222u, 223u, 224u, 225u, 226u, 227u, 228u, 233u,
		234u, 237u, 239u, 240u, 48u, 57u, 65u, 90u,
		97u, 122u, 196u, 202u, 208u, 218u, 229u, 236u,
		95u, 108u, 120u, 194u, 195u, 198u, 199u, 203u,
		205u, 206u, 207u, 210u, 212u, 213u, 214u, 215u,
		216u, 217u, 219u, 220u, 221u, 222u, 223u, 224u,
		225u, 226u, 227u, 228u, 233u, 234u, 237u, 239u,
		240u, 48u, 57u, 65u, 90u, 97u, 122u, 196u,
		202u, 208u, 218u, 229u, 236u, 95u, 115u, 194u,
		195u, 198u, 199u, 203u, 205u, 206u, 207u, 210u,
		212u, 213u, 214u, 215u, 216u, 217u, 219u, 220u,
		221u, 222u, 223u, 224u, 225u, 226u, 227u, 228u,
		233u, 234u, 237u, 239u, 240u, 48u, 57u, 65u,
		90u, 97u, 122u, 196u, 202u, 208u, 218u, 229u,
		236u, 95u, 101u, 194u, 195u, 198u, 199u, 203u,
		205u, 206u, 207u, 210u, 212u, 213u, 214u, 215u,
		216u, 217u, 219u, 220u, 221u, 222u, 223u, 224u,
		225u, 226u, 227u, 228u, 233u, 234u, 237u, 239u,
		240u, 48u, 57u, 65u, 90u, 97u, 122u, 196u,
		202u, 208u, 218u, 229u, 236u, 95u, 105u, 194u,
		195u, 198u, 199u, 203u, 205u, 206u, 207u, 210u,
		212u, 213u, 214u, 215u, 216u, 217u, 219u, 220u,
		221u, 222u, 223u, 224u, 225u, 226u, 227u, 228u,
		233u, 234u, 237u, 239u, 240u, 48u, 57u, 65u,
		90u, 97u, 122u, 196u, 202u, 208u, 218u, 229u,
		236u, 95u, 115u, 194u, 195u, 198u, 199u, 203u,
		205u, 206u, 207u, 210u, 212u, 213u, 214u, 215u,
		216u, 217u, 219u, 220u, 221u, 222u, 223u, 224u,
		225u, 226u, 227u, 228u, 233u, 234u, 237u, 239u,
		240u, 48u, 57u, 65u, 90u, 97u, 122u, 196u,
		202u, 208u, 218u, 229u, 236u, 95u, 116u, 194u,
		195u, 198u, 199u, 203u, 205u, 206u, 207u, 210u,
		212u, 213u, 214u, 215u, 216u, 217u, 219u, 220u,
		221u, 222u, 223u, 224u, 225u, 226u, 227u, 228u,
		233u, 234u, 237u, 239u, 240u, 48u, 57u, 65u,
		90u, 97u, 122u, 196u, 202u, 208u, 218u, 229u,
		236u, 95u, 115u, 194u, 195u, 198u, 199u, 203u,
		205u, 206u, 207u, 210u, 212u, 213u, 214u, 215u,
		216u, 217u, 219u, 220u, 221u, 222u, 223u, 224u,
		225u, 226u, 227u, 228u, 233u, 234u, 237u, 239u,
		240u, 48u, 57u, 65u, 90u, 97u, 122u, 196u,
		202u, 208u, 218u, 229u, 236u, 95u, 102u, 109u,
		194u, 195u, 198u, 199u, 203u, 205u, 206u, 207u,
		210u, 212u, 213u, 214u, 215u, 216u, 217u, 219u,
		220u, 221u, 222u, 223u, 224u, 225u, 226u, 227u,
		228u, 233u, 234u, 237u, 239u, 240u, 48u, 57u,
		65u, 90u, 97u, 122u, 196u, 202u, 208u, 218u,
		229u, 236u, 95u, 112u, 194u, 195u, 198u, 199u,
		203u, 205u, 206u, 207u, 210u, 212u, 213u, 214u,
		215u, 216u, 217u, 219u, 220u, 221u, 222u, 223u,
		224u, 225u, 226u, 227u, 228u, 233u, 234u, 237u,
		239u, 240u, 48u, 57u, 65u, 90u, 97u, 122u,
		196u, 202u, 208u, 218u, 229u, 236u, 95u, 111u,
		194u, 195u, 198u, 199u, 203u, 205u, 206u, 207u,
		210u, 212u, 213u, 214u, 215u, 216u, 217u, 219u,
		220u, 221u, 222u, 223u, 224u, 225u, 226u, 227u,
		228u, 233u, 234u, 237u, 239u, 240u, 48u, 57u,
		65u, 90u, 97u, 122u, 196u, 202u, 208u, 218u,
		229u, 236u, 95u, 114u, 194u, 195u, 198u, 199u,
		203u, 205u, 206u, 207u, 210u, 212u, 213u, 214u,
		215u, 216u, 217u, 219u, 220u, 221u, 222u, 223u,
		224u, 225u, 226u, 227u, 228u, 233u, 234u, 237u,
		239u, 240u, 48u, 57u, 65u, 90u, 97u, 122u,
		196u, 202u, 208u, 218u, 229u, 236u, 95u, 116u,
		194u, 195u, 198u, 199u, 203u, 205u, 206u, 207u,
		210u, 212u, 213u, 214u, 215u, 216u, 217u, 219u,
		220u, 221u, 222u, 223u, 224u, 225u, 226u, 227u,
		228u, 233u, 234u, 237u, 239u, 240u, 48u, 57u,
		65u, 90u, 97u, 122u, 196u, 202u, 208u, 218u,
		229u, 236u, 95u, 111u, 194u, 195u, 198u, 199u,
		203u, 205u, 206u, 207u, 210u, 212u, 213u, 214u,
		215u, 216u, 217u, 219u, 220u, 221u, 222u, 223u,
		224u, 225u, 226u, 227u, 228u, 233u, 234u, 237u,
		239u, 240u, 48u, 57u, 65u, 90u, 97u, 122u,
		196u, 202u, 208u, 218u, 229u, 236u, 95u, 116u,
		194u, 195u, 198u, 199u, 203u, 205u, 206u, 207u,
		210u, 212u, 213u, 214u, 215u, 216u, 217u, 219u,
		220u, 221u, 222u, 223u, 224u, 225u, 226u, 227u,
		228u, 233u, 234u, 237u, 239u, 240u, 48u, 57u,
		65u, 90u, 97u, 122u, 196u, 202u, 208u, 218u,
		229u, 236u, 95u, 112u, 114u, 194u, 195u, 198u,
		199u, 203u, 205u, 206u, 207u, 210u, 212u, 213u,
		214u, 215u, 216u, 217u, 219u, 220u, 221u, 222u,
		223u, 224u, 225u, 226u, 227u, 228u, 233u, 234u,
		237u, 239u, 240u, 48u, 57u, 65u, 90u, 97u,
		122u, 196u, 202u, 208u, 218u, 229u, 236u, 95u,
		116u, 194u, 195u, 198u, 199u, 203u, 205u, 206u,
		207u, 210u, 212u, 213u, 214u, 215u, 216u, 217u,
		219u, 220u, 221u, 222u, 223u, 224u, 225u, 226u,
		227u, 228u, 233u, 234u, 237u, 239u, 240u, 48u,
		57u, 65u, 90u, 97u, 122u, 196u, 202u, 208u,
		218u, 229u, 236u, 95u, 105u, 194u, 195u, 198u,
		199u, 203u, 205u, 206u, 207u, 210u, 212u, 213u,
		214u, 215u, 216u, 217u, 219u, 220u, 221u, 222u,
		223u, 224u, 225u, 226u, 227u, 228u, 233u, 234u,
		237u, 239u, 240u, 48u, 57u, 65u, 90u, 97u,
		122u, 196u, 202u, 208u, 218u, 229u, 236u, 95u,
		111u, 194u, 195u, 198u, 199u, 203u, 205u, 206u,
		207u, 210u, 212u, 213u, 214u, 215u, 216u, 217u,
		219u, 220u, 221u, 222u, 223u, 224u, 225u, 226u,
		227u, 228u, 233u, 234u, 237u, 239u, 240u, 48u,
		57u, 65u, 90u, 97u, 122u, 196u, 202u, 208u,
		218u, 229u, 236u, 95u, 110u, 194u, 195u, 198u,
		199u, 203u, 205u, 206u, 207u, 210u, 212u, 213u,
		214u, 215u, 216u, 217u, 219u, 220u, 221u, 222u,
		223u, 224u, 225u, 226u, 227u, 228u, 233u, 234u,
		237u, 239u, 240u, 48u, 57u, 65u, 90u, 97u,
		122u, 196u, 202u, 208u, 218u, 229u, 236u, 95u,
		97u, 194u, 195u, 198u, 199u, 203u, 205u, 206u,
		207u, 210u, 212u, 213u, 214u, 215u, 216u, 217u,
		219u, 220u, 221u, 222u, 223u, 224u, 225u, 226u,
		227u, 228u, 233u, 234u, 237u, 239u, 240u, 48u,
		57u, 65u, 90u, 98u, 122u, 196u, 202u, 208u,
		218u, 229u, 236u, 95u, 99u, 194u, 195u, 198u,
		199u, 203u, 205u, 206u, 207u, 210u, 212u, 213u,
		214u, 215u, 216u, 217u, 219u, 220u, 221u, 222u,
		223u, 224u, 225u, 226u, 227u, 228u, 233u, 234u,
		237u, 239u, 240u, 48u, 57u, 65u, 90u, 97u,
		122u, 196u, 202u, 208u, 218u, 229u, 236u, 95u,
		107u, 194u, 195u, 198u, 199u, 203u, 205u, 206u,
		207u, 210u, 212u, 213u, 214u, 215u, 216u, 217u,
		219u, 220u, 221u, 222u, 223u, 224u, 225u, 226u,
		227u, 228u, 233u, 234u, 237u, 239u, 240u, 48u,
		57u, 65u, 90u, 97u, 122u, 196u, 202u, 208u,
		218u, 229u, 236u, 95u, 97u, 194u, 195u, 198u,
		199u, 203u, 205u, 206u, 207u, 210u, 212u, 213u,
		214u, 215u, 216u, 217u, 219u, 220u, 221u, 222u,
		223u, 224u, 225u, 226u, 227u, 228u, 233u, 234u,
		237u, 239u, 240u, 48u, 57u, 65u, 90u, 98u,
		122u, 196u, 202u, 208u, 218u, 229u, 236u, 95u,
		103u, 194u, 195u, 198u, 199u, 203u, 205u, 206u,
		207u, 210u, 212u, 213u, 214u, 215u, 216u, 217u,
		219u, 220u, 221u, 222u, 223u, 224u, 225u, 226u,
		227u, 228u, 233u, 234u, 237u, 239u, 240u, 48u,
		57u, 65u, 90u, 97u, 122u, 196u, 202u, 208u,
		218u, 229u, 236u, 95u, 101u, 194u, 195u, 198u,
		199u, 203u, 205u, 206u, 207u, 210u, 212u, 213u,
		214u, 215u, 216u, 217u, 219u, 220u, 221u, 222u,
		223u, 224u, 225u, 226u, 227u, 228u, 233u, 234u,
		237u, 239u, 240u, 48u, 57u, 65u, 90u, 97u,
		122u, 196u, 202u, 208u, 218u, 229u, 236u, 95u,
		101u, 194u, 195u, 198u, 199u, 203u, 205u, 206u,
		207u, 210u, 212u, 213u, 214u, 215u, 216u, 217u,
		219u, 220u, 221u, 222u, 223u, 224u, 225u, 226u,
		227u, 228u, 233u, 234u, 237u, 239u, 240u, 48u,
		57u, 65u, 90u, 97u, 122u, 196u, 202u, 208u,
		218u, 229u, 236u, 95u, 116u, 194u, 195u, 198u,
		199u, 203u, 205u, 206u, 207u, 210u, 212u, 213u,
		214u, 215u, 216u, 217u, 219u, 220u, 221u, 222u,
		223u, 224u, 225u, 226u, 227u, 228u, 233u, 234u,
		237u, 239u, 240u, 48u, 57u, 65u, 90u, 97u,
		122u, 196u, 202u, 208u, 218u, 229u, 236u, 95u,
		117u, 194u, 195u, 198u, 199u, 203u, 205u, 206u,
		207u, 210u, 212u, 213u, 214u, 215u, 216u, 217u,
		219u, 220u, 221u, 222u, 223u, 224u, 225u, 226u,
		227u, 228u, 233u, 234u, 237u, 239u, 240u, 48u,
		57u, 65u, 90u, 97u, 122u, 196u, 202u, 208u,
		218u, 229u, 236u, 95u, 114u, 194u, 195u, 198u,
		199u, 203u, 205u, 206u, 207u, 210u, 212u, 213u,
		214u, 215u, 216u, 217u, 219u, 220u, 221u, 222u,
		223u, 224u, 225u, 226u, 227u, 228u, 233u, 234u,
		237u, 239u, 240u, 48u, 57u, 65u, 90u, 97u,
		122u, 196u, 202u, 208u, 218u, 229u, 236u, 95u,
		110u, 194u, 195u, 198u, 199u, 203u, 205u, 206u,
		207u, 210u, 212u, 213u, 214u, 215u, 216u, 217u,
		219u, 220u, 221u, 222u, 223u, 224u, 225u, 226u,
		227u, 228u, 233u, 234u, 237u, 239u, 240u, 48u,
		57u, 65u, 90u, 97u, 122u, 196u, 202u, 208u,
		218u, 229u, 236u, 95u, 101u, 104u, 194u, 195u,
		198u, 199u, 203u, 205u, 206u, 207u, 210u, 212u,
		213u, 214u, 215u, 216u, 217u, 219u, 220u, 221u,
		222u, 223u, 224u, 225u, 226u, 227u, 228u, 233u,
		234u, 237u, 239u, 240u, 48u, 57u, 65u, 90u,
		97u, 122u, 196u, 202u, 208u, 218u, 229u, 236u,
		95u, 115u, 194u, 195u, 198u, 199u, 203u, 205u,
		206u, 207u, 210u, 212u, 213u, 214u, 215u, 216u,
		217u, 219u, 220u, 221u, 222u, 223u, 224u, 225u,
		226u, 227u, 228u, 233u, 234u, 237u, 239u, 240u,
		48u, 57u, 65u, 90u, 97u, 122u, 196u, 202u,
		208u, 218u, 229u, 236u, 95u, 116u, 194u, 195u,
		198u, 199u, 203u, 205u, 206u, 207u, 210u, 212u,
		213u, 214u, 215u, 216u, 217u, 219u, 220u, 221u,
		222u, 223u, 224u, 225u, 226u, 227u, 228u, 233u,
		234u, 237u, 239u, 240u, 48u, 57u, 65u, 90u,
		97u, 122u, 196u, 202u, 208u, 218u, 229u, 236u,
		95u, 99u, 194u, 195u, 198u, 199u, 203u, 205u,
		206u, 207u, 210u, 212u, 213u, 214u, 215u, 216u,
		217u, 219u, 220u, 221u, 222u, 223u, 224u, 225u,
		226u, 227u, 228u, 233u, 234u, 237u, 239u, 240u,
		48u, 57u, 65u, 90u, 97u, 122u, 196u, 202u,
		208u, 218u, 229u, 236u, 95u, 97u, 194u, 195u,
		198u, 199u, 203u, 205u, 206u, 207u, 210u, 212u,
		213u, 214u, 215u, 216u, 217u, 219u, 220u, 221u,
		222u, 223u, 224u, 225u, 226u, 227u, 228u, 233u,
		234u, 237u, 239u, 240u, 48u, 57u, 65u, 90u,
		98u, 122u, 196u, 202u, 208u, 218u, 229u, 236u,
		95u, 115u, 194u, 195u, 198u, 199u, 203u, 205u,
		206u, 207u, 210u, 212u, 213u, 214u, 215u, 216u,
		217u, 219u, 220u, 221u, 222u, 223u, 224u, 225u,
		226u, 227u, 228u, 233u, 234u, 237u, 239u, 240u,
		48u, 57u, 65u, 90u, 97u, 122u, 196u, 202u,
		208u, 218u, 229u, 236u, 95u, 101u, 194u, 195u,
		198u, 199u, 203u, 205u, 206u, 207u, 210u, 212u,
		213u, 214u, 215u, 216u, 217u, 219u, 220u, 221u,
		222u, 223u, 224u, 225u, 226u, 227u, 228u, 233u,
		234u, 237u, 239u, 240u, 48u, 57u, 65u, 90u,
		97u, 122u, 196u, 202u, 208u, 218u, 229u, 236u,
		95u, 101u, 194u, 195u, 198u, 199u, 203u, 205u,
		206u, 207u, 210u, 212u, 213u, 214u, 215u, 216u,
		217u, 219u, 220u, 221u, 222u, 223u, 224u, 225u,
		226u, 227u, 228u, 233u, 234u, 237u, 239u, 240u,
		48u, 57u, 65u, 90u, 97u, 122u, 196u, 202u,
		208u, 218u, 229u, 236u, 95u, 110u, 194u, 195u,
		198u, 199u, 203u, 205u, 206u, 207u, 210u, 212u,
		213u, 214u, 215u, 216u, 217u, 219u, 220u, 221u,
		222u, 223u, 224u, 225u, 226u, 227u, 228u, 233u,
		234u, 237u, 239u, 240u, 48u, 57u, 65u, 90u,
		97u, 122u, 196u, 202u, 208u, 218u, 229u, 236u,
		10u, 32u, 47u, 9u, 13u, 9u, 32u, 11u,
		13u, 10u, 47u, 92u, 10u, 47u, 92u, 10u,
		34u, 36u, 92u, 10u, 34u, 36u, 92u, 0u
	};
	
	static const char _flux_single_lengths[] = {
		0, 2, 4, 3, 7, 1, 0, 0,
		0, 0, 1, 0, 0, 0, 0, 1,
		0, 0, 1, 0, 0, 0, 0, 1,
		0, 0, 8, 1, 31, 3, 0, 0,
		0, 0, 1, 1, 2, 1, 0, 0,
		0, 1, 1, 0, 0, 1, 0, 0,
		0, 1, 27, 0, 0, 1, 2, 0,
		1, 0, 2, 0, 1, 1, 2, 0,
		3, 0, 1, 0, 2, 1, 1, 0,
		1, 5, 2, 1, 0, 0, 43, 1,
		0, 0, 1, 0, 0, 0, 3, 2,
		1, 1, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 1, 0,
		0, 0, 0, 4, 1, 0, 16, 2,
		0, 6, 1, 0, 0, 0, 0, 2,
		0, 0, 0, 0, 0, 1, 9, 0,
		1, 1, 0, 0, 0, 3, 0, 0,
		1, 0, 19, 0, 0, 1, 0, 0,
		0, 0, 3, 0, 0, 0, 0, 0,
		1, 0, 19, 0, 0, 0, 1, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 6, 17, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 1, 0,
		3, 0, 0, 4, 0, 0, 12, 1,
		4, 1, 4, 1, 0, 3, 2, 2,
		2, 1, 1, 1, 0, 2, 3, 0,
		0, 0, 0, 1, 1, 2, 1, 0,
		0, 0, 1, 1, 0, 0, 1, 0,
		0, 0, 1, 27, 0, 0, 1, 2,
		0, 1, 0, 2, 0, 1, 1, 2,
		0, 3, 0, 1, 0, 2, 1, 1,
		0, 1, 5, 2, 1, 0, 0, 43,
		1, 0, 0, 1, 0, 0, 0, 3,
		2, 1, 1, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 1,
		0, 0, 0, 0, 4, 1, 0, 16,
		2, 0, 6, 1, 0, 0, 0, 0,
		2, 0, 0, 0, 0, 0, 1, 9,
		0, 1, 1, 0, 0, 0, 3, 0,
		0, 1, 0, 19, 0, 0, 1, 0,
		0, 0, 0, 3, 0, 0, 0, 0,
		0, 1, 0, 19, 0, 0, 0, 1,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 6, 17, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 1,
		0, 3, 0, 0, 4, 0, 0, 12,
		1, 4, 1, 4, 1, 0, 3, 2,
		2, 2, 1, 1, 1, 0, 2, 1,
		3, 3, 4, 3, 3, 3, 3, 7,
		1, 0, 0, 3, 65, 2, 4, 0,
		1, 1, 9, 9, 9, 10, 1, 4,
		3, 9, 0, 2, 2, 3, 1, 31,
		31, 32, 32, 32, 32, 32, 32, 32,
		32, 33, 32, 32, 32, 32, 32, 32,
		33, 32, 32, 32, 32, 32, 32, 33,
		32, 32, 32, 32, 32, 32, 32, 32,
		32, 32, 32, 32, 32, 32, 32, 33,
		32, 32, 32, 32, 32, 32, 32, 32,
		3, 2, 3, 3, 4, 4, 0
	};
	
	static const char _flux_range_lengths[] = {
		0, 0, 0, 0, 0, 0, 3, 3,
		1, 1, 0, 1, 1, 1, 1, 0,
		1, 1, 0, 1, 1, 1, 1, 0,
		1, 1, 1, 0, 5, 0, 3, 0,
		1, 1, 4, 3, 3, 0, 1, 1,
		2, 2, 4, 2, 3, 5, 1, 1,
		1, 2, 0, 2, 5, 7, 6, 9,
		6, 8, 3, 8, 6, 10, 3, 7,
		3, 7, 5, 6, 4, 4, 4, 1,
		1, 8, 2, 0, 3, 4, 3, 2,
		3, 2, 2, 1, 1, 1, 2, 3,
		3, 1, 2, 2, 1, 1, 2, 2,
		2, 3, 4, 2, 3, 1, 1, 1,
		3, 2, 2, 1, 1, 2, 1, 2,
		1, 2, 2, 3, 2, 7, 0, 0,
		1, 5, 2, 1, 1, 1, 2, 1,
		1, 2, 2, 5, 5, 0, 1, 4,
		1, 1, 2, 2, 1, 0, 1, 0,
		1, 1, 3, 1, 3, 2, 1, 2,
		2, 1, 1, 1, 2, 1, 1, 1,
		1, 1, 1, 1, 1, 1, 5, 3,
		1, 1, 1, 1, 2, 2, 1, 1,
		2, 1, 4, 1, 0, 5, 2, 1,
		1, 2, 1, 2, 1, 2, 2, 1,
		3, 2, 5, 1, 1, 1, 1, 0,
		3, 0, 2, 3, 1, 0, 0, 0,
		0, 1, 1, 1, 1, 1, 0, 3,
		0, 1, 1, 4, 3, 3, 0, 1,
		1, 2, 2, 4, 2, 3, 5, 1,
		1, 1, 2, 0, 2, 5, 7, 6,
		9, 6, 8, 3, 8, 6, 10, 3,
		7, 3, 7, 5, 6, 4, 4, 4,
		1, 1, 8, 2, 0, 3, 4, 3,
		2, 3, 2, 2, 1, 1, 1, 2,
		3, 3, 1, 2, 2, 1, 1, 2,
		2, 2, 3, 4, 2, 3, 1, 1,
		1, 3, 2, 2, 1, 1, 2, 1,
		2, 1, 2, 2, 3, 2, 7, 0,
		0, 1, 5, 2, 1, 1, 1, 2,
		1, 1, 2, 2, 5, 5, 0, 1,
		4, 1, 1, 2, 2, 1, 0, 1,
		0, 1, 1, 3, 1, 3, 2, 1,
		2, 2, 1, 1, 1, 2, 1, 1,
		1, 1, 1, 1, 1, 1, 1, 5,
		3, 1, 1, 1, 1, 2, 2, 1,
		1, 2, 1, 4, 1, 0, 5, 2,
		1, 1, 2, 1, 2, 1, 2, 2,
		1, 3, 2, 5, 1, 1, 1, 1,
		0, 3, 0, 2, 3, 1, 0, 0,
		0, 0, 1, 1, 1, 1, 1, 0,
		0, 0, 0, 3, 3, 0, 0, 0,
		0, 3, 3, 0, 7, 1, 0, 1,
		0, 0, 1, 1, 1, 1, 0, 0,
		1, 1, 1, 1, 0, 0, 0, 6,
		6, 6, 6, 6, 6, 6, 6, 6,
		6, 6, 6, 6, 6, 6, 6, 6,
		6, 6, 6, 6, 6, 6, 6, 6,
		6, 6, 6, 6, 6, 6, 6, 6,
		6, 6, 6, 6, 6, 6, 6, 6,
		6, 6, 6, 6, 6, 6, 6, 6,
		1, 1, 0, 0, 0, 0, 0
	};
	
	static const short _flux_index_offsets[] = {
		0, 0, 3, 8, 12, 20, 22, 26,
		30, 32, 34, 36, 38, 40, 42, 44,
		46, 48, 50, 52, 54, 56, 58, 60,
		62, 64, 66, 76, 78, 115, 119, 123,
		124, 126, 128, 134, 139, 145, 147, 149,
		151, 154, 158, 164, 167, 171, 178, 180,
		182, 184, 188, 216, 219, 225, 234, 243,
		253, 261, 270, 276, 285, 293, 305, 311,
		319, 326, 334, 341, 348, 355, 361, 367,
		369, 372, 386, 391, 393, 397, 402, 449,
		453, 457, 460, 464, 466, 468, 470, 476,
		482, 487, 490, 493, 496, 498, 500, 503,
		506, 509, 513, 518, 521, 525, 527, 529,
		531, 535, 538, 541, 543, 545, 548, 551,
		554, 556, 559, 562, 570, 574, 582, 599,
		602, 604, 616, 620, 622, 624, 626, 629,
		633, 635, 638, 641, 647, 653, 655, 666,
		671, 674, 677, 680, 683, 685, 689, 691,
		692, 695, 697, 720, 722, 726, 730, 732,
		735, 738, 740, 745, 747, 750, 752, 754,
		756, 759, 761, 782, 784, 786, 788, 795,
		799, 801, 803, 805, 807, 810, 813, 815,
		817, 820, 822, 827, 835, 853, 859, 862,
		864, 866, 869, 871, 874, 876, 879, 883,
		885, 892, 895, 901, 907, 909, 911, 925,
		927, 935, 937, 944, 949, 951, 955, 958,
		961, 964, 967, 970, 973, 975, 979, 983,
		987, 988, 990, 992, 998, 1003, 1009, 1011,
		1013, 1015, 1018, 1022, 1028, 1031, 1035, 1042,
		1044, 1046, 1048, 1052, 1080, 1083, 1089, 1098,
		1107, 1117, 1125, 1134, 1140, 1149, 1157, 1169,
		1175, 1183, 1190, 1198, 1205, 1212, 1219, 1225,
		1231, 1233, 1236, 1250, 1255, 1257, 1261, 1266,
		1313, 1317, 1321, 1324, 1328, 1330, 1332, 1334,
		1340, 1346, 1351, 1354, 1357, 1360, 1362, 1364,
		1367, 1370, 1373, 1377, 1382, 1385, 1389, 1391,
		1393, 1395, 1399, 1402, 1405, 1407, 1409, 1412,
		1415, 1418, 1420, 1423, 1426, 1434, 1438, 1446,
		1463, 1466, 1468, 1480, 1484, 1486, 1488, 1490,
		1493, 1497, 1499, 1502, 1505, 1511, 1517, 1519,
		1530, 1535, 1538, 1541, 1544, 1547, 1549, 1553,
		1555, 1556, 1559, 1561, 1584, 1586, 1590, 1594,
		1596, 1599, 1602, 1604, 1609, 1611, 1614, 1616,
		1618, 1620, 1623, 1625, 1646, 1648, 1650, 1652,
		1659, 1663, 1665, 1667, 1669, 1671, 1674, 1677,
		1679, 1681, 1684, 1686, 1691, 1699, 1717, 1723,
		1726, 1728, 1730, 1733, 1735, 1738, 1740, 1743,
		1747, 1749, 1756, 1759, 1765, 1771, 1773, 1775,
		1789, 1791, 1799, 1801, 1808, 1813, 1815, 1819,
		1822, 1825, 1828, 1831, 1834, 1837, 1839, 1843,
		1845, 1849, 1853, 1858, 1865, 1872, 1876, 1880,
		1888, 1890, 1894, 1898, 1902, 1975, 1979, 1984,
		1986, 1988, 1990, 2001, 2012, 2023, 2035, 2037,
		2042, 2047, 2058, 2060, 2064, 2067, 2071, 2073,
		2111, 2149, 2188, 2227, 2266, 2305, 2344, 2383,
		2422, 2461, 2501, 2540, 2579, 2618, 2657, 2696,
		2735, 2775, 2814, 2853, 2892, 2931, 2970, 3009,
		3049, 3088, 3127, 3166, 3205, 3244, 3283, 3322,
		3361, 3400, 3439, 3478, 3517, 3556, 3595, 3634,
		3674, 3713, 3752, 3791, 3830, 3869, 3908, 3947,
		3986, 3991, 3995, 3999, 4003, 4008, 0
	};
	
	static const char _flux_trans_cond_spaces[] = {
		-1, -1, -1, -1, -1, -1, -1, -1,
		-1, -1, -1, -1, -1, -1, -1, -1,
		-1, -1, -1, -1, -1, -1, -1, -1,
		-1, -1, -1, -1, -1, -1, -1, -1,
		-1, -1, -1, -1, -1, -1, -1, -1,
		-1, -1, -1, -1, -1, -1, -1, -1,
		-1, -1, -1, -1, -1, -1, -1, -1,
		-1, -1, -1, -1, -1, -1, -1, -1,
		-1, -1, -1, -1, -1, -1, -1, -1,
		-1, -1, -1, -1, -1, -1, -1, -1,
		-1, -1, -1, -1, -1, -1, -1, -1,
		-1, -1, -1, -1, -1, -1, -1, -1,
		-1, -1, -1, -1, -1, -1, -1, -1,
		-1, -1, -1, -1, -1, -1, -1, -1,
		-1, -1, -1, -1, -1, -1, -1, -1,
		-1, -1, -1, -1, -1, -1, -1, -1,
		-1, -1, -1, -1, -1, -1, -1, -1,
		-1, -1, -1, -1, -1, -1, -1, -1,
		-1, -1, -1, -1, -1, -1, -1, -1,
		-1, -1, -1, -1, -1, -1, -1, -1,
		-1, -1, -1, -1, -1, -1, -1, -1,
		-1, -1, -1, -1, -1, -1, -1, -1,
		-1, -1, -1, -1, -1, -1, -1, -1,
		-1, -1, -1, -1, -1, -1, -1, -1,
		-1, -1, -1, -1, -1, -1, -1, -1,
		-1, -1, -1, -1, -1, -1, -1, -1,
		-1, -1, -1, -1, -1, -1, -1, -1,
		-1, -1, -1, -1, -1, -1, -1, -1,
		-1, -1, -1, -1, -1, -1, -1, -1,
		-1, -1, -1, -1, -1, -1, -1, -1,
		-1, -1, -1, -1, -1, -1, -1, -1,
		-1, -1, -1, -1, -1, -1, -1, -1,
		-1, -1, -1, -1, -1, -1, -1, -1,
		-1, -1, -1, -1, -1, -1, -1, -1,
		-1, -1, -1, -1, -1, -1, -1, -1,
		-1, -1, -1, -1, -1, -1, -1, -1,
		-1, -1, -1, -1, -1, -1, -1, -1,
		-1, -1, -1, -1, -1, -1, -1, -1,
		-1, -1, -1, -1, -1, -1, -1, -1,
		-1, -1, -1, -1, -1, -1, -1, -1,
		-1, -1, -1, -1, -1, -1, -1, -1,
		-1, -1, -1, -1, -1, -1, -1, -1,
		-1, -1, -1, -1, -1, -1, -1, -1,
		-1, -1, -1, -1, -1, -1, -1, -1,
		-1, -1, -1, -1, -1, -1, -1, -1,
		-1, -1, -1, -1, -1, -1, -1, -1,
		-1, -1, -1, -1, -1, -1, -1, -1,
		-1, -1, -1, -1, -1, -1, -1, -1,
		-1, -1, -1, -1, -1, -1, -1, -1,
		-1, -1, -1, -1, -1, -1, -1, -1,
		-1, -1, -1, -1, -1, -1, -1, -1,
		-1, -1, -1, -1, -1, -1, -1, -1,
		-1, -1, -1, -1, -1, -1, -1, -1,
		-1, -1, -1, -1, -1, -1, -1, -1,
		-1, -1, -1, -1, -1, -1, -1, -1,
		-1, -1, -1, -1, -1, -1, -1, -1,
		-1, -1, -1, -1, -1, -1, -1, -1,
		-1, -1, -1, -1, -1, -1, -1, -1,
		-1, -1, -1, -1, -1, -1, -1, -1,
		-1, -1, -1, -1, -1, -1, -1, -1,
		-1, -1, -1, -1, -1, -1, -1, -1,
		-1, -1, -1, -1, -1, -1, -1, -1,
		-1, -1, -1, -1, -1, -1, -1, -1,
		-1, -1, -1, -1, -1, -1, -1, -1,
		-1, -1, -1, -1, -1, -1, -1, -1,
		-1, -1, -1, -1, -1, -1, -1, -1,
		-1, -1, -1, -1, -1, -1, -1, -1,
		-1, -1, -1, -1, -1, -1, -1, -1,
		-1, -1, -1, -1, -1, -1, -1, -1,
		-1, -1, -1, -1, -1, -1, -1, -1,
		-1, -1, -1, -1, -1, -1, -1, -1,
		-1, -1, -1, -1, -1, -1, -1, -1,
		-1, -1, -1, -1, -1, -1, -1, -1,
		-1, -1, -1, -1, -1, -1, -1, -1,
		-1, -1, -1, -1, -1, -1, -1, -1,
		-1, -1, -1, -1, -1, -1, -1, -1,
		-1, -1, -1, -1, -1, -1, -1, -1,
		-1, -1, -1, -1, -1, -1, -1, -1,
		-1, -1, -1, -1, -1, -1, -1, -1,
		-1, -1, -1, -1, -1, -1, -1, -1,
		-1, -1, -1, -1, -1, -1, -1, -1,
		-1, -1, -1, -1, -1, -1, -1, -1,
		-1, -1, -1, -1, -1, -1, -1, -1,
		-1, -1, -1, -1, -1, -1, -1, -1,
		-1, -1, -1, -1, -1, -1, -1, -1,
		-1, -1, -1, -1, -1, -1, -1, -1,
		-1, -1, -1, -1, -1, -1, -1, -1,
		-1, -1, -1, -1, -1, -1, -1, -1,
		-1, -1, -1, -1, -1, -1, -1, -1,
		-1, -1, -1, -1, -1, -1, -1, -1,
		-1, -1, -1, -1, -1, -1, -1, -1,
		-1, -1, -1, -1, -1, -1, -1, -1,
		-1, -1, -1, -1, -1, -1, -1, -1,
		-1, -1, -1, -1, -1, -1, -1, -1,
		-1, -1, -1, -1, -1, -1, -1, -1,
		-1, -1, -1, -1, -1, -1, -1, -1,
		-1, -1, -1, -1, -1, -1, -1, -1,
		-1, -1, -1, -1, -1, -1, -1, -1,
		-1, -1, -1, -1, -1, -1, -1, -1,
		-1, -1, -1, -1, -1, -1, -1, -1,
		-1, -1, -1, -1, -1, -1, -1, -1,
		-1, -1, -1, -1, -1, -1, -1, -1,
		-1, -1, -1, -1, -1, -1, -1, -1,
		-1, -1, -1, -1, -1, -1, -1, -1,
		-1, -1, -1, -1, -1, -1, -1, -1,
		-1, -1, -1, -1, -1, -1, -1, -1,
		-1, -1, -1, -1, -1, -1, -1, -1,
		-1, -1, -1, -1, -1, -1, -1, -1,
		-1, -1, -1, -1, -1, -1, -1, -1,
		-1, -1, -1, -1, -1, -1, -1, -1,
		-1, -1, -1, -1, -1, -1, -1, -1,
		-1, -1, -1, -1, -1, -1, -1, -1,
		-1, -1, -1, -1, -1, -1, -1, -1,
		-1, -1, -1, -1, -1, -1, -1, -1,
		-1, -1, -1, -1, -1, -1, -1, -1,
		-1, -1, -1, -1, -1, -1, -1, -1,
		-1, -1, -1, -1, -1, -1, -1, -1,
		-1, -1, -1, -1, -1, -1, -1, -1,
		-1, -1, -1, -1, -1, -1, -1, -1,
		-1, -1, -1, -1, -1, -1, -1, -1,
		-1, -1, -1, -1, -1, -1, -1, -1,
		-1, -1, -1, -1, -1, -1, -1, -1,
		-1, -1, -1, -1, -1, -1, -1, -1,
		-1, -1, -1, -1, -1, -1, -1, -1,
		-1, -1, -1, -1, -1, -1, -1, -1,
		-1, -1, -1, -1, -1, -1, -1, -1,
		-1, -1, -1, -1, -1, -1, -1, -1,
		-1, -1, -1, -1, -1, -1, -1, -1,
		-1, -1, -1, -1, -1, -1, -1, -1,
		-1, -1, -1, -1, -1, -1, -1, -1,
		-1, -1, -1, -1, -1, -1, -1, -1,
		-1, -1, -1, -1, -1, -1, -1, -1,
		-1, -1, -1, -1, -1, -1, -1, -1,
		-1, -1, -1, -1, -1, -1, -1, -1,
		-1, -1, -1, -1, -1, -1, -1, -1,
		-1, -1, -1, -1, -1, -1, -1, -1,
		-1, -1, -1, -1, -1, -1, -1, -1,
		-1, -1, -1, -1, -1, -1, -1, -1,
		-1, -1, -1, -1, -1, -1, -1, -1,
		-1, -1, -1, -1, -1, -1, -1, -1,
		-1, -1, -1, -1, -1, -1, -1, -1,
		-1, -1, -1, -1, -1, -1, -1, -1,
		-1, -1, -1, -1, -1, -1, -1, -1,
		-1, -1, -1, -1, -1, -1, -1, -1,
		-1, -1, -1, -1, -1, -1, -1, -1,
		-1, -1, -1, -1, -1, -1, -1, -1,
		-1, -1, -1, -1, -1, -1, -1, -1,
		-1, -1, -1, -1, -1, -1, -1, -1,
		-1, -1, -1, -1, -1, -1, -1, -1,
		-1, -1, -1, -1, -1, -1, -1, -1,
		-1, -1, -1, -1, -1, -1, -1, -1,
		-1, -1, -1, -1, -1, -1, -1, -1,
		-1, -1, -1, -1, -1, -1, -1, -1,
		-1, -1, -1, -1, -1, -1, -1, -1,
		-1, -1, -1, -1, -1, -1, -1, -1,
		-1, -1, -1, -1, -1, -1, -1, -1,
		-1, -1, -1, -1, -1, -1, -1, -1,
		-1, -1, -1, -1, -1, -1, -1, -1,
		-1, -1, -1, -1, -1, -1, -1, -1,
		-1, -1, -1, -1, -1, -1, -1, -1,
		-1, -1, -1, -1, -1, -1, -1, -1,
		-1, -1, -1, -1, -1, -1, -1, -1,
		-1, -1, -1, -1, -1, -1, -1, -1,
		-1, -1, -1, -1, -1, -1, -1, -1,
		-1, -1, -1, -1, -1, -1, -1, -1,
		-1, -1, -1, -1, -1, -1, -1, -1,
		-1, -1, -1, -1, -1, -1, -1, -1,
		-1, -1, -1, -1, -1, -1, -1, -1,
		-1, -1, -1, -1, -1, -1, -1, -1,
		-1, -1, -1, -1, -1, -1, -1, -1,
		-1, -1, -1, -1, -1, -1, -1, -1,
		-1, -1, -1, -1, -1, -1, -1, -1,
		-1, -1, -1, -1, -1, -1, -1, -1,
		-1, -1, -1, -1, -1, -1, -1, -1,
		-1, -1, -1, -1, -1, -1, -1, -1,
		-1, -1, -1, -1, -1, -1, -1, -1,
		-1, -1, -1, -1, -1, -1, -1, -1,
		-1, -1, -1, -1, -1, -1, -1, -1,
		-1, -1, -1, -1, -1, -1, -1, -1,
		-1, -1, -1, -1, -1, -1, -1, -1,
		-1, -1, -1, -1, -1, -1, -1, -1,
		-1, -1, -1, -1, -1, -1, -1, -1,
		-1, -1, -1, -1, -1, -1, -1, -1,
		-1, -1, -1, -1, -1, -1, -1, -1,
		-1, -1, -1, -1, -1, -1, -1, -1,
		-1, -1, -1, -1, -1, -1, -1, -1,
		-1, -1, -1, -1, -1, -1, -1, -1,
		-1, -1, -1, -1, -1, -1, -1, -1,
		-1, -1, -1, -1, -1, -1, -1, -1,
		-1, -1, -1, -1, -1, -1, -1, -1,
		-1, -1, -1, -1, -1, -1, -1, -1,
		-1, -1, -1, -1, -1, -1, -1, -1,
		-1, -1, -1, -1, -1, -1, -1, -1,
		-1, -1, -1, -1, -1, -1, -1, -1,
		-1, -1, -1, -1, -1, -1, -1, -1,
		-1, -1, -1, -1, -1, -1, -1, -1,
		-1, -1, -1, -1, -1, -1, -1, -1,
		-1, -1, -1, -1, -1, -1, -1, -1,
		-1, -1, -1, -1, -1, -1, -1, -1,
		-1, -1, -1, -1, -1, -1, -1, -1,
		-1, -1, -1, -1, -1, -1, -1, -1,
		-1, -1, -1, -1, -1, -1, -1, -1,
		-1, -1, -1, -1, -1, -1, -1, -1,
		-1, -1, -1, -1, -1, -1, -1, -1,
		-1, -1, -1, -1, -1, -1, -1, -1,
		-1, -1, -1, -1, -1, -1, -1, -1,
		-1, -1, -1, -1, -1, -1, -1, -1,
		-1, -1, -1, -1, -1, -1, -1, -1,
		-1, -1, -1, -1, -1, -1, -1, -1,
		-1, -1, -1, -1, -1, -1, -1, -1,
		-1, -1, -1, -1, -1, -1, -1, -1,
		-1, -1, -1, -1, -1, -1, -1, -1,
		-1, -1, -1, -1, -1, -1, -1, -1,
		-1, -1, -1, -1, -1, -1, -1, -1,
		-1, -1, -1, -1, -1, -1, -1, -1,
		-1, -1, -1, -1, -1, -1, -1, -1,
		-1, -1, -1, -1, -1, -1, -1, -1,
		-1, -1, -1, -1, -1, -1, -1, -1,
		-1, -1, -1, -1, -1, -1, -1, -1,
		-1, -1, -1, -1, -1, -1, -1, -1,
		-1, -1, -1, -1, -1, -1, -1, -1,
		-1, -1, -1, -1, -1, -1, -1, -1,
		-1, -1, -1, -1, -1, -1, -1, -1,
		-1, -1, -1, -1, -1, -1, -1, -1,
		-1, -1, -1, -1, -1, -1, -1, -1,
		-1, -1, -1, -1, -1, -1, -1, -1,
		-1, -1, -1, -1, -1, -1, -1, -1,
		-1, -1, -1, -1, -1, -1, -1, -1,
		-1, -1, -1, -1, -1, -1, -1, -1,
		-1, -1, -1, -1, -1, -1, -1, -1,
		-1, -1, -1, -1, -1, -1, -1, -1,
		-1, -1, -1, -1, -1, -1, -1, -1,
		-1, -1, -1, -1, -1, -1, -1, -1,
		-1, -1, -1, -1, -1, -1, -1, -1,
		-1, -1, -1, -1, -1, -1, -1, -1,
		-1, -1, -1, -1, -1, -1, -1, -1,
		-1, -1, -1, -1, -1, -1, -1, -1,
		-1, -1, -1, -1, -1, -1, -1, -1,
		-1, -1, -1, -1, -1, -1, -1, -1,
		-1, -1, -1, -1, -1, -1, -1, -1,
		-1, -1, -1, -1, -1, -1, -1, -1,
		-1, -1, -1, -1, -1, -1, -1, -1,
		-1, -1, -1, -1, -1, -1, -1, -1,
		-1, -1, -1, -1, -1, -1, -1, -1,
		-1, -1, -1, -1, -1, -1, -1, -1,
		-1, -1, -1, -1, -1, -1, -1, -1,
		-1, -1, -1, -1, -1, -1, -1, -1,
		-1, -1, -1, -1, -1, -1, -1, -1,
		-1, -1, -1, -1, -1, -1, -1, -1,
		-1, -1, -1, -1, -1, -1, -1, -1,
		-1, -1, -1, -1, -1, -1, -1, -1,
		-1, -1, -1, -1, -1, -1, -1, -1,
		-1, -1, -1, -1, -1, -1, -1, -1,
		-1, -1, -1, -1, -1, -1, -1, -1,
		-1, -1, -1, -1, -1, -1, -1, -1,
		-1, -1, -1, -1, -1, -1, -1, -1,
		-1, -1, -1, -1, -1, -1, -1, -1,
		-1, -1, -1, -1, -1, -1, -1, -1,
		-1, -1, -1, -1, -1, -1, -1, -1,
		-1, -1, -1, -1, -1, -1, -1, -1,
		-1, -1, -1, -1, -1, -1, -1, -1,
		-1, -1, -1, -1, -1, -1, -1, -1,
		-1, -1, -1, -1, -1, -1, -1, -1,
		-1, -1, -1, -1, -1, -1, -1, -1,
		-1, -1, -1, -1, -1, -1, -1, -1,
		-1, -1, -1, -1, -1, -1, -1, -1,
		-1, -1, -1, -1, -1, -1, -1, -1,
		-1, -1, -1, -1, -1, -1, -1, -1,
		-1, -1, -1, -1, -1, -1, -1, -1,
		-1, -1, -1, -1, -1, -1, -1, -1,
		-1, -1, -1, -1, -1, -1, -1, -1,
		-1, -1, -1, -1, -1, -1, -1, -1,
		-1, -1, -1, -1, -1, -1, -1, -1,
		-1, -1, -1, -1, -1, -1, -1, -1,
		-1, -1, -1, -1, -1, -1, -1, -1,
		-1, -1, -1, -1, -1, -1, -1, -1,
		-1, -1, -1, -1, -1, -1, -1, -1,
		-1, -1, -1, -1, -1, -1, -1, -1,
		-1, -1, -1, -1, -1, -1, -1, -1,
		-1, -1, -1, -1, -1, -1, -1, -1,
		-1, -1, -1, -1, -1, -1, -1, -1,
		-1, -1, -1, -1, -1, -1, -1, -1,
		-1, -1, -1, -1, -1, -1, -1, -1,
		-1, -1, -1, -1, -1, -1, -1, -1,
		-1, -1, -1, -1, -1, -1, -1, -1,
		-1, -1, -1, -1, -1, -1, -1, -1,
		-1, -1, -1, -1, -1, -1, -1, -1,
		-1, -1, -1, -1, -1, -1, -1, -1,
		-1, -1, -1, -1, -1, -1, -1, -1,
		-1, -1, -1, -1, -1, -1, -1, -1,
		-1, -1, -1, -1, -1, -1, -1, -1,
		-1, -1, -1, -1, -1, -1, -1, -1,
		-1, -1, -1, -1, -1, -1, -1, -1,
		-1, -1, -1, -1, -1, -1, -1, -1,
		-1, -1, -1, -1, -1, -1, -1, -1,
		-1, -1, -1, -1, -1, -1, -1, -1,
		-1, -1, -1, -1, -1, -1, -1, -1,
		-1, -1, -1, -1, -1, -1, -1, -1,
		-1, -1, -1, -1, -1, -1, -1, -1,
		-1, -1, -1, -1, -1, -1, -1, -1,
		-1, -1, -1, -1, -1, -1, -1, -1,
		-1, -1, -1, -1, -1, -1, -1, -1,
		-1, -1, -1, -1, -1, -1, -1, -1,
		-1, -1, -1, -1, -1, -1, -1, -1,
		-1, -1, -1, -1, -1, -1, -1, -1,
		-1, -1, -1, -1, -1, -1, -1, -1,
		-1, -1, -1, -1, -1, -1, -1, -1,
		-1, -1, -1, -1, -1, -1, -1, -1,
		-1, -1, -1, -1, -1, -1, -1, -1,
		-1, -1, -1, -1, -1, -1, -1, -1,
		-1, -1, -1, -1, -1, -1, -1, -1,
		-1, -1, -1, -1, -1, -1, -1, -1,
		-1, -1, -1, -1, -1, -1, -1, -1,
		-1, -1, -1, -1, -1, -1, -1, -1,
		-1, -1, -1, -1, -1, -1, -1, -1,
		-1, -1, -1, -1, -1, -1, -1, -1,
		-1, -1, -1, -1, -1, -1, -1, -1,
		-1, -1, -1, -1, -1, -1, -1, -1,
		-1, -1, -1, -1, -1, -1, -1, -1,
		-1, -1, -1, -1, -1, -1, -1, -1,
		-1, -1, -1, -1, -1, -1, -1, -1,
		-1, -1, -1, -1, -1, -1, -1, -1,
		-1, -1, -1, -1, -1, -1, -1, -1,
		-1, -1, -1, -1, -1, -1, -1, -1,
		-1, -1, -1, -1, -1, -1, -1, -1,
		-1, -1, -1, -1, -1, -1, -1, -1,
		-1, -1, -1, -1, -1, -1, -1, -1,
		-1, -1, -1, -1, -1, -1, -1, -1,
		-1, -1, -1, -1, -1, -1, -1, -1,
		-1, -1, -1, -1, -1, -1, -1, -1,
		-1, -1, -1, -1, -1, -1, -1, -1,
		-1, -1, -1, -1, -1, -1, -1, -1,
		-1, -1, -1, -1, -1, -1, -1, -1,
		-1, -1, -1, -1, -1, -1, -1, -1,
		-1, -1, -1, -1, -1, -1, -1, -1,
		-1, -1, -1, -1, -1, -1, -1, -1,
		-1, -1, -1, -1, -1, -1, -1, -1,
		-1, -1, -1, -1, -1, -1, -1, -1,
		-1, -1, -1, -1, -1, -1, -1, -1,
		-1, -1, -1, -1, -1, -1, -1, -1,
		-1, -1, -1, -1, -1, -1, -1, -1,
		-1, -1, -1, -1, -1, -1, -1, -1,
		-1, -1, -1, -1, -1, -1, -1, -1,
		-1, -1, -1, -1, -1, -1, -1, -1,
		-1, -1, -1, -1, -1, -1, -1, -1,
		-1, -1, -1, -1, -1, -1, -1, -1,
		-1, -1, -1, -1, -1, -1, -1, -1,
		-1, -1, -1, -1, -1, -1, -1, -1,
		-1, -1, -1, -1, -1, -1, -1, -1,
		-1, -1, -1, -1, -1, -1, -1, -1,
		-1, -1, -1, -1, -1, -1, -1, -1,
		-1, -1, -1, -1, -1, -1, -1, -1,
		-1, -1, -1, -1, -1, -1, -1, -1,
		-1, -1, -1, -1, -1, -1, -1, -1,
		-1, -1, -1, -1, -1, -1, -1, -1,
		-1, -1, -1, -1, -1, -1, -1, -1,
		-1, -1, -1, -1, -1, -1, -1, -1,
		-1, -1, -1, -1, -1, -1, -1, -1,
		-1, -1, -1, -1, -1, -1, -1, -1,
		-1, -1, -1, -1, -1, -1, -1, -1,
		-1, -1, -1, -1, -1, -1, -1, -1,
		-1, -1, -1, -1, -1, -1, -1, -1,
		-1, -1, -1, -1, -1, -1, -1, -1,
		-1, -1, -1, -1, -1, -1, -1, -1,
		-1, -1, -1, -1, -1, -1, -1, -1,
		-1, -1, -1, -1, -1, -1, -1, -1,
		-1, -1, -1, -1, -1, -1, -1, -1,
		-1, -1, -1, -1, -1, -1, -1, -1,
		-1, -1, -1, -1, -1, -1, -1, -1,
		-1, -1, -1, -1, -1, -1, -1, -1,
		-1, -1, -1, -1, -1, -1, -1, -1,
		-1, -1, -1, -1, -1, -1, -1, -1,
		-1, -1, -1, -1, -1, -1, -1, -1,
		-1, -1, -1, -1, -1, -1, -1, -1,
		-1, -1, -1, -1, -1, -1, -1, -1,
		-1, -1, -1, -1, -1, -1, -1, -1,
		-1, -1, -1, -1, -1, -1, -1, -1,
		-1, -1, -1, -1, -1, -1, -1, -1,
		-1, -1, -1, -1, -1, -1, -1, -1,
		-1, -1, -1, -1, -1, -1, -1, -1,
		-1, -1, -1, -1, -1, -1, -1, -1,
		-1, -1, -1, -1, -1, -1, -1, -1,
		-1, -1, -1, -1, -1, -1, -1, -1,
		-1, -1, -1, -1, -1, -1, -1, -1,
		-1, -1, -1, -1, -1, -1, -1, -1,
		-1, -1, -1, -1, -1, -1, -1, -1,
		-1, -1, -1, -1, -1, -1, -1, -1,
		-1, -1, -1, -1, -1, -1, -1, -1,
		-1, -1, -1, -1, -1, -1, -1, -1,
		-1, -1, -1, -1, -1, -1, -1, -1,
		-1, -1, -1, -1, -1, -1, -1, -1,
		-1, -1, -1, -1, -1, -1, -1, -1,
		-1, -1, -1, -1, -1, -1, -1, -1,
		-1, -1, -1, -1, -1, -1, -1, -1,
		-1, -1, -1, -1, -1, -1, -1, -1,
		-1, -1, -1, -1, -1, -1, -1, -1,
		-1, -1, -1, -1, -1, -1, -1, -1,
		-1, -1, -1, -1, -1, -1, -1, -1,
		-1, -1, -1, -1, -1, -1, -1, -1,
		-1, -1, -1, -1, -1, -1, -1, -1,
		-1, -1, -1, -1, -1, -1, -1, -1,
		-1, -1, -1, -1, -1, -1, -1, -1,
		-1, -1, -1, -1, -1, -1, -1, -1,
		-1, -1, -1, -1, -1, -1, -1, -1,
		-1, -1, -1, -1, -1, -1, -1, -1,
		-1, -1, -1, -1, -1, -1, -1, -1,
		-1, -1, -1, -1, -1, -1, -1, -1,
		-1, -1, -1, -1, -1, -1, -1, -1,
		-1, -1, -1, -1, -1, -1, -1, -1,
		-1, -1, -1, -1, -1, -1, -1, -1,
		-1, -1, -1, -1, -1, -1, -1, -1,
		-1, -1, -1, -1, -1, -1, -1, -1,
		-1, -1, -1, -1, -1, -1, -1, -1,
		-1, -1, -1, -1, -1, -1, -1, -1,
		-1, -1, -1, -1, -1, -1, -1, -1,
		-1, -1, -1, -1, -1, -1, -1, -1,
		-1, -1, -1, -1, -1, -1, -1, -1,
		-1, -1, -1, -1, -1, -1, -1, -1,
		-1, -1, -1, -1, -1, -1, -1, -1,
		-1, -1, -1, -1, -1, -1, -1, -1,
		-1, -1, -1, -1, -1, -1, -1, -1,
		-1, -1, -1, -1, -1, -1, -1, -1,
		-1, -1, -1, -1, -1, -1, -1, -1,
		-1, -1, -1, -1, -1, -1, -1, -1,
		-1, -1, -1, -1, -1, -1, -1, -1,
		-1, -1, -1, -1, -1, -1, -1, -1,
		-1, -1, -1, -1, -1, -1, -1, -1,
		-1, -1, -1, -1, -1, -1, -1, -1,
		-1, -1, -1, -1, -1, -1, -1, -1,
		-1, -1, -1, -1, -1, -1, -1, -1,
		-1, -1, -1, -1, -1, -1, -1, -1,
		-1, -1, -1, -1, -1, -1, -1, -1,
		-1, -1, -1, -1, -1, -1, -1, -1,
		-1, -1, -1, -1, -1, -1, -1, -1,
		-1, -1, -1, -1, -1, -1, -1, -1,
		-1, -1, -1, -1, -1, -1, -1, -1,
		-1, -1, -1, -1, -1, -1, -1, -1,
		-1, -1, -1, -1, -1, -1, -1, -1,
		-1, -1, -1, -1, -1, -1, -1, -1,
		-1, -1, -1, -1, -1, -1, -1, -1,
		-1, -1, -1, -1, -1, -1, -1, -1,
		-1, -1, -1, -1, -1, -1, -1, -1,
		-1, -1, -1, -1, -1, -1, -1, -1,
		-1, -1, -1, -1, -1, -1, -1, -1,
		-1, -1, -1, -1, -1, -1, -1, -1,
		-1, -1, -1, -1, -1, -1, -1, -1,
		-1, -1, -1, -1, -1, -1, -1, -1,
		-1, -1, -1, -1, -1, -1, -1, -1,
		-1, -1, -1, -1, -1, -1, -1, -1,
		-1, -1, -1, -1, -1, -1, -1, -1,
		-1, -1, -1, -1, -1, -1, -1, -1,
		-1, -1, -1, -1, -1, -1, -1, -1,
		-1, -1, -1, -1, -1, -1, -1, -1,
		-1, -1, -1, -1, -1, -1, -1, -1,
		-1, -1, -1, -1, -1, -1, -1, -1,
		-1, -1, -1, -1, -1, -1, -1, -1,
		-1, -1, -1, -1, -1, -1, -1, -1,
		-1, -1, -1, -1, -1, -1, -1, -1,
		-1, -1, -1, -1, -1, -1, -1, -1,
		-1, -1, -1, -1, -1, -1, -1, -1,
		-1, -1, -1, -1, -1, -1, -1, -1,
		-1, -1, -1, -1, -1, -1, -1, -1,
		-1, -1, -1, -1, -1, -1, -1, -1,
		-1, -1, -1, -1, -1, -1, -1, -1,
		-1, -1, -1, -1, -1, -1, -1, -1,
		-1, -1, -1, -1, -1, -1, -1, -1,
		-1, -1, -1, -1, -1, -1, -1, -1,
		-1, -1, -1, -1, -1, -1, -1, -1,
		-1, -1, -1, -1, -1, -1, -1, -1,
		-1, -1, -1, -1, -1, -1, -1, -1,
		-1, -1, -1, -1, -1, -1, -1, -1,
		-1, -1, -1, -1, -1, -1, -1, -1,
		-1, -1, -1, -1, -1, -1, -1, -1,
		-1, -1, -1, -1, -1, -1, -1, -1,
		-1, -1, -1, -1, -1, -1, -1, -1,
		-1, -1, -1, -1, -1, -1, -1, -1,
		-1, -1, -1, -1, -1, -1, -1, -1,
		-1, -1, -1, -1, -1, -1, -1, -1,
		-1, -1, -1, -1, -1, -1, -1, -1,
		-1, -1, -1, -1, -1, -1, -1, -1,
		-1, -1, -1, -1, -1, -1, -1, -1,
		-1, -1, -1, -1, -1, -1, -1, -1,
		-1, -1, -1, -1, -1, -1, -1, -1,
		-1, -1, -1, -1, -1, -1, -1, -1,
		-1, -1, -1, -1, -1, -1, -1, -1,
		-1, -1, -1, -1, -1, -1, -1, -1,
		-1, -1, -1, -1, -1, -1, -1, -1,
		-1, -1, -1, -1, -1, -1, -1, -1,
		-1, -1, -1, -1, -1, -1, -1, -1,
		-1, -1, -1, -1, -1, -1, -1, -1,
		-1, -1, -1, -1, -1, -1, -1, -1,
		-1, -1, -1, -1, -1, -1, -1, -1,
		-1, -1, -1, -1, -1, -1, -1, -1,
		-1, -1, -1, -1, -1, -1, -1, -1,
		-1, -1, -1, -1, -1, -1, -1, -1,
		-1, -1, -1, -1, -1, -1, -1, -1,
		-1, -1, -1, -1, -1, -1, -1, -1,
		-1, -1, -1, -1, -1, -1, -1, -1,
		-1, -1, -1, -1, -1, -1, -1, -1,
		-1, -1, -1, -1, -1, -1, -1, -1,
		-1, -1, -1, -1, -1, -1, -1, -1,
		-1, -1, -1, -1, -1, -1, -1, -1,
		-1, -1, -1, -1, -1, -1, -1, -1,
		-1, -1, -1, -1, -1, -1, -1, -1,
		-1, -1, -1, -1, -1, -1, -1, -1,
		-1, -1, -1, -1, -1, -1, -1, -1,
		-1, -1, -1, -1, -1, -1, -1, -1,
		-1, -1, -1, -1, -1, -1, -1, -1,
		-1, -1, -1, -1, -1, -1, -1, -1,
		-1, -1, -1, -1, -1, -1, -1, -1,
		-1, -1, -1, -1, -1, -1, -1, -1,
		-1, -1, -1, -1, -1, -1, -1, -1,
		-1, -1, -1, -1, -1, -1, -1, -1,
		-1, -1, -1, -1, -1, -1, -1, -1,
		-1, -1, -1, -1, -1, -1, -1, -1,
		-1, -1, -1, -1, -1, -1, -1, -1,
		-1, -1, -1, -1, -1, -1, -1, -1,
		-1, -1, -1, -1, -1, -1, -1, -1,
		-1, -1, -1, -1, -1, -1, -1, -1,
		-1, -1, -1, -1, -1, -1, -1, -1,
		-1, -1, -1, -1, -1, -1, -1, -1,
		-1, -1, -1, -1, -1, -1, -1, -1,
		-1, -1, -1, -1, -1, -1, -1, -1,
		-1, -1, -1, -1, -1, -1, -1, -1,
		-1, -1, -1, -1, -1, -1, -1, -1,
		-1, -1, -1, -1, -1, -1, -1, -1,
		-1, -1, -1, -1, -1, -1, -1, -1,
		-1, -1, -1, -1, -1, -1, -1, -1,
		-1, -1, -1, -1, -1, -1, -1, -1,
		-1, -1, -1, -1, -1, -1, -1, -1,
		-1, -1, -1, -1, -1, -1, -1, -1,
		-1, -1, -1, -1, -1, -1, -1, -1,
		-1, -1, -1, -1, -1, -1, -1, -1,
		-1, -1, -1, -1, -1, -1, -1, -1,
		-1, -1, -1, -1, -1, -1, -1, -1,
		-1, -1, -1, -1, -1, -1, -1, -1,
		-1, -1, -1, -1, -1, -1, -1, -1,
		-1, -1, -1, -1, -1, -1, -1, -1,
		-1, -1, -1, -1, -1, -1, -1, -1,
		-1, -1, -1, -1, -1, -1, -1, -1,
		-1, -1, -1, -1, -1, -1, -1, -1,
		-1, -1, -1, -1, -1, -1, -1, -1,
		-1, -1, -1, -1, -1, -1, -1, -1,
		-1, -1, -1, -1, -1, -1, -1, -1,
		-1, -1, -1, -1, -1, -1, -1, -1,
		-1, -1, -1, -1, -1, -1, -1, -1,
		-1, -1, -1, -1, -1, -1, -1, -1,
		-1, -1, -1, -1, -1, -1, -1, -1,
		-1, -1, -1, -1, -1, -1, -1, -1,
		-1, -1, -1, -1, -1, -1, -1, -1,
		-1, -1, -1, -1, -1, -1, -1, -1,
		-1, -1, -1, -1, -1, -1, -1, -1,
		-1, -1, -1, -1, -1, -1, -1, -1,
		-1, -1, -1, -1, -1, -1, -1, -1,
		-1, -1, -1, -1, -1, -1, -1, -1,
		-1, -1, -1, -1, -1, -1, -1, -1,
		-1, -1, -1, -1, -1, -1, -1, -1,
		-1, -1, -1, -1, -1, -1, -1, -1,
		-1, -1, -1, -1, -1, -1, -1, -1,
		-1, -1, -1, -1, -1, -1, -1, -1,
		-1, -1, -1, -1, -1, -1, -1, -1,
		-1, -1, -1, 0
	};
	
	static const short _flux_trans_offsets[] = {
		0, 1, 2, 3, 4, 5, 6, 7,
		8, 9, 10, 11, 12, 13, 14, 15,
		16, 17, 18, 19, 20, 21, 22, 23,
		24, 25, 26, 27, 28, 29, 30, 31,
		32, 33, 34, 35, 36, 37, 38, 39,
		40, 41, 42, 43, 44, 45, 46, 47,
		48, 49, 50, 51, 52, 53, 54, 55,
		56, 57, 58, 59, 60, 61, 62, 63,
		64, 65, 66, 67, 68, 69, 70, 71,
		72, 73, 74, 75, 76, 77, 78, 79,
		80, 81, 82, 83, 84, 85, 86, 87,
		88, 89, 90, 91, 92, 93, 94, 95,
		96, 97, 98, 99, 100, 101, 102, 103,
		104, 105, 106, 107, 108, 109, 110, 111,
		112, 113, 114, 115, 116, 117, 118, 119,
		120, 121, 122, 123, 124, 125, 126, 127,
		128, 129, 130, 131, 132, 133, 134, 135,
		136, 137, 138, 139, 140, 141, 142, 143,
		144, 145, 146, 147, 148, 149, 150, 151,
		152, 153, 154, 155, 156, 157, 158, 159,
		160, 161, 162, 163, 164, 165, 166, 167,
		168, 169, 170, 171, 172, 173, 174, 175,
		176, 177, 178, 179, 180, 181, 182, 183,
		184, 185, 186, 187, 188, 189, 190, 191,
		192, 193, 194, 195, 196, 197, 198, 199,
		200, 201, 202, 203, 204, 205, 206, 207,
		208, 209, 210, 211, 212, 213, 214, 215,
		216, 217, 218, 219, 220, 221, 222, 223,
		224, 225, 226, 227, 228, 229, 230, 231,
		232, 233, 234, 235, 236, 237, 238, 239,
		240, 241, 242, 243, 244, 245, 246, 247,
		248, 249, 250, 251, 252, 253, 254, 255,
		256, 257, 258, 259, 260, 261, 262, 263,
		264, 265, 266, 267, 268, 269, 270, 271,
		272, 273, 274, 275, 276, 277, 278, 279,
		280, 281, 282, 283, 284, 285, 286, 287,
		288, 289, 290, 291, 292, 293, 294, 295,
		296, 297, 298, 299, 300, 301, 302, 303,
		304, 305, 306, 307, 308, 309, 310, 311,
		312, 313, 314, 315, 316, 317, 318, 319,
		320, 321, 322, 323, 324, 325, 326, 327,
		328, 329, 330, 331, 332, 333, 334, 335,
		336, 337, 338, 339, 340, 341, 342, 343,
		344, 345, 346, 347, 348, 349, 350, 351,
		352, 353, 354, 355, 356, 357, 358, 359,
		360, 361, 362, 363, 364, 365, 366, 367,
		368, 369, 370, 371, 372, 373, 374, 375,
		376, 377, 378, 379, 380, 381, 382, 383,
		384, 385, 386, 387, 388, 389, 390, 391,
		392, 393, 394, 395, 396, 397, 398, 399,
		400, 401, 402, 403, 404, 405, 406, 407,
		408, 409, 410, 411, 412, 413, 414, 415,
		416, 417, 418, 419, 420, 421, 422, 423,
		424, 425, 426, 427, 428, 429, 430, 431,
		432, 433, 434, 435, 436, 437, 438, 439,
		440, 441, 442, 443, 444, 445, 446, 447,
		448, 449, 450, 451, 452, 453, 454, 455,
		456, 457, 458, 459, 460, 461, 462, 463,
		464, 465, 466, 467, 468, 469, 470, 471,
		472, 473, 474, 475, 476, 477, 478, 479,
		480, 481, 482, 483, 484, 485, 486, 487,
		488, 489, 490, 491, 492, 493, 494, 495,
		496, 497, 498, 499, 500, 501, 502, 503,
		504, 505, 506, 507, 508, 509, 510, 511,
		512, 513, 514, 515, 516, 517, 518, 519,
		520, 521, 522, 523, 524, 525, 526, 527,
		528, 529, 530, 531, 532, 533, 534, 535,
		536, 537, 538, 539, 540, 541, 542, 543,
		544, 545, 546, 547, 548, 549, 550, 551,
		552, 553, 554, 555, 556, 557, 558, 559,
		560, 561, 562, 563, 564, 565, 566, 567,
		568, 569, 570, 571, 572, 573, 574, 575,
		576, 577, 578, 579, 580, 581, 582, 583,
		584, 585, 586, 587, 588, 589, 590, 591,
		592, 593, 594, 595, 596, 597, 598, 599,
		600, 601, 602, 603, 604, 605, 606, 607,
		608, 609, 610, 611, 612, 613, 614, 615,
		616, 617, 618, 619, 620, 621, 622, 623,
		624, 625, 626, 627, 628, 629, 630, 631,
		632, 633, 634, 635, 636, 637, 638, 639,
		640, 641, 642, 643, 644, 645, 646, 647,
		648, 649, 650, 651, 652, 653, 654, 655,
		656, 657, 658, 659, 660, 661, 662, 663,
		664, 665, 666, 667, 668, 669, 670, 671,
		672, 673, 674, 675, 676, 677, 678, 679,
		680, 681, 682, 683, 684, 685, 686, 687,
		688, 689, 690, 691, 692, 693, 694, 695,
		696, 697, 698, 699, 700, 701, 702, 703,
		704, 705, 706, 707, 708, 709, 710, 711,
		712, 713, 714, 715, 716, 717, 718, 719,
		720, 721, 722, 723, 724, 725, 726, 727,
		728, 729, 730, 731, 732, 733, 734, 735,
		736, 737, 738, 739, 740, 741, 742, 743,
		744, 745, 746, 747, 748, 749, 750, 751,
		752, 753, 754, 755, 756, 757, 758, 759,
		760, 761, 762, 763, 764, 765, 766, 767,
		768, 769, 770, 771, 772, 773, 774, 775,
		776, 777, 778, 779, 780, 781, 782, 783,
		784, 785, 786, 787, 788, 789, 790, 791,
		792, 793, 794, 795, 796, 797, 798, 799,
		800, 801, 802, 803, 804, 805, 806, 807,
		808, 809, 810, 811, 812, 813, 814, 815,
		816, 817, 818, 819, 820, 821, 822, 823,
		824, 825, 826, 827, 828, 829, 830, 831,
		832, 833, 834, 835, 836, 837, 838, 839,
		840, 841, 842, 843, 844, 845, 846, 847,
		848, 849, 850, 851, 852, 853, 854, 855,
		856, 857, 858, 859, 860, 861, 862, 863,
		864, 865, 866, 867, 868, 869, 870, 871,
		872, 873, 874, 875, 876, 877, 878, 879,
		880, 881, 882, 883, 884, 885, 886, 887,
		888, 889, 890, 891, 892, 893, 894, 895,
		896, 897, 898, 899, 900, 901, 902, 903,
		904, 905, 906, 907, 908, 909, 910, 911,
		912, 913, 914, 915, 916, 917, 918, 919,
		920, 921, 922, 923, 924, 925, 926, 927,
		928, 929, 930, 931, 932, 933, 934, 935,
		936, 937, 938, 939, 940, 941, 942, 943,
		944, 945, 946, 947, 948, 949, 950, 951,
		952, 953, 954, 955, 956, 957, 958, 959,
		960, 961, 962, 963, 964, 965, 966, 967,
		968, 969, 970, 971, 972, 973, 974, 975,
		976, 977, 978, 979, 980, 981, 982, 983,
		984, 985, 986, 987, 988, 989, 990, 991,
		992, 993, 994, 995, 996, 997, 998, 999,
		1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007,
		1008, 1009, 1010, 1011, 1012, 1013, 1014, 1015,
		1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023,
		1024, 1025, 1026, 1027, 1028, 1029, 1030, 1031,
		1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039,
		1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047,
		1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055,
		1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063,
		1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071,
		1072, 1073, 1074, 1075, 1076, 1077, 1078, 1079,
		1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087,
		1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095,
		1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103,
		1104, 1105, 1106, 1107, 1108, 1109, 1110, 1111,
		1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119,
		1120, 1121, 1122, 1123, 1124, 1125, 1126, 1127,
		1128, 1129, 1130, 1131, 1132, 1133, 1134, 1135,
		1136, 1137, 1138, 1139, 1140, 1141, 1142, 1143,
		1144, 1145, 1146, 1147, 1148, 1149, 1150, 1151,
		1152, 1153, 1154, 1155, 1156, 1157, 1158, 1159,
		1160, 1161, 1162, 1163, 1164, 1165, 1166, 1167,
		1168, 1169, 1170, 1171, 1172, 1173, 1174, 1175,
		1176, 1177, 1178, 1179, 1180, 1181, 1182, 1183,
		1184, 1185, 1186, 1187, 1188, 1189, 1190, 1191,
		1192, 1193, 1194, 1195, 1196, 1197, 1198, 1199,
		1200, 1201, 1202, 1203, 1204, 1205, 1206, 1207,
		1208, 1209, 1210, 1211, 1212, 1213, 1214, 1215,
		1216, 1217, 1218, 1219, 1220, 1221, 1222, 1223,
		1224, 1225, 1226, 1227, 1228, 1229, 1230, 1231,
		1232, 1233, 1234, 1235, 1236, 1237, 1238, 1239,
		1240, 1241, 1242, 1243, 1244, 1245, 1246, 1247,
		1248, 1249, 1250, 1251, 1252, 1253, 1254, 1255,
		1256, 1257, 1258, 1259, 1260, 1261, 1262, 1263,
		1264, 1265, 1266, 1267, 1268, 1269, 1270, 1271,
		1272, 1273, 1274, 1275, 1276, 1277, 1278, 1279,
		1280, 1281, 1282, 1283, 1284, 1285, 1286, 1287,
		1288, 1289, 1290, 1291, 1292, 1293, 1294, 1295,
		1296, 1297, 1298, 1299, 1300, 1301, 1302, 1303,
		1304, 1305, 1306, 1307, 1308, 1309, 1310, 1311,
		1312, 1313, 1314, 1315, 1316, 1317, 1318, 1319,
		1320, 1321, 1322, 1323, 1324, 1325, 1326, 1327,
		1328, 1329, 1330, 1331, 1332, 1333, 1334, 1335,
		1336, 1337, 1338, 1339, 1340, 1341, 1342, 1343,
		1344, 1345, 1346, 1347, 1348, 1349, 1350, 1351,
		1352, 1353, 1354, 1355, 1356, 1357, 1358, 1359,
		1360, 1361, 1362, 1363, 1364, 1365, 1366, 1367,
		1368, 1369, 1370, 1371, 1372, 1373, 1374, 1375,
		1376, 1377, 1378, 1379, 1380, 1381, 1382, 1383,
		1384, 1385, 1386, 1387, 1388, 1389, 1390, 1391,
		1392, 1393, 1394, 1395, 1396, 1397, 1398, 1399,
		1400, 1401, 1402, 1403, 1404, 1405, 1406, 1407,
		1408, 1409, 1410, 1411, 1412, 1413, 1414, 1415,
		1416, 1417, 1418, 1419, 1420, 1421, 1422, 1423,
		1424, 1425, 1426, 1427, 1428, 1429, 1430, 1431,
		1432, 1433, 1434, 1435, 1436, 1437, 1438, 1439,
		1440, 1441, 1442, 1443, 1444, 1445, 1446, 1447,
		1448, 1449, 1450, 1451, 1452, 1453, 1454, 1455,
		1456, 1457, 1458, 1459, 1460, 1461, 1462, 1463,
		1464, 1465, 1466, 1467, 1468, 1469, 1470, 1471,
		1472, 1473, 1474, 1475, 1476, 1477, 1478, 1479,
		1480, 1481, 1482, 1483, 1484, 1485, 1486, 1487,
		1488, 1489, 1490, 1491, 1492, 1493, 1494, 1495,
		1496, 1497, 1498, 1499, 1500, 1501, 1502, 1503,
		1504, 1505, 1506, 1507, 1508, 1509, 1510, 1511,
		1512, 1513, 1514, 1515, 1516, 1517, 1518, 1519,
		1520, 1521, 1522, 1523, 1524, 1525, 1526, 1527,
		1528, 1529, 1530, 1531, 1532, 1533, 1534, 1535,
		1536, 1537, 1538, 1539, 1540, 1541, 1542, 1543,
		1544, 1545, 1546, 1547, 1548, 1549, 1550, 1551,
		1552, 1553, 1554, 1555, 1556, 1557, 1558, 1559,
		1560, 1561, 1562, 1563, 1564, 1565, 1566, 1567,
		1568, 1569, 1570, 1571, 1572, 1573, 1574, 1575,
		1576, 1577, 1578, 1579, 1580, 1581, 1582, 1583,
		1584, 1585, 1586, 1587, 1588, 1589, 1590, 1591,
		1592, 1593, 1594, 1595, 1596, 1597, 1598, 1599,
		1600, 1601, 1602, 1603, 1604, 1605, 1606, 1607,
		1608, 1609, 1610, 1611, 1612, 1613, 1614, 1615,
		1616, 1617, 1618, 1619, 1620, 1621, 1622, 1623,
		1624, 1625, 1626, 1627, 1628, 1629, 1630, 1631,
		1632, 1633, 1634, 1635, 1636, 1637, 1638, 1639,
		1640, 1641, 1642, 1643, 1644, 1645, 1646, 1647,
		1648, 1649, 1650, 1651, 1652, 1653, 1654, 1655,
		1656, 1657, 1658, 1659, 1660, 1661, 1662, 1663,
		1664, 1665, 1666, 1667, 1668, 1669, 1670, 1671,
		1672, 1673, 1674, 1675, 1676, 1677, 1678, 1679,
		1680, 1681, 1682, 1683, 1684, 1685, 1686, 1687,
		1688, 1689, 1690, 1691, 1692, 1693, 1694, 1695,
		1696, 1697, 1698, 1699, 1700, 1701, 1702, 1703,
		1704, 1705, 1706, 1707, 1708, 1709, 1710, 1711,
		1712, 1713, 1714, 1715, 1716, 1717, 1718, 1719,
		1720, 1721, 1722, 1723, 1724, 1725, 1726, 1727,
		1728, 1729, 1730, 1731, 1732, 1733, 1734, 1735,
		1736, 1737, 1738, 1739, 1740, 1741, 1742, 1743,
		1744, 1745, 1746, 1747, 1748, 1749, 1750, 1751,
		1752, 1753, 1754, 1755, 1756, 1757, 1758, 1759,
		1760, 1761, 1762, 1763, 1764, 1765, 1766, 1767,
		1768, 1769, 1770, 1771, 1772, 1773, 1774, 1775,
		1776, 1777, 1778, 1779, 1780, 1781, 1782, 1783,
		1784, 1785, 1786, 1787, 1788, 1789, 1790, 1791,
		1792, 1793, 1794, 1795, 1796, 1797, 1798, 1799,
		1800, 1801, 1802, 1803, 1804, 1805, 1806, 1807,
		1808, 1809, 1810, 1811, 1812, 1813, 1814, 1815,
		1816, 1817, 1818, 1819, 1820, 1821, 1822, 1823,
		1824, 1825, 1826, 1827, 1828, 1829, 1830, 1831,
		1832, 1833, 1834, 1835, 1836, 1837, 1838, 1839,
		1840, 1841, 1842, 1843, 1844, 1845, 1846, 1847,
		1848, 1849, 1850, 1851, 1852, 1853, 1854, 1855,
		1856, 1857, 1858, 1859, 1860, 1861, 1862, 1863,
		1864, 1865, 1866, 1867, 1868, 1869, 1870, 1871,
		1872, 1873, 1874, 1875, 1876, 1877, 1878, 1879,
		1880, 1881, 1882, 1883, 1884, 1885, 1886, 1887,
		1888, 1889, 1890, 1891, 1892, 1893, 1894, 1895,
		1896, 1897, 1898, 1899, 1900, 1901, 1902, 1903,
		1904, 1905, 1906, 1907, 1908, 1909, 1910, 1911,
		1912, 1913, 1914, 1915, 1916, 1917, 1918, 1919,
		1920, 1921, 1922, 1923, 1924, 1925, 1926, 1927,
		1928, 1929, 1930, 1931, 1932, 1933, 1934, 1935,
		1936, 1937, 1938, 1939, 1940, 1941, 1942, 1943,
		1944, 1945, 1946, 1947, 1948, 1949, 1950, 1951,
		1952, 1953, 1954, 1955, 1956, 1957, 1958, 1959,
		1960, 1961, 1962, 1963, 1964, 1965, 1966, 1967,
		1968, 1969, 1970, 1971, 1972, 1973, 1974, 1975,
		1976, 1977, 1978, 1979, 1980, 1981, 1982, 1983,
		1984, 1985, 1986, 1987, 1988, 1989, 1990, 1991,
		1992, 1993, 1994, 1995, 1996, 1997, 1998, 1999,
		2000, 2001, 2002, 2003, 2004, 2005, 2006, 2007,
		2008, 2009, 2010, 2011, 2012, 2013, 2014, 2015,
		2016, 2017, 2018, 2019, 2020, 2021, 2022, 2023,
		2024, 2025, 2026, 2027, 2028, 2029, 2030, 2031,
		2032, 2033, 2034, 2035, 2036, 2037, 2038, 2039,
		2040, 2041, 2042, 2043, 2044, 2045, 2046, 2047,
		2048, 2049, 2050, 2051, 2052, 2053, 2054, 2055,
		2056, 2057, 2058, 2059, 2060, 2061, 2062, 2063,
		2064, 2065, 2066, 2067, 2068, 2069, 2070, 2071,
		2072, 2073, 2074, 2075, 2076, 2077, 2078, 2079,
		2080, 2081, 2082, 2083, 2084, 2085, 2086, 2087,
		2088, 2089, 2090, 2091, 2092, 2093, 2094, 2095,
		2096, 2097, 2098, 2099, 2100, 2101, 2102, 2103,
		2104, 2105, 2106, 2107, 2108, 2109, 2110, 2111,
		2112, 2113, 2114, 2115, 2116, 2117, 2118, 2119,
		2120, 2121, 2122, 2123, 2124, 2125, 2126, 2127,
		2128, 2129, 2130, 2131, 2132, 2133, 2134, 2135,
		2136, 2137, 2138, 2139, 2140, 2141, 2142, 2143,
		2144, 2145, 2146, 2147, 2148, 2149, 2150, 2151,
		2152, 2153, 2154, 2155, 2156, 2157, 2158, 2159,
		2160, 2161, 2162, 2163, 2164, 2165, 2166, 2167,
		2168, 2169, 2170, 2171, 2172, 2173, 2174, 2175,
		2176, 2177, 2178, 2179, 2180, 2181, 2182, 2183,
		2184, 2185, 2186, 2187, 2188, 2189, 2190, 2191,
		2192, 2193, 2194, 2195, 2196, 2197, 2198, 2199,
		2200, 2201, 2202, 2203, 2204, 2205, 2206, 2207,
		2208, 2209, 2210, 2211, 2212, 2213, 2214, 2215,
		2216, 2217, 2218, 2219, 2220, 2221, 2222, 2223,
		2224, 2225, 2226, 2227, 2228, 2229, 2230, 2231,
		2232, 2233, 2234, 2235, 2236, 2237, 2238, 2239,
		2240, 2241, 2242, 2243, 2244, 2245, 2246, 2247,
		2248, 2249, 2250, 2251, 2252, 2253, 2254, 2255,
		2256, 2257, 2258, 2259, 2260, 2261, 2262, 2263,
		2264, 2265, 2266, 2267, 2268, 2269, 2270, 2271,
		2272, 2273, 2274, 2275, 2276, 2277, 2278, 2279,
		2280, 2281, 2282, 2283, 2284, 2285, 2286, 2287,
		2288, 2289, 2290, 2291, 2292, 2293, 2294, 2295,
		2296, 2297, 2298, 2299, 2300, 2301, 2302, 2303,
		2304, 2305, 2306, 2307, 2308, 2309, 2310, 2311,
		2312, 2313, 2314, 2315, 2316, 2317, 2318, 2319,
		2320, 2321, 2322, 2323, 2324, 2325, 2326, 2327,
		2328, 2329, 2330, 2331, 2332, 2333, 2334, 2335,
		2336, 2337, 2338, 2339, 2340, 2341, 2342, 2343,
		2344, 2345, 2346, 2347, 2348, 2349, 2350, 2351,
		2352, 2353, 2354, 2355, 2356, 2357, 2358, 2359,
		2360, 2361, 2362, 2363, 2364, 2365, 2366, 2367,
		2368, 2369, 2370, 2371, 2372, 2373, 2374, 2375,
		2376, 2377, 2378, 2379, 2380, 2381, 2382, 2383,
		2384, 2385, 2386, 2387, 2388, 2389, 2390, 2391,
		2392, 2393, 2394, 2395, 2396, 2397, 2398, 2399,
		2400, 2401, 2402, 2403, 2404, 2405, 2406, 2407,
		2408, 2409, 2410, 2411, 2412, 2413, 2414, 2415,
		2416, 2417, 2418, 2419, 2420, 2421, 2422, 2423,
		2424, 2425, 2426, 2427, 2428, 2429, 2430, 2431,
		2432, 2433, 2434, 2435, 2436, 2437, 2438, 2439,
		2440, 2441, 2442, 2443, 2444, 2445, 2446, 2447,
		2448, 2449, 2450, 2451, 2452, 2453, 2454, 2455,
		2456, 2457, 2458, 2459, 2460, 2461, 2462, 2463,
		2464, 2465, 2466, 2467, 2468, 2469, 2470, 2471,
		2472, 2473, 2474, 2475, 2476, 2477, 2478, 2479,
		2480, 2481, 2482, 2483, 2484, 2485, 2486, 2487,
		2488, 2489, 2490, 2491, 2492, 2493, 2494, 2495,
		2496, 2497, 2498, 2499, 2500, 2501, 2502, 2503,
		2504, 2505, 2506, 2507, 2508, 2509, 2510, 2511,
		2512, 2513, 2514, 2515, 2516, 2517, 2518, 2519,
		2520, 2521, 2522, 2523, 2524, 2525, 2526, 2527,
		2528, 2529, 2530, 2531, 2532, 2533, 2534, 2535,
		2536, 2537, 2538, 2539, 2540, 2541, 2542, 2543,
		2544, 2545, 2546, 2547, 2548, 2549, 2550, 2551,
		2552, 2553, 2554, 2555, 2556, 2557, 2558, 2559,
		2560, 2561, 2562, 2563, 2564, 2565, 2566, 2567,
		2568, 2569, 2570, 2571, 2572, 2573, 2574, 2575,
		2576, 2577, 2578, 2579, 2580, 2581, 2582, 2583,
		2584, 2585, 2586, 2587, 2588, 2589, 2590, 2591,
		2592, 2593, 2594, 2595, 2596, 2597, 2598, 2599,
		2600, 2601, 2602, 2603, 2604, 2605, 2606, 2607,
		2608, 2609, 2610, 2611, 2612, 2613, 2614, 2615,
		2616, 2617, 2618, 2619, 2620, 2621, 2622, 2623,
		2624, 2625, 2626, 2627, 2628, 2629, 2630, 2631,
		2632, 2633, 2634, 2635, 2636, 2637, 2638, 2639,
		2640, 2641, 2642, 2643, 2644, 2645, 2646, 2647,
		2648, 2649, 2650, 2651, 2652, 2653, 2654, 2655,
		2656, 2657, 2658, 2659, 2660, 2661, 2662, 2663,
		2664, 2665, 2666, 2667, 2668, 2669, 2670, 2671,
		2672, 2673, 2674, 2675, 2676, 2677, 2678, 2679,
		2680, 2681, 2682, 2683, 2684, 2685, 2686, 2687,
		2688, 2689, 2690, 2691, 2692, 2693, 2694, 2695,
		2696, 2697, 2698, 2699, 2700, 2701, 2702, 2703,
		2704, 2705, 2706, 2707, 2708, 2709, 2710, 2711,
		2712, 2713, 2714, 2715, 2716, 2717, 2718, 2719,
		2720, 2721, 2722, 2723, 2724, 2725, 2726, 2727,
		2728, 2729, 2730, 2731, 2732, 2733, 2734, 2735,
		2736, 2737, 2738, 2739, 2740, 2741, 2742, 2743,
		2744, 2745, 2746, 2747, 2748, 2749, 2750, 2751,
		2752, 2753, 2754, 2755, 2756, 2757, 2758, 2759,
		2760, 2761, 2762, 2763, 2764, 2765, 2766, 2767,
		2768, 2769, 2770, 2771, 2772, 2773, 2774, 2775,
		2776, 2777, 2778, 2779, 2780, 2781, 2782, 2783,
		2784, 2785, 2786, 2787, 2788, 2789, 2790, 2791,
		2792, 2793, 2794, 2795, 2796, 2797, 2798, 2799,
		2800, 2801, 2802, 2803, 2804, 2805, 2806, 2807,
		2808, 2809, 2810, 2811, 2812, 2813, 2814, 2815,
		2816, 2817, 2818, 2819, 2820, 2821, 2822, 2823,
		2824, 2825, 2826, 2827, 2828, 2829, 2830, 2831,
		2832, 2833, 2834, 2835, 2836, 2837, 2838, 2839,
		2840, 2841, 2842, 2843, 2844, 2845, 2846, 2847,
		2848, 2849, 2850, 2851, 2852, 2853, 2854, 2855,
		2856, 2857, 2858, 2859, 2860, 2861, 2862, 2863,
		2864, 2865, 2866, 2867, 2868, 2869, 2870, 2871,
		2872, 2873, 2874, 2875, 2876, 2877, 2878, 2879,
		2880, 2881, 2882, 2883, 2884, 2885, 2886, 2887,
		2888, 2889, 2890, 2891, 2892, 2893, 2894, 2895,
		2896, 2897, 2898, 2899, 2900, 2901, 2902, 2903,
		2904, 2905, 2906, 2907, 2908, 2909, 2910, 2911,
		2912, 2913, 2914, 2915, 2916, 2917, 2918, 2919,
		2920, 2921, 2922, 2923, 2924, 2925, 2926, 2927,
		2928, 2929, 2930, 2931, 2932, 2933, 2934, 2935,
		2936, 2937, 2938, 2939, 2940, 2941, 2942, 2943,
		2944, 2945, 2946, 2947, 2948, 2949, 2950, 2951,
		2952, 2953, 2954, 2955, 2956, 2957, 2958, 2959,
		2960, 2961, 2962, 2963, 2964, 2965, 2966, 2967,
		2968, 2969, 2970, 2971, 2972, 2973, 2974, 2975,
		2976, 2977, 2978, 2979, 2980, 2981, 2982, 2983,
		2984, 2985, 2986, 2987, 2988, 2989, 2990, 2991,
		2992, 2993, 2994, 2995, 2996, 2997, 2998, 2999,
		3000, 3001, 3002, 3003, 3004, 3005, 3006, 3007,
		3008, 3009, 3010, 3011, 3012, 3013, 3014, 3015,
		3016, 3017, 3018, 3019, 3020, 3021, 3022, 3023,
		3024, 3025, 3026, 3027, 3028, 3029, 3030, 3031,
		3032, 3033, 3034, 3035, 3036, 3037, 3038, 3039,
		3040, 3041, 3042, 3043, 3044, 3045, 3046, 3047,
		3048, 3049, 3050, 3051, 3052, 3053, 3054, 3055,
		3056, 3057, 3058, 3059, 3060, 3061, 3062, 3063,
		3064, 3065, 3066, 3067, 3068, 3069, 3070, 3071,
		3072, 3073, 3074, 3075, 3076, 3077, 3078, 3079,
		3080, 3081, 3082, 3083, 3084, 3085, 3086, 3087,
		3088, 3089, 3090, 3091, 3092, 3093, 3094, 3095,
		3096, 3097, 3098, 3099, 3100, 3101, 3102, 3103,
		3104, 3105, 3106, 3107, 3108, 3109, 3110, 3111,
		3112, 3113, 3114, 3115, 3116, 3117, 3118, 3119,
		3120, 3121, 3122, 3123, 3124, 3125, 3126, 3127,
		3128, 3129, 3130, 3131, 3132, 3133, 3134, 3135,
		3136, 3137, 3138, 3139, 3140, 3141, 3142, 3143,
		3144, 3145, 3146, 3147, 3148, 3149, 3150, 3151,
		3152, 3153, 3154, 3155, 3156, 3157, 3158, 3159,
		3160, 3161, 3162, 3163, 3164, 3165, 3166, 3167,
		3168, 3169, 3170, 3171, 3172, 3173, 3174, 3175,
		3176, 3177, 3178, 3179, 3180, 3181, 3182, 3183,
		3184, 3185, 3186, 3187, 3188, 3189, 3190, 3191,
		3192, 3193, 3194, 3195, 3196, 3197, 3198, 3199,
		3200, 3201, 3202, 3203, 3204, 3205, 3206, 3207,
		3208, 3209, 3210, 3211, 3212, 3213, 3214, 3215,
		3216, 3217, 3218, 3219, 3220, 3221, 3222, 3223,
		3224, 3225, 3226, 3227, 3228, 3229, 3230, 3231,
		3232, 3233, 3234, 3235, 3236, 3237, 3238, 3239,
		3240, 3241, 3242, 3243, 3244, 3245, 3246, 3247,
		3248, 3249, 3250, 3251, 3252, 3253, 3254, 3255,
		3256, 3257, 3258, 3259, 3260, 3261, 3262, 3263,
		3264, 3265, 3266, 3267, 3268, 3269, 3270, 3271,
		3272, 3273, 3274, 3275, 3276, 3277, 3278, 3279,
		3280, 3281, 3282, 3283, 3284, 3285, 3286, 3287,
		3288, 3289, 3290, 3291, 3292, 3293, 3294, 3295,
		3296, 3297, 3298, 3299, 3300, 3301, 3302, 3303,
		3304, 3305, 3306, 3307, 3308, 3309, 3310, 3311,
		3312, 3313, 3314, 3315, 3316, 3317, 3318, 3319,
		3320, 3321, 3322, 3323, 3324, 3325, 3326, 3327,
		3328, 3329, 3330, 3331, 3332, 3333, 3334, 3335,
		3336, 3337, 3338, 3339, 3340, 3341, 3342, 3343,
		3344, 3345, 3346, 3347, 3348, 3349, 3350, 3351,
		3352, 3353, 3354, 3355, 3356, 3357, 3358, 3359,
		3360, 3361, 3362, 3363, 3364, 3365, 3366, 3367,
		3368, 3369, 3370, 3371, 3372, 3373, 3374, 3375,
		3376, 3377, 3378, 3379, 3380, 3381, 3382, 3383,
		3384, 3385, 3386, 3387, 3388, 3389, 3390, 3391,
		3392, 3393, 3394, 3395, 3396, 3397, 3398, 3399,
		3400, 3401, 3402, 3403, 3404, 3405, 3406, 3407,
		3408, 3409, 3410, 3411, 3412, 3413, 3414, 3415,
		3416, 3417, 3418, 3419, 3420, 3421, 3422, 3423,
		3424, 3425, 3426, 3427, 3428, 3429, 3430, 3431,
		3432, 3433, 3434, 3435, 3436, 3437, 3438, 3439,
		3440, 3441, 3442, 3443, 3444, 3445, 3446, 3447,
		3448, 3449, 3450, 3451, 3452, 3453, 3454, 3455,
		3456, 3457, 3458, 3459, 3460, 3461, 3462, 3463,
		3464, 3465, 3466, 3467, 3468, 3469, 3470, 3471,
		3472, 3473, 3474, 3475, 3476, 3477, 3478, 3479,
		3480, 3481, 3482, 3483, 3484, 3485, 3486, 3487,
		3488, 3489, 3490, 3491, 3492, 3493, 3494, 3495,
		3496, 3497, 3498, 3499, 3500, 3501, 3502, 3503,
		3504, 3505, 3506, 3507, 3508, 3509, 3510, 3511,
		3512, 3513, 3514, 3515, 3516, 3517, 3518, 3519,
		3520, 3521, 3522, 3523, 3524, 3525, 3526, 3527,
		3528, 3529, 3530, 3531, 3532, 3533, 3534, 3535,
		3536, 3537, 3538, 3539, 3540, 3541, 3542, 3543,
		3544, 3545, 3546, 3547, 3548, 3549, 3550, 3551,
		3552, 3553, 3554, 3555, 3556, 3557, 3558, 3559,
		3560, 3561, 3562, 3563, 3564, 3565, 3566, 3567,
		3568, 3569, 3570, 3571, 3572, 3573, 3574, 3575,
		3576, 3577, 3578, 3579, 3580, 3581, 3582, 3583,
		3584, 3585, 3586, 3587, 3588, 3589, 3590, 3591,
		3592, 3593, 3594, 3595, 3596, 3597, 3598, 3599,
		3600, 3601, 3602, 3603, 3604, 3605, 3606, 3607,
		3608, 3609, 3610, 3611, 3612, 3613, 3614, 3615,
		3616, 3617, 3618, 3619, 3620, 3621, 3622, 3623,
		3624, 3625, 3626, 3627, 3628, 3629, 3630, 3631,
		3632, 3633, 3634, 3635, 3636, 3637, 3638, 3639,
		3640, 3641, 3642, 3643, 3644, 3645, 3646, 3647,
		3648, 3649, 3650, 3651, 3652, 3653, 3654, 3655,
		3656, 3657, 3658, 3659, 3660, 3661, 3662, 3663,
		3664, 3665, 3666, 3667, 3668, 3669, 3670, 3671,
		3672, 3673, 3674, 3675, 3676, 3677, 3678, 3679,
		3680, 3681, 3682, 3683, 3684, 3685, 3686, 3687,
		3688, 3689, 3690, 3691, 3692, 3693, 3694, 3695,
		3696, 3697, 3698, 3699, 3700, 3701, 3702, 3703,
		3704, 3705, 3706, 3707, 3708, 3709, 3710, 3711,
		3712, 3713, 3714, 3715, 3716, 3717, 3718, 3719,
		3720, 3721, 3722, 3723, 3724, 3725, 3726, 3727,
		3728, 3729, 3730, 3731, 3732, 3733, 3734, 3735,
		3736, 3737, 3738, 3739, 3740, 3741, 3742, 3743,
		3744, 3745, 3746, 3747, 3748, 3749, 3750, 3751,
		3752, 3753, 3754, 3755, 3756, 3757, 3758, 3759,
		3760, 3761, 3762, 3763, 3764, 3765, 3766, 3767,
		3768, 3769, 3770, 3771, 3772, 3773, 3774, 3775,
		3776, 3777, 3778, 3779, 3780, 3781, 3782, 3783,
		3784, 3785, 3786, 3787, 3788, 3789, 3790, 3791,
		3792, 3793, 3794, 3795, 3796, 3797, 3798, 3799,
		3800, 3801, 3802, 3803, 3804, 3805, 3806, 3807,
		3808, 3809, 3810, 3811, 3812, 3813, 3814, 3815,
		3816, 3817, 3818, 3819, 3820, 3821, 3822, 3823,
		3824, 3825, 3826, 3827, 3828, 3829, 3830, 3831,
		3832, 3833, 3834, 3835, 3836, 3837, 3838, 3839,
		3840, 3841, 3842, 3843, 3844, 3845, 3846, 3847,
		3848, 3849, 3850, 3851, 3852, 3853, 3854, 3855,
		3856, 3857, 3858, 3859, 3860, 3861, 3862, 3863,
		3864, 3865, 3866, 3867, 3868, 3869, 3870, 3871,
		3872, 3873, 3874, 3875, 3876, 3877, 3878, 3879,
		3880, 3881, 3882, 3883, 3884, 3885, 3886, 3887,
		3888, 3889, 3890, 3891, 3892, 3893, 3894, 3895,
		3896, 3897, 3898, 3899, 3900, 3901, 3902, 3903,
		3904, 3905, 3906, 3907, 3908, 3909, 3910, 3911,
		3912, 3913, 3914, 3915, 3916, 3917, 3918, 3919,
		3920, 3921, 3922, 3923, 3924, 3925, 3926, 3927,
		3928, 3929, 3930, 3931, 3932, 3933, 3934, 3935,
		3936, 3937, 3938, 3939, 3940, 3941, 3942, 3943,
		3944, 3945, 3946, 3947, 3948, 3949, 3950, 3951,
		3952, 3953, 3954, 3955, 3956, 3957, 3958, 3959,
		3960, 3961, 3962, 3963, 3964, 3965, 3966, 3967,
		3968, 3969, 3970, 3971, 3972, 3973, 3974, 3975,
		3976, 3977, 3978, 3979, 3980, 3981, 3982, 3983,
		3984, 3985, 3986, 3987, 3988, 3989, 3990, 3991,
		3992, 3993, 3994, 3995, 3996, 3997, 3998, 3999,
		4000, 4001, 4002, 4003, 4004, 4005, 4006, 4007,
		4008, 4009, 4010, 4011, 4012, 4013, 4014, 4015,
		4016, 4017, 4018, 4019, 4020, 4021, 4022, 4023,
		4024, 4025, 4026, 4027, 4028, 4029, 4030, 4031,
		4032, 4033, 4034, 4035, 4036, 4037, 4038, 4039,
		4040, 4041, 4042, 4043, 4044, 4045, 4046, 4047,
		4048, 4049, 4050, 4051, 4052, 4053, 4054, 4055,
		4056, 4057, 4058, 4059, 4060, 4061, 4062, 4063,
		4064, 4065, 4066, 4067, 4068, 4069, 4070, 4071,
		4072, 4073, 4074, 4075, 4076, 4077, 4078, 4079,
		4080, 4081, 4082, 4083, 4084, 4085, 4086, 4087,
		4088, 4089, 4090, 4091, 4092, 4093, 4094, 4095,
		4096, 4097, 4098, 4099, 4100, 4101, 4102, 4103,
		4104, 4105, 4106, 4107, 4108, 4109, 4110, 4111,
		4112, 4113, 4114, 4115, 4116, 4117, 4118, 4119,
		4120, 4121, 4122, 4123, 4124, 4125, 4126, 4127,
		4128, 4129, 4130, 4131, 4132, 4133, 4134, 4135,
		4136, 4137, 4138, 4139, 4140, 4141, 4142, 4143,
		4144, 4145, 4146, 4147, 4148, 4149, 4150, 4151,
		4152, 4153, 4154, 4155, 4156, 4157, 4158, 4159,
		4160, 4161, 4162, 4163, 4164, 4165, 4166, 4167,
		4168, 4169, 4170, 4171, 4172, 4173, 4174, 4175,
		4176, 4177, 4178, 4179, 4180, 4181, 4182, 4183,
		4184, 4185, 4186, 4187, 4188, 4189, 4190, 4191,
		4192, 4193, 4194, 4195, 4196, 4197, 4198, 4199,
		4200, 4201, 4202, 4203, 4204, 4205, 4206, 4207,
		4208, 4209, 4210, 4211, 4212, 4213, 4214, 4215,
		4216, 4217, 4218, 4219, 4220, 4221, 4222, 4223,
		4224, 4225, 4226, 4227, 4228, 4229, 4230, 4231,
		4232, 4233, 4234, 4235, 4236, 4237, 4238, 4239,
		4240, 4241, 4242, 4243, 4244, 4245, 4246, 4247,
		4248, 4249, 4250, 4251, 4252, 4253, 4254, 4255,
		4256, 4257, 4258, 4259, 4260, 4261, 4262, 4263,
		4264, 4265, 4266, 4267, 4268, 4269, 4270, 4271,
		4272, 4273, 4274, 4275, 4276, 4277, 4278, 4279,
		4280, 4281, 4282, 4283, 4284, 4285, 4286, 4287,
		4288, 4289, 4290, 4291, 4292, 4293, 4294, 4295,
		4296, 4297, 4298, 4299, 4300, 4301, 4302, 4303,
		4304, 4305, 4306, 4307, 4308, 4309, 4310, 4311,
		4312, 4313, 4314, 4315, 4316, 4317, 4318, 4319,
		4320, 4321, 4322, 4323, 4324, 4325, 4326, 4327,
		4328, 4329, 4330, 4331, 4332, 4333, 4334, 4335,
		4336, 4337, 4338, 4339, 4340, 4341, 4342, 4343,
		4344, 4345, 4346, 4347, 4348, 4349, 4350, 4351,
		4352, 4353, 4354, 4355, 4356, 4357, 4358, 4359,
		4360, 4361, 4362, 4363, 4364, 4365, 4366, 4367,
		4368, 4369, 4370, 4371, 4372, 4373, 4374, 4375,
		4376, 4377, 4378, 4379, 4380, 4381, 4382, 4383,
		4384, 4385, 4386, 4387, 4388, 4389, 4390, 4391,
		4392, 4393, 4394, 4395, 4396, 4397, 4398, 4399,
		4400, 4401, 4402, 4403, 4404, 4405, 4406, 4407,
		4408, 4409, 4410, 4411, 4412, 4413, 4414, 4415,
		4416, 4417, 4418, 4419, 4420, 4421, 4422, 4423,
		4424, 4425, 4426, 4427, 4428, 4429, 4430, 4431,
		4432, 4433, 4434, 4435, 4436, 4437, 4438, 4439,
		4440, 4441, 4442, 4443, 4444, 4445, 4446, 4447,
		4448, 4449, 4450, 4451, 4452, 4453, 4454, 4455,
		4456, 4457, 4458, 4459, 4460, 4461, 4462, 4463,
		4464, 4465, 4466, 4467, 4468, 4469, 4470, 4471,
		4472, 4473, 4474, 4475, 4476, 4477, 4478, 4479,
		4480, 4481, 4482, 4483, 4484, 4485, 4486, 4487,
		4488, 4489, 4490, 0
	};
	
	static const char _flux_trans_lengths[] = {
		1, 1, 1, 1, 1, 1, 1, 1,
		1, 1, 1, 1, 1, 1, 1, 1,
		1, 1, 1, 1, 1, 1, 1, 1,
		1, 1, 1, 1, 1, 1, 1, 1,
		1, 1, 1, 1, 1, 1, 1, 1,
		1, 1, 1, 1, 1, 1, 1, 1,
		1, 1, 1, 1, 1, 1, 1, 1,
		1, 1, 1, 1, 1, 1, 1, 1,
		1, 1, 1, 1, 1, 1, 1, 1,
		1, 1, 1, 1, 1, 1, 1, 1,
		1, 1, 1, 1, 1, 1, 1, 1,
		1, 1, 1, 1, 1, 1, 1, 1,
		1, 1, 1, 1, 1, 1, 1, 1,
		1, 1, 1, 1, 1, 1, 1, 1,
		1, 1, 1, 1, 1, 1, 1, 1,
		1, 1, 1, 1, 1, 1, 1, 1,
		1, 1, 1, 1, 1, 1, 1, 1,
		1, 1, 1, 1, 1, 1, 1, 1,
		1, 1, 1, 1, 1, 1, 1, 1,
		1, 1, 1, 1, 1, 1, 1, 1,
		1, 1, 1, 1, 1, 1, 1, 1,
		1, 1, 1, 1, 1, 1, 1, 1,
		1, 1, 1, 1, 1, 1, 1, 1,
		1, 1, 1, 1, 1, 1, 1, 1,
		1, 1, 1, 1, 1, 1, 1, 1,
		1, 1, 1, 1, 1, 1, 1, 1,
		1, 1, 1, 1, 1, 1, 1, 1,
		1, 1, 1, 1, 1, 1, 1, 1,
		1, 1, 1, 1, 1, 1, 1, 1,
		1, 1, 1, 1, 1, 1, 1, 1,
		1, 1, 1, 1, 1, 1, 1, 1,
		1, 1, 1, 1, 1, 1, 1, 1,
		1, 1, 1, 1, 1, 1, 1, 1,
		1, 1, 1, 1, 1, 1, 1, 1,
		1, 1, 1, 1, 1, 1, 1, 1,
		1, 1, 1, 1, 1, 1, 1, 1,
		1, 1, 1, 1, 1, 1, 1, 1,
		1, 1, 1, 1, 1, 1, 1, 1,
		1, 1, 1, 1, 1, 1, 1, 1,
		1, 1, 1, 1, 1, 1, 1, 1,
		1, 1, 1, 1, 1, 1, 1, 1,
		1, 1, 1, 1, 1, 1, 1, 1,
		1, 1, 1, 1, 1, 1, 1, 1,
		1, 1, 1, 1, 1, 1, 1, 1,
		1, 1, 1, 1, 1, 1, 1, 1,
		1, 1, 1, 1, 1, 1, 1, 1,
		1, 1, 1, 1, 1, 1, 1, 1,
		1, 1, 1, 1, 1, 1, 1, 1,
		1, 1, 1, 1, 1, 1, 1, 1,
		1, 1, 1, 1, 1, 1, 1, 1,
		1, 1, 1, 1, 1, 1, 1, 1,
		1, 1, 1, 1, 1, 1, 1, 1,
		1, 1, 1, 1, 1, 1, 1, 1,
		1, 1, 1, 1, 1, 1, 1, 1,
		1, 1, 1, 1, 1, 1, 1, 1,
		1, 1, 1, 1, 1, 1, 1, 1,
		1, 1, 1, 1, 1, 1, 1, 1,
		1, 1, 1, 1, 1, 1, 1, 1,
		1, 1, 1, 1, 1, 1, 1, 1,
		1, 1, 1, 1, 1, 1, 1, 1,
		1, 1, 1, 1, 1, 1, 1, 1,
		1, 1, 1, 1, 1, 1, 1, 1,
		1, 1, 1, 1, 1, 1, 1, 1,
		1, 1, 1, 1, 1, 1, 1, 1,
		1, 1, 1, 1, 1, 1, 1, 1,
		1, 1, 1, 1, 1, 1, 1, 1,
		1, 1, 1, 1, 1, 1, 1, 1,
		1, 1, 1, 1, 1, 1, 1, 1,
		1, 1, 1, 1, 1, 1, 1, 1,
		1, 1, 1, 1, 1, 1, 1, 1,
		1, 1, 1, 1, 1, 1, 1, 1,
		1, 1, 1, 1, 1, 1, 1, 1,
		1, 1, 1, 1, 1, 1, 1, 1,
		1, 1, 1, 1, 1, 1, 1, 1,
		1, 1, 1, 1, 1, 1, 1, 1,
		1, 1, 1, 1, 1, 1, 1, 1,
		1, 1, 1, 1, 1, 1, 1, 1,
		1, 1, 1, 1, 1, 1, 1, 1,
		1, 1, 1, 1, 1, 1, 1, 1,
		1, 1, 1, 1, 1, 1, 1, 1,
		1, 1, 1, 1, 1, 1, 1, 1,
		1, 1, 1, 1, 1, 1, 1, 1,
		1, 1, 1, 1, 1, 1, 1, 1,
		1, 1, 1, 1, 1, 1, 1, 1,
		1, 1, 1, 1, 1, 1, 1, 1,
		1, 1, 1, 1, 1, 1, 1, 1,
		1, 1, 1, 1, 1, 1, 1, 1,
		1, 1, 1, 1, 1, 1, 1, 1,
		1, 1, 1, 1, 1, 1, 1, 1,
		1, 1, 1, 1, 1, 1, 1, 1,
		1, 1, 1, 1, 1, 1, 1, 1,
		1, 1, 1, 1, 1, 1, 1, 1,
		1, 1, 1, 1, 1, 1, 1, 1,
		1, 1, 1, 1, 1, 1, 1, 1,
		1, 1, 1, 1, 1, 1, 1, 1,
		1, 1, 1, 1, 1, 1, 1, 1,
		1, 1, 1, 1, 1, 1, 1, 1,
		1, 1, 1, 1, 1, 1, 1, 1,
		1, 1, 1, 1, 1, 1, 1, 1,
		1, 1, 1, 1, 1, 1, 1, 1,
		1, 1, 1, 1, 1, 1, 1, 1,
		1, 1, 1, 1, 1, 1, 1, 1,
		1, 1, 1, 1, 1, 1, 1, 1,
		1, 1, 1, 1, 1, 1, 1, 1,
		1, 1, 1, 1, 1, 1, 1, 1,
		1, 1, 1, 1, 1, 1, 1, 1,
		1, 1, 1, 1, 1, 1, 1, 1,
		1, 1, 1, 1, 1, 1, 1, 1,
		1, 1, 1, 1, 1, 1, 1, 1,
		1, 1, 1, 1, 1, 1, 1, 1,
		1, 1, 1, 1, 1, 1, 1, 1,
		1, 1, 1, 1, 1, 1, 1, 1,
		1, 1, 1, 1, 1, 1, 1, 1,
		1, 1, 1, 1, 1, 1, 1, 1,
		1, 1, 1, 1, 1, 1, 1, 1,
		1, 1, 1, 1, 1, 1, 1, 1,
		1, 1, 1, 1, 1, 1, 1, 1,
		1, 1, 1, 1, 1, 1, 1, 1,
		1, 1, 1, 1, 1, 1, 1, 1,
		1, 1, 1, 1, 1, 1, 1, 1,
		1, 1, 1, 1, 1, 1, 1, 1,
		1, 1, 1, 1, 1, 1, 1, 1,
		1, 1, 1, 1, 1, 1, 1, 1,
		1, 1, 1, 1, 1, 1, 1, 1,
		1, 1, 1, 1, 1, 1, 1, 1,
		1, 1, 1, 1, 1, 1, 1, 1,
		1, 1, 1, 1, 1, 1, 1, 1,
		1, 1, 1, 1, 1, 1, 1, 1,
		1, 1, 1, 1, 1, 1, 1, 1,
		1, 1, 1, 1, 1, 1, 1, 1,
		1, 1, 1, 1, 1, 1, 1, 1,
		1, 1, 1, 1, 1, 1, 1, 1,
		1, 1, 1, 1, 1, 1, 1, 1,
		1, 1, 1, 1, 1, 1, 1, 1,
		1, 1, 1, 1, 1, 1, 1, 1,
		1, 1, 1, 1, 1, 1, 1, 1,
		1, 1, 1, 1, 1, 1, 1, 1,
		1, 1, 1, 1, 1, 1, 1, 1,
		1, 1, 1, 1, 1, 1, 1, 1,
		1, 1, 1, 1, 1, 1, 1, 1,
		1, 1, 1, 1, 1, 1, 1, 1,
		1, 1, 1, 1, 1, 1, 1, 1,
		1, 1, 1, 1, 1, 1, 1, 1,
		1, 1, 1, 1, 1, 1, 1, 1,
		1, 1, 1, 1, 1, 1, 1, 1,
		1, 1, 1, 1, 1, 1, 1, 1,
		1, 1, 1, 1, 1, 1, 1, 1,
		1, 1, 1, 1, 1, 1, 1, 1,
		1, 1, 1, 1, 1, 1, 1, 1,
		1, 1, 1, 1, 1, 1, 1, 1,
		1, 1, 1, 1, 1, 1, 1, 1,
		1, 1, 1, 1, 1, 1, 1, 1,
		1, 1, 1, 1, 1, 1, 1, 1,
		1, 1, 1, 1, 1, 1, 1, 1,
		1, 1, 1, 1, 1, 1, 1, 1,
		1, 1, 1, 1, 1, 1, 1, 1,
		1, 1, 1, 1, 1, 1, 1, 1,
		1, 1, 1, 1, 1, 1, 1, 1,
		1, 1, 1, 1, 1, 1, 1, 1,
		1, 1, 1, 1, 1, 1, 1, 1,
		1, 1, 1, 1, 1, 1, 1, 1,
		1, 1, 1, 1, 1, 1, 1, 1,
		1, 1, 1, 1, 1, 1, 1, 1,
		1, 1, 1, 1, 1, 1, 1, 1,
		1, 1, 1, 1, 1, 1, 1, 1,
		1, 1, 1, 1, 1, 1, 1, 1,
		1, 1, 1, 1, 1, 1, 1, 1,
		1, 1, 1, 1, 1, 1, 1, 1,
		1, 1, 1, 1, 1, 1, 1, 1,
		1, 1, 1, 1, 1, 1, 1, 1,
		1, 1, 1, 1, 1, 1, 1, 1,
		1, 1, 1, 1, 1, 1, 1, 1,
		1, 1, 1, 1, 1, 1, 1, 1,
		1, 1, 1, 1, 1, 1, 1, 1,
		1, 1, 1, 1, 1, 1, 1, 1,
		1, 1, 1, 1, 1, 1, 1, 1,
		1, 1, 1, 1, 1, 1, 1, 1,
		1, 1, 1, 1, 1, 1, 1, 1,
		1, 1, 1, 1, 1, 1, 1, 1,
		1, 1, 1, 1, 1, 1, 1, 1,
		1, 1, 1, 1, 1, 1, 1, 1,
		1, 1, 1, 1, 1, 1, 1, 1,
		1, 1, 1, 1, 1, 1, 1, 1,
		1, 1, 1, 1, 1, 1, 1, 1,
		1, 1, 1, 1, 1, 1, 1, 1,
		1, 1, 1, 1, 1, 1, 1, 1,
		1, 1, 1, 1, 1, 1, 1, 1,
		1, 1, 1, 1, 1, 1, 1, 1,
		1, 1, 1, 1, 1, 1, 1, 1,
		1, 1, 1, 1, 1, 1, 1, 1,
		1, 1, 1, 1, 1, 1, 1, 1,
		1, 1, 1, 1, 1, 1, 1, 1,
		1, 1, 1, 1, 1, 1, 1, 1,
		1, 1, 1, 1, 1, 1, 1, 1,
		1, 1, 1, 1, 1, 1, 1, 1,
		1, 1, 1, 1, 1, 1, 1, 1,
		1, 1, 1, 1, 1, 1, 1, 1,
		1, 1, 1, 1, 1, 1, 1, 1,
		1, 1, 1, 1, 1, 1, 1, 1,
		1, 1, 1, 1, 1, 1, 1, 1,
		1, 1, 1, 1, 1, 1, 1, 1,
		1, 1, 1, 1, 1, 1, 1, 1,
		1, 1, 1, 1, 1, 1, 1, 1,
		1, 1, 1, 1, 1, 1, 1, 1,
		1, 1, 1, 1, 1, 1, 1, 1,
		1, 1, 1, 1, 1, 1, 1, 1,
		1, 1, 1, 1, 1, 1, 1, 1,
		1, 1, 1, 1, 1, 1, 1, 1,
		1, 1, 1, 1, 1, 1, 1, 1,
		1, 1, 1, 1, 1, 1, 1, 1,
		1, 1, 1, 1, 1, 1, 1, 1,
		1, 1, 1, 1, 1, 1, 1, 1,
		1, 1, 1, 1, 1, 1, 1, 1,
		1, 1, 1, 1, 1, 1, 1, 1,
		1, 1, 1, 1, 1, 1, 1, 1,
		1, 1, 1, 1, 1, 1, 1, 1,
		1, 1, 1, 1, 1, 1, 1, 1,
		1, 1, 1, 1, 1, 1, 1, 1,
		1, 1, 1, 1, 1, 1, 1, 1,
		1, 1, 1, 1, 1, 1, 1, 1,
		1, 1, 1, 1, 1, 1, 1, 1,
		1, 1, 1, 1, 1, 1, 1, 1,
		1, 1, 1, 1, 1, 1, 1, 1,
		1, 1, 1, 1, 1, 1, 1, 1,
		1, 1, 1, 1, 1, 1, 1, 1,
		1, 1, 1, 1, 1, 1, 1, 1,
		1, 1, 1, 1, 1, 1, 1, 1,
		1, 1, 1, 1, 1, 1, 1, 1,
		1, 1, 1, 1, 1, 1, 1, 1,
		1, 1, 1, 1, 1, 1, 1, 1,
		1, 1, 1, 1, 1, 1, 1, 1,
		1, 1, 1, 1, 1, 1, 1, 1,
		1, 1, 1, 1, 1, 1, 1, 1,
		1, 1, 1, 1, 1, 1, 1, 1,
		1, 1, 1, 1, 1, 1, 1, 1,
		1, 1, 1, 1, 1, 1, 1, 1,
		1, 1, 1, 1, 1, 1, 1, 1,
		1, 1, 1, 1, 1, 1, 1, 1,
		1, 1, 1, 1, 1, 1, 1, 1,
		1, 1, 1, 1, 1, 1, 1, 1,
		1, 1, 1, 1, 1, 1, 1, 1,
		1, 1, 1, 1, 1, 1, 1, 1,
		1, 1, 1, 1, 1, 1, 1, 1,
		1, 1, 1, 1, 1, 1, 1, 1,
		1, 1, 1, 1, 1, 1, 1, 1,
		1, 1, 1, 1, 1, 1, 1, 1,
		1, 1, 1, 1, 1, 1, 1, 1,
		1, 1, 1, 1, 1, 1, 1, 1,
		1, 1, 1, 1, 1, 1, 1, 1,
		1, 1, 1, 1, 1, 1, 1, 1,
		1, 1, 1, 1, 1, 1, 1, 1,
		1, 1, 1, 1, 1, 1, 1, 1,
		1, 1, 1, 1, 1, 1, 1, 1,
		1, 1, 1, 1, 1, 1, 1, 1,
		1, 1, 1, 1, 1, 1, 1, 1,
		1, 1, 1, 1, 1, 1, 1, 1,
		1, 1, 1, 1, 1, 1, 1, 1,
		1, 1, 1, 1, 1, 1, 1, 1,
		1, 1, 1, 1, 1, 1, 1, 1,
		1, 1, 1, 1, 1, 1, 1, 1,
		1, 1, 1, 1, 1, 1, 1, 1,
		1, 1, 1, 1, 1, 1, 1, 1,
		1, 1, 1, 1, 1, 1, 1, 1,
		1, 1, 1, 1, 1, 1, 1, 1,
		1, 1, 1, 1, 1, 1, 1, 1,
		1, 1, 1, 1, 1, 1, 1, 1,
		1, 1, 1, 1, 1, 1, 1, 1,
		1, 1, 1, 1, 1, 1, 1, 1,
		1, 1, 1, 1, 1, 1, 1, 1,
		1, 1, 1, 1, 1, 1, 1, 1,
		1, 1, 1, 1, 1, 1, 1, 1,
		1, 1, 1, 1, 1, 1, 1, 1,
		1, 1, 1, 1, 1, 1, 1, 1,
		1, 1, 1, 1, 1, 1, 1, 1,
		1, 1, 1, 1, 1, 1, 1, 1,
		1, 1, 1, 1, 1, 1, 1, 1,
		1, 1, 1, 1, 1, 1, 1, 1,
		1, 1, 1, 1, 1, 1, 1, 1,
		1, 1, 1, 1, 1, 1, 1, 1,
		1, 1, 1, 1, 1, 1, 1, 1,
		1, 1, 1, 1, 1, 1, 1, 1,
		1, 1, 1, 1, 1, 1, 1, 1,
		1, 1, 1, 1, 1, 1, 1, 1,
		1, 1, 1, 1, 1, 1, 1, 1,
		1, 1, 1, 1, 1, 1, 1, 1,
		1, 1, 1, 1, 1, 1, 1, 1,
		1, 1, 1, 1, 1, 1, 1, 1,
		1, 1, 1, 1, 1, 1, 1, 1,
		1, 1, 1, 1, 1, 1, 1, 1,
		1, 1, 1, 1, 1, 1, 1, 1,
		1, 1, 1, 1, 1, 1, 1, 1,
		1, 1, 1, 1, 1, 1, 1, 1,
		1, 1, 1, 1, 1, 1, 1, 1,
		1, 1, 1, 1, 1, 1, 1, 1,
		1, 1, 1, 1, 1, 1, 1, 1,
		1, 1, 1, 1, 1, 1, 1, 1,
		1, 1, 1, 1, 1, 1, 1, 1,
		1, 1, 1, 1, 1, 1, 1, 1,
		1, 1, 1, 1, 1, 1, 1, 1,
		1, 1, 1, 1, 1, 1, 1, 1,
		1, 1, 1, 1, 1, 1, 1, 1,
		1, 1, 1, 1, 1, 1, 1, 1,
		1, 1, 1, 1, 1, 1, 1, 1,
		1, 1, 1, 1, 1, 1, 1, 1,
		1, 1, 1, 1, 1, 1, 1, 1,
		1, 1, 1, 1, 1, 1, 1, 1,
		1, 1, 1, 1, 1, 1, 1, 1,
		1, 1, 1, 1, 1, 1, 1, 1,
		1, 1, 1, 1, 1, 1, 1, 1,
		1, 1, 1, 1, 1, 1, 1, 1,
		1, 1, 1, 1, 1, 1, 1, 1,
		1, 1, 1, 1, 1, 1, 1, 1,
		1, 1, 1, 1, 1, 1, 1, 1,
		1, 1, 1, 1, 1, 1, 1, 1,
		1, 1, 1, 1, 1, 1, 1, 1,
		1, 1, 1, 1, 1, 1, 1, 1,
		1, 1, 1, 1, 1, 1, 1, 1,
		1, 1, 1, 1, 1, 1, 1, 1,
		1, 1, 1, 1, 1, 1, 1, 1,
		1, 1, 1, 1, 1, 1, 1, 1,
		1, 1, 1, 1, 1, 1, 1, 1,
		1, 1, 1, 1, 1, 1, 1, 1,
		1, 1, 1, 1, 1, 1, 1, 1,
		1, 1, 1, 1, 1, 1, 1, 1,
		1, 1, 1, 1, 1, 1, 1, 1,
		1, 1, 1, 1, 1, 1, 1, 1,
		1, 1, 1, 1, 1, 1, 1, 1,
		1, 1, 1, 1, 1, 1, 1, 1,
		1, 1, 1, 1, 1, 1, 1, 1,
		1, 1, 1, 1, 1, 1, 1, 1,
		1, 1, 1, 1, 1, 1, 1, 1,
		1, 1, 1, 1, 1, 1, 1, 1,
		1, 1, 1, 1, 1, 1, 1, 1,
		1, 1, 1, 1, 1, 1, 1, 1,
		1, 1, 1, 1, 1, 1, 1, 1,
		1, 1, 1, 1, 1, 1, 1, 1,
		1, 1, 1, 1, 1, 1, 1, 1,
		1, 1, 1, 1, 1, 1, 1, 1,
		1, 1, 1, 1, 1, 1, 1, 1,
		1, 1, 1, 1, 1, 1, 1, 1,
		1, 1, 1, 1, 1, 1, 1, 1,
		1, 1, 1, 1, 1, 1, 1, 1,
		1, 1, 1, 1, 1, 1, 1, 1,
		1, 1, 1, 1, 1, 1, 1, 1,
		1, 1, 1, 1, 1, 1, 1, 1,
		1, 1, 1, 1, 1, 1, 1, 1,
		1, 1, 1, 1, 1, 1, 1, 1,
		1, 1, 1, 1, 1, 1, 1, 1,
		1, 1, 1, 1, 1, 1, 1, 1,
		1, 1, 1, 1, 1, 1, 1, 1,
		1, 1, 1, 1, 1, 1, 1, 1,
		1, 1, 1, 1, 1, 1, 1, 1,
		1, 1, 1, 1, 1, 1, 1, 1,
		1, 1, 1, 1, 1, 1, 1, 1,
		1, 1, 1, 1, 1, 1, 1, 1,
		1, 1, 1, 1, 1, 1, 1, 1,
		1, 1, 1, 1, 1, 1, 1, 1,
		1, 1, 1, 1, 1, 1, 1, 1,
		1, 1, 1, 1, 1, 1, 1, 1,
		1, 1, 1, 1, 1, 1, 1, 1,
		1, 1, 1, 1, 1, 1, 1, 1,
		1, 1, 1, 1, 1, 1, 1, 1,
		1, 1, 1, 1, 1, 1, 1, 1,
		1, 1, 1, 1, 1, 1, 1, 1,
		1, 1, 1, 1, 1, 1, 1, 1,
		1, 1, 1, 1, 1, 1, 1, 1,
		1, 1, 1, 1, 1, 1, 1, 1,
		1, 1, 1, 1, 1, 1, 1, 1,
		1, 1, 1, 1, 1, 1, 1, 1,
		1, 1, 1, 1, 1, 1, 1, 1,
		1, 1, 1, 1, 1, 1, 1, 1,
		1, 1, 1, 1, 1, 1, 1, 1,
		1, 1, 1, 1, 1, 1, 1, 1,
		1, 1, 1, 1, 1, 1, 1, 1,
		1, 1, 1, 1, 1, 1, 1, 1,
		1, 1, 1, 1, 1, 1, 1, 1,
		1, 1, 1, 1, 1, 1, 1, 1,
		1, 1, 1, 1, 1, 1, 1, 1,
		1, 1, 1, 1, 1, 1, 1, 1,
		1, 1, 1, 1, 1, 1, 1, 1,
		1, 1, 1, 1, 1, 1, 1, 1,
		1, 1, 1, 1, 1, 1, 1, 1,
		1, 1, 1, 1, 1, 1, 1, 1,
		1, 1, 1, 1, 1, 1, 1, 1,
		1, 1, 1, 1, 1, 1, 1, 1,
		1, 1, 1, 1, 1, 1, 1, 1,
		1, 1, 1, 1, 1, 1, 1, 1,
		1, 1, 1, 1, 1, 1, 1, 1,
		1, 1, 1, 1, 1, 1, 1, 1,
		1, 1, 1, 1, 1, 1, 1, 1,
		1, 1, 1, 1, 1, 1, 1, 1,
		1, 1, 1, 1, 1, 1, 1, 1,
		1, 1, 1, 1, 1, 1, 1, 1,
		1, 1, 1, 1, 1, 1, 1, 1,
		1, 1, 1, 1, 1, 1, 1, 1,
		1, 1, 1, 1, 1, 1, 1, 1,
		1, 1, 1, 1, 1, 1, 1, 1,
		1, 1, 1, 1, 1, 1, 1, 1,
		1, 1, 1, 1, 1, 1, 1, 1,
		1, 1, 1, 1, 1, 1, 1, 1,
		1, 1, 1, 1, 1, 1, 1, 1,
		1, 1, 1, 1, 1, 1, 1, 1,
		1, 1, 1, 1, 1, 1, 1, 1,
		1, 1, 1, 1, 1, 1, 1, 1,
		1, 1, 1, 1, 1, 1, 1, 1,
		1, 1, 1, 1, 1, 1, 1, 1,
		1, 1, 1, 1, 1, 1, 1, 1,
		1, 1, 1, 1, 1, 1, 1, 1,
		1, 1, 1, 1, 1, 1, 1, 1,
		1, 1, 1, 1, 1, 1, 1, 1,
		1, 1, 1, 1, 1, 1, 1, 1,
		1, 1, 1, 1, 1, 1, 1, 1,
		1, 1, 1, 1, 1, 1, 1, 1,
		1, 1, 1, 1, 1, 1, 1, 1,
		1, 1, 1, 1, 1, 1, 1, 1,
		1, 1, 1, 1, 1, 1, 1, 1,
		1, 1, 1, 1, 1, 1, 1, 1,
		1, 1, 1, 1, 1, 1, 1, 1,
		1, 1, 1, 1, 1, 1, 1, 1,
		1, 1, 1, 1, 1, 1, 1, 1,
		1, 1, 1, 1, 1, 1, 1, 1,
		1, 1, 1, 1, 1, 1, 1, 1,
		1, 1, 1, 1, 1, 1, 1, 1,
		1, 1, 1, 1, 1, 1, 1, 1,
		1, 1, 1, 1, 1, 1, 1, 1,
		1, 1, 1, 1, 1, 1, 1, 1,
		1, 1, 1, 1, 1, 1, 1, 1,
		1, 1, 1, 1, 1, 1, 1, 1,
		1, 1, 1, 1, 1, 1, 1, 1,
		1, 1, 1, 1, 1, 1, 1, 1,
		1, 1, 1, 1, 1, 1, 1, 1,
		1, 1, 1, 1, 1, 1, 1, 1,
		1, 1, 1, 1, 1, 1, 1, 1,
		1, 1, 1, 1, 1, 1, 1, 1,
		1, 1, 1, 1, 1, 1, 1, 1,
		1, 1, 1, 1, 1, 1, 1, 1,
		1, 1, 1, 1, 1, 1, 1, 1,
		1, 1, 1, 1, 1, 1, 1, 1,
		1, 1, 1, 1, 1, 1, 1, 1,
		1, 1, 1, 1, 1, 1, 1, 1,
		1, 1, 1, 1, 1, 1, 1, 1,
		1, 1, 1, 1, 1, 1, 1, 1,
		1, 1, 1, 1, 1, 1, 1, 1,
		1, 1, 1, 1, 1, 1, 1, 1,
		1, 1, 1, 1, 1, 1, 1, 1,
		1, 1, 1, 1, 1, 1, 1, 1,
		1, 1, 1, 1, 1, 1, 1, 1,
		1, 1, 1, 1, 1, 1, 1, 1,
		1, 1, 1, 1, 1, 1, 1, 1,
		1, 1, 1, 1, 1, 1, 1, 1,
		1, 1, 1, 1, 1, 1, 1, 1,
		1, 1, 1, 1, 1, 1, 1, 1,
		1, 1, 1, 1, 1, 1, 1, 1,
		1, 1, 1, 1, 1, 1, 1, 1,
		1, 1, 1, 1, 1, 1, 1, 1,
		1, 1, 1, 1, 1, 1, 1, 1,
		1, 1, 1, 1, 1, 1, 1, 1,
		1, 1, 1, 1, 1, 1, 1, 1,
		1, 1, 1, 1, 1, 1, 1, 1,
		1, 1, 1, 1, 1, 1, 1, 1,
		1, 1, 1, 1, 1, 1, 1, 1,
		1, 1, 1, 1, 1, 1, 1, 1,
		1, 1, 1, 1, 1, 1, 1, 1,
		1, 1, 1, 1, 1, 1, 1, 1,
		1, 1, 1, 1, 1, 1, 1, 1,
		1, 1, 1, 1, 1, 1, 1, 1,
		1, 1, 1, 1, 1, 1, 1, 1,
		1, 1, 1, 1, 1, 1, 1, 1,
		1, 1, 1, 1, 1, 1, 1, 1,
		1, 1, 1, 1, 1, 1, 1, 1,
		1, 1, 1, 1, 1, 1, 1, 1,
		1, 1, 1, 1, 1, 1, 1, 1,
		1, 1, 1, 1, 1, 1, 1, 1,
		1, 1, 1, 1, 1, 1, 1, 1,
		1, 1, 1, 1, 1, 1, 1, 1,
		1, 1, 1, 1, 1, 1, 1, 1,
		1, 1, 1, 1, 1, 1, 1, 1,
		1, 1, 1, 1, 1, 1, 1, 1,
		1, 1, 1, 1, 1, 1, 1, 1,
		1, 1, 1, 1, 1, 1, 1, 1,
		1, 1, 1, 1, 1, 1, 1, 1,
		1, 1, 1, 1, 1, 1, 1, 1,
		1, 1, 1, 1, 1, 1, 1, 1,
		1, 1, 1, 1, 1, 1, 1, 1,
		1, 1, 1, 1, 1, 1, 1, 1,
		1, 1, 1, 1, 1, 1, 1, 1,
		1, 1, 1, 1, 1, 1, 1, 1,
		1, 1, 1, 1, 1, 1, 1, 1,
		1, 1, 1, 1, 1, 1, 1, 1,
		1, 1, 1, 1, 1, 1, 1, 1,
		1, 1, 1, 1, 1, 1, 1, 1,
		1, 1, 1, 1, 1, 1, 1, 1,
		1, 1, 1, 1, 1, 1, 1, 1,
		1, 1, 1, 1, 1, 1, 1, 1,
		1, 1, 1, 1, 1, 1, 1, 1,
		1, 1, 1, 1, 1, 1, 1, 1,
		1, 1, 1, 1, 1, 1, 1, 1,
		1, 1, 1, 1, 1, 1, 1, 1,
		1, 1, 1, 1, 1, 1, 1, 1,
		1, 1, 1, 1, 1, 1, 1, 1,
		1, 1, 1, 1, 1, 1, 1, 1,
		1, 1, 1, 1, 1, 1, 1, 1,
		1, 1, 1, 1, 1, 1, 1, 1,
		1, 1, 1, 1, 1, 1, 1, 1,
		1, 1, 1, 1, 1, 1, 1, 1,
		1, 1, 1, 1, 1, 1, 1, 1,
		1, 1, 1, 1, 1, 1, 1, 1,
		1, 1, 1, 1, 1, 1, 1, 1,
		1, 1, 1, 1, 1, 1, 1, 1,
		1, 1, 1, 1, 1, 1, 1, 1,
		1, 1, 1, 1, 1, 1, 1, 1,
		1, 1, 1, 1, 1, 1, 1, 1,
		1, 1, 1, 1, 1, 1, 1, 1,
		1, 1, 1, 1, 1, 1, 1, 1,
		1, 1, 1, 1, 1, 1, 1, 1,
		1, 1, 1, 1, 1, 1, 1, 1,
		1, 1, 1, 1, 1, 1, 1, 1,
		1, 1, 1, 1, 1, 1, 1, 1,
		1, 1, 1, 1, 1, 1, 1, 1,
		1, 1, 1, 1, 1, 1, 1, 1,
		1, 1, 1, 1, 1, 1, 1, 1,
		1, 1, 1, 1, 1, 1, 1, 1,
		1, 1, 1, 1, 1, 1, 1, 1,
		1, 1, 1, 1, 1, 1, 1, 1,
		1, 1, 1, 1, 1, 1, 1, 1,
		1, 1, 1, 1, 1, 1, 1, 1,
		1, 1, 1, 1, 1, 1, 1, 1,
		1, 1, 1, 1, 1, 1, 1, 1,
		1, 1, 1, 1, 1, 1, 1, 1,
		1, 1, 1, 1, 1, 1, 1, 1,
		1, 1, 1, 1, 1, 1, 1, 1,
		1, 1, 1, 1, 1, 1, 1, 1,
		1, 1, 1, 1, 1, 1, 1, 1,
		1, 1, 1, 1, 1, 1, 1, 1,
		1, 1, 1, 1, 1, 1, 1, 1,
		1, 1, 1, 1, 1, 1, 1, 1,
		1, 1, 1, 1, 1, 1, 1, 1,
		1, 1, 1, 1, 1, 1, 1, 1,
		1, 1, 1, 1, 1, 1, 1, 1,
		1, 1, 1, 1, 1, 1, 1, 1,
		1, 1, 1, 1, 1, 1, 1, 1,
		1, 1, 1, 1, 1, 1, 1, 1,
		1, 1, 1, 1, 1, 1, 1, 1,
		1, 1, 1, 1, 1, 1, 1, 1,
		1, 1, 1, 1, 1, 1, 1, 1,
		1, 1, 1, 1, 1, 1, 1, 1,
		1, 1, 1, 1, 1, 1, 1, 1,
		1, 1, 1, 1, 1, 1, 1, 1,
		1, 1, 1, 1, 1, 1, 1, 1,
		1, 1, 1, 1, 1, 1, 1, 1,
		1, 1, 1, 1, 1, 1, 1, 1,
		1, 1, 1, 1, 1, 1, 1, 1,
		1, 1, 1, 1, 1, 1, 1, 1,
		1, 1, 1, 1, 1, 1, 1, 1,
		1, 1, 1, 1, 1, 1, 1, 1,
		1, 1, 1, 1, 1, 1, 1, 1,
		1, 1, 1, 1, 1, 1, 1, 1,
		1, 1, 1, 1, 1, 1, 1, 1,
		1, 1, 1, 1, 1, 1, 1, 1,
		1, 1, 1, 1, 1, 1, 1, 1,
		1, 1, 1, 1, 1, 1, 1, 1,
		1, 1, 1, 0
	};
	
	static const char _flux_cond_keys[] = {
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0
	};
	
	static const short _flux_cond_targs[] = {
		412, 412, 0, 2, 412, 3, 4, 2,
		2, 412, 412, 2, 2, 5, 2, 2,
		2, 2, 6, 412, 2, 412, 7, 7,
		7, 412, 2, 2, 2, 412, 9, 412,
		10, 412, 11, 412, 12, 412, 422, 412,
		14, 412, 15, 412, 16, 412, 17, 412,
		18, 412, 19, 412, 20, 412, 423, 412,
		22, 412, 23, 412, 24, 412, 25, 412,
		412, 412, 426, 426, 427, 27, 426, 27,
		426, 426, 26, 412, 426, 412, 431, 29,
		30, 32, 33, 34, 35, 36, 37, 38,
		39, 40, 41, 42, 43, 44, 45, 46,
		47, 48, 49, 50, 78, 118, 134, 141,
		144, 146, 160, 162, 179, 431, 431, 31,
		31, 143, 0, 431, 431, 431, 412, 431,
		431, 431, 412, 431, 412, 431, 412, 431,
		412, 412, 412, 412, 412, 431, 431, 431,
		431, 431, 412, 431, 431, 431, 431, 431,
		412, 412, 431, 412, 431, 412, 431, 412,
		412, 431, 412, 412, 412, 431, 431, 431,
		431, 431, 431, 412, 431, 431, 412, 431,
		431, 431, 412, 412, 412, 412, 412, 412,
		412, 431, 431, 412, 431, 412, 412, 431,
		431, 431, 431, 412, 51, 52, 53, 54,
		55, 56, 57, 58, 59, 60, 61, 62,
		63, 64, 65, 66, 67, 68, 69, 70,
		71, 72, 73, 74, 75, 76, 77, 412,
		431, 431, 412, 412, 412, 412, 412, 412,
		431, 431, 431, 431, 431, 431, 431, 431,
		431, 412, 412, 412, 412, 412, 412, 412,
		412, 412, 431, 431, 431, 431, 431, 431,
		431, 431, 431, 431, 412, 412, 412, 412,
		412, 412, 412, 412, 431, 431, 431, 431,
		431, 431, 431, 431, 431, 412, 412, 412,
		412, 412, 412, 431, 431, 431, 431, 431,
		431, 431, 431, 431, 412, 431, 431, 431,
		431, 431, 431, 431, 412, 431, 431, 431,
		431, 431, 431, 431, 431, 431, 431, 431,
		412, 431, 431, 431, 431, 431, 412, 431,
		431, 431, 431, 431, 431, 431, 412, 412,
		412, 412, 412, 412, 412, 431, 431, 431,
		431, 431, 431, 431, 431, 412, 431, 431,
		431, 431, 431, 431, 412, 431, 431, 431,
		431, 431, 431, 412, 412, 412, 412, 412,
		412, 412, 431, 431, 431, 431, 431, 431,
		412, 431, 431, 431, 431, 431, 412, 431,
		412, 431, 431, 412, 431, 431, 431, 431,
		431, 431, 431, 431, 431, 431, 431, 431,
		431, 412, 431, 431, 431, 431, 412, 431,
		412, 431, 431, 431, 412, 431, 431, 431,
		431, 412, 79, 80, 81, 82, 83, 84,
		85, 86, 87, 88, 89, 90, 91, 92,
		93, 94, 95, 96, 97, 98, 99, 100,
		101, 102, 103, 104, 105, 106, 107, 108,
		109, 110, 111, 112, 113, 33, 31, 32,
		33, 114, 115, 116, 117, 33, 31, 31,
		412, 431, 431, 431, 412, 431, 431, 431,
		412, 412, 412, 431, 412, 412, 412, 431,
		412, 431, 412, 431, 412, 431, 412, 412,
		412, 412, 412, 431, 412, 412, 412, 412,
		412, 431, 431, 431, 431, 431, 412, 412,
		412, 431, 412, 412, 431, 431, 431, 412,
		412, 431, 431, 412, 412, 412, 431, 431,
		431, 412, 412, 412, 431, 431, 431, 431,
		412, 431, 431, 431, 431, 412, 431, 431,
		412, 412, 412, 412, 431, 431, 412, 412,
		431, 431, 412, 431, 431, 431, 412, 431,
		431, 412, 431, 431, 412, 412, 431, 431,
		412, 431, 431, 412, 412, 412, 431, 431,
		431, 412, 431, 412, 431, 431, 412, 412,
		412, 431, 412, 412, 412, 412, 412, 412,
		412, 431, 431, 431, 431, 412, 431, 431,
		431, 431, 431, 431, 431, 412, 119, 120,
		121, 122, 123, 124, 125, 126, 127, 33,
		128, 129, 130, 131, 132, 133, 412, 431,
		431, 412, 431, 412, 431, 431, 431, 431,
		431, 431, 431, 431, 431, 431, 431, 412,
		431, 431, 431, 412, 412, 431, 431, 412,
		412, 431, 431, 431, 412, 412, 412, 412,
		431, 412, 431, 431, 431, 412, 412, 412,
		431, 431, 431, 431, 431, 431, 412, 431,
		431, 431, 431, 431, 412, 431, 412, 135,
		93, 136, 137, 138, 31, 139, 140, 33,
		31, 412, 431, 431, 431, 431, 412, 412,
		412, 431, 412, 412, 431, 431, 431, 412,
		412, 412, 431, 431, 412, 142, 412, 33,
		31, 412, 431, 31, 145, 412, 31, 412,
		431, 33, 147, 33, 148, 149, 150, 151,
		31, 152, 153, 154, 155, 33, 145, 156,
		157, 158, 159, 33, 31, 31, 31, 412,
		412, 431, 412, 412, 412, 431, 431, 431,
		431, 412, 431, 412, 431, 431, 412, 412,
		412, 431, 431, 412, 412, 412, 412, 412,
		431, 431, 412, 431, 431, 412, 412, 431,
		431, 412, 431, 412, 161, 412, 31, 412,
		431, 33, 163, 164, 165, 166, 167, 48,
		168, 169, 170, 171, 172, 173, 31, 174,
		175, 176, 177, 178, 31, 412, 412, 431,
		412, 431, 412, 431, 431, 431, 431, 431,
		431, 431, 412, 431, 431, 431, 412, 431,
		412, 412, 431, 431, 412, 412, 431, 412,
		412, 431, 431, 431, 412, 412, 431, 431,
		412, 431, 431, 412, 412, 431, 431, 431,
		431, 431, 412, 180, 195, 198, 210, 211,
		213, 143, 412, 181, 182, 33, 183, 184,
		185, 186, 187, 188, 189, 190, 33, 31,
		191, 192, 193, 194, 412, 431, 431, 431,
		431, 431, 412, 412, 412, 431, 412, 431,
		431, 412, 431, 431, 412, 412, 431, 431,
		431, 412, 412, 431, 431, 431, 412, 412,
		412, 412, 431, 412, 431, 431, 431, 431,
		431, 431, 431, 412, 431, 431, 412, 431,
		431, 431, 431, 431, 412, 33, 196, 33,
		197, 31, 412, 412, 431, 412, 431, 33,
		199, 200, 201, 202, 203, 204, 205, 206,
		207, 208, 209, 31, 412, 412, 431, 412,
		412, 412, 412, 412, 412, 412, 431, 412,
		431, 412, 412, 412, 412, 412, 412, 431,
		431, 431, 431, 431, 412, 412, 431, 412,
		412, 412, 431, 412, 412, 431, 412, 412,
		431, 412, 412, 431, 412, 412, 431, 33,
		31, 412, 212, 412, 31, 412, 431, 33,
		191, 31, 412, 432, 432, 432, 412, 432,
		432, 432, 412, 432, 412, 432, 432, 412,
		412, 412, 412, 412, 412, 432, 432, 432,
		432, 432, 412, 432, 432, 432, 432, 432,
		412, 412, 432, 412, 432, 412, 432, 412,
		412, 432, 412, 412, 412, 432, 432, 432,
		432, 432, 432, 412, 432, 432, 412, 432,
		432, 432, 412, 412, 412, 412, 412, 412,
		412, 432, 432, 412, 432, 412, 412, 432,
		432, 432, 432, 412, 236, 237, 238, 239,
		240, 241, 242, 243, 244, 245, 246, 247,
		248, 249, 250, 251, 252, 253, 254, 255,
		256, 257, 258, 259, 260, 261, 262, 412,
		432, 432, 412, 412, 412, 412, 412, 412,
		432, 432, 432, 432, 432, 432, 432, 432,
		432, 412, 412, 412, 412, 412, 412, 412,
		412, 412, 432, 432, 432, 432, 432, 432,
		432, 432, 432, 432, 412, 412, 412, 412,
		412, 412, 412, 412, 432, 432, 432, 432,
		432, 432, 432, 432, 432, 412, 412, 412,
		412, 412, 412, 432, 432, 432, 432, 432,
		432, 432, 432, 432, 412, 432, 432, 432,
		432, 432, 432, 432, 412, 432, 432, 432,
		432, 432, 432, 432, 432, 432, 432, 432,
		412, 432, 432, 432, 432, 432, 412, 432,
		432, 432, 432, 432, 432, 432, 412, 412,
		412, 412, 412, 412, 412, 432, 432, 432,
		432, 432, 432, 432, 432, 412, 432, 432,
		432, 432, 432, 432, 412, 432, 432, 432,
		432, 432, 432, 412, 412, 412, 412, 412,
		412, 412, 432, 432, 432, 432, 432, 432,
		412, 432, 432, 432, 432, 432, 412, 432,
		412, 432, 432, 412, 432, 432, 432, 432,
		432, 432, 432, 432, 432, 432, 432, 432,
		432, 412, 432, 432, 432, 432, 412, 432,
		412, 432, 432, 432, 412, 432, 432, 432,
		432, 412, 264, 265, 266, 267, 268, 269,
		270, 271, 272, 273, 274, 275, 276, 277,
		278, 279, 280, 281, 282, 283, 284, 285,
		286, 287, 288, 289, 290, 291, 292, 293,
		294, 295, 296, 297, 298, 218, 216, 217,
		218, 299, 300, 301, 302, 218, 216, 216,
		412, 432, 432, 432, 412, 432, 432, 432,
		412, 412, 412, 432, 412, 412, 412, 432,
		412, 432, 412, 432, 412, 432, 412, 412,
		412, 412, 412, 432, 412, 412, 412, 412,
		412, 432, 432, 432, 432, 432, 412, 412,
		412, 432, 412, 412, 432, 432, 432, 412,
		412, 432, 432, 412, 412, 412, 432, 432,
		432, 412, 412, 412, 432, 432, 432, 432,
		412, 432, 432, 432, 432, 412, 432, 432,
		412, 412, 412, 412, 432, 432, 412, 412,
		432, 432, 412, 432, 432, 432, 412, 432,
		432, 412, 432, 432, 412, 412, 432, 432,
		412, 432, 432, 412, 412, 412, 432, 432,
		432, 412, 432, 412, 432, 432, 412, 412,
		412, 432, 412, 412, 412, 412, 412, 412,
		412, 432, 432, 432, 432, 412, 432, 432,
		432, 432, 432, 432, 432, 412, 304, 305,
		306, 307, 308, 309, 310, 311, 312, 218,
		313, 314, 315, 316, 317, 318, 412, 432,
		432, 412, 432, 412, 432, 432, 432, 432,
		432, 432, 432, 432, 432, 432, 432, 412,
		432, 432, 432, 412, 412, 432, 432, 412,
		412, 432, 432, 432, 412, 412, 412, 412,
		432, 412, 432, 432, 432, 412, 412, 412,
		432, 432, 432, 432, 432, 432, 412, 432,
		432, 432, 432, 432, 412, 432, 412, 320,
		278, 321, 322, 323, 216, 324, 325, 218,
		216, 412, 432, 432, 432, 432, 412, 412,
		412, 432, 412, 412, 432, 432, 432, 412,
		412, 412, 432, 432, 412, 327, 412, 218,
		216, 412, 432, 216, 330, 412, 216, 412,
		432, 218, 332, 218, 333, 334, 335, 336,
		216, 337, 338, 339, 340, 218, 330, 341,
		342, 343, 344, 218, 216, 216, 216, 412,
		412, 432, 412, 412, 412, 432, 432, 432,
		432, 412, 432, 412, 432, 432, 412, 412,
		412, 432, 432, 412, 412, 412, 412, 412,
		432, 432, 412, 432, 432, 412, 412, 432,
		432, 412, 432, 412, 346, 412, 216, 412,
		432, 218, 348, 349, 350, 351, 352, 233,
		353, 354, 355, 356, 357, 358, 216, 359,
		360, 361, 362, 363, 216, 412, 412, 432,
		412, 432, 412, 432, 432, 432, 432, 432,
		432, 432, 412, 432, 432, 432, 412, 432,
		412, 412, 432, 432, 412, 412, 432, 412,
		412, 432, 432, 432, 412, 412, 432, 432,
		412, 432, 432, 412, 412, 432, 432, 432,
		432, 432, 412, 365, 380, 383, 395, 396,
		398, 328, 412, 366, 367, 218, 368, 369,
		370, 371, 372, 373, 374, 375, 218, 216,
		376, 377, 378, 379, 412, 432, 432, 432,
		432, 432, 412, 412, 412, 432, 412, 432,
		432, 412, 432, 432, 412, 412, 432, 432,
		432, 412, 412, 432, 432, 432, 412, 412,
		412, 412, 432, 412, 432, 432, 432, 432,
		432, 432, 432, 412, 432, 432, 412, 432,
		432, 432, 432, 432, 412, 218, 381, 218,
		382, 216, 412, 412, 432, 412, 432, 218,
		384, 385, 386, 387, 388, 389, 390, 391,
		392, 393, 394, 216, 412, 412, 432, 412,
		412, 412, 412, 412, 412, 412, 432, 412,
		432, 412, 412, 412, 412, 412, 412, 432,
		432, 432, 432, 432, 412, 412, 432, 412,
		412, 412, 432, 412, 412, 432, 412, 412,
		432, 412, 412, 432, 412, 412, 432, 218,
		216, 412, 397, 412, 216, 412, 432, 218,
		376, 216, 412, 412, 0, 400, 480, 401,
		400, 400, 483, 401, 400, 400, 483, 401,
		403, 400, 400, 480, 401, 404, 404, 404,
		400, 400, 480, 401, 405, 405, 405, 400,
		400, 480, 401, 400, 485, 484, 484, 485,
		485, 408, 485, 485, 485, 485, 409, 484,
		485, 484, 410, 410, 410, 484, 485, 485,
		485, 484, 485, 484, 484, 485, 412, 413,
		1, 414, 412, 412, 412, 412, 412, 412,
		412, 415, 416, 412, 428, 429, 430, 412,
		28, 412, 412, 412, 432, 433, 435, 441,
		448, 453, 455, 460, 466, 471, 412, 399,
		412, 214, 215, 217, 218, 219, 220, 221,
		222, 223, 224, 225, 226, 227, 228, 229,
		230, 231, 232, 233, 234, 235, 263, 303,
		319, 326, 329, 331, 345, 347, 364, 413,
		418, 432, 432, 216, 216, 328, 0, 413,
		413, 413, 412, 2, 412, 3, 4, 2,
		415, 412, 417, 412, 412, 417, 415, 426,
		426, 427, 27, 426, 27, 426, 426, 419,
		412, 415, 426, 426, 427, 27, 426, 27,
		426, 426, 420, 412, 415, 426, 426, 427,
		27, 426, 27, 426, 426, 421, 412, 8,
		415, 426, 426, 427, 27, 426, 27, 426,
		426, 425, 412, 13, 412, 21, 21, 424,
		412, 412, 21, 21, 412, 424, 412, 415,
		426, 426, 427, 27, 426, 27, 426, 426,
		425, 412, 26, 412, 426, 426, 26, 412,
		412, 412, 412, 412, 412, 412, 412, 412,
		412, 431, 29, 30, 32, 33, 34, 35,
		36, 37, 38, 39, 40, 41, 42, 43,
		44, 45, 46, 47, 48, 49, 50, 78,
		118, 134, 141, 144, 146, 160, 162, 179,
		431, 431, 431, 31, 31, 143, 412, 432,
		214, 215, 217, 218, 219, 220, 221, 222,
		223, 224, 225, 226, 227, 228, 229, 230,
		231, 232, 233, 234, 235, 263, 303, 319,
		326, 329, 331, 345, 347, 364, 432, 432,
		432, 216, 216, 328, 412, 432, 434, 214,
		215, 217, 218, 219, 220, 221, 222, 223,
		224, 225, 226, 227, 228, 229, 230, 231,
		232, 233, 234, 235, 263, 303, 319, 326,
		329, 331, 345, 347, 364, 432, 432, 432,
		216, 216, 328, 412, 432, 432, 214, 215,
		217, 218, 219, 220, 221, 222, 223, 224,
		225, 226, 227, 228, 229, 230, 231, 232,
		233, 234, 235, 263, 303, 319, 326, 329,
		331, 345, 347, 364, 432, 432, 432, 216,
		216, 328, 412, 432, 436, 214, 215, 217,
		218, 219, 220, 221, 222, 223, 224, 225,
		226, 227, 228, 229, 230, 231, 232, 233,
		234, 235, 263, 303, 319, 326, 329, 331,
		345, 347, 364, 432, 432, 432, 216, 216,
		328, 412, 432, 437, 214, 215, 217, 218,
		219, 220, 221, 222, 223, 224, 225, 226,
		227, 228, 229, 230, 231, 232, 233, 234,
		235, 263, 303, 319, 326, 329, 331, 345,
		347, 364, 432, 432, 432, 216, 216, 328,
		412, 432, 438, 214, 215, 217, 218, 219,
		220, 221, 222, 223, 224, 225, 226, 227,
		228, 229, 230, 231, 232, 233, 234, 235,
		263, 303, 319, 326, 329, 331, 345, 347,
		364, 432, 432, 432, 216, 216, 328, 412,
		432, 439, 214, 215, 217, 218, 219, 220,
		221, 222, 223, 224, 225, 226, 227, 228,
		229, 230, 231, 232, 233, 234, 235, 263,
		303, 319, 326, 329, 331, 345, 347, 364,
		432, 432, 432, 216, 216, 328, 412, 432,
		440, 214, 215, 217, 218, 219, 220, 221,
		222, 223, 224, 225, 226, 227, 228, 229,
		230, 231, 232, 233, 234, 235, 263, 303,
		319, 326, 329, 331, 345, 347, 364, 432,
		432, 432, 216, 216, 328, 412, 432, 432,
		214, 215, 217, 218, 219, 220, 221, 222,
		223, 224, 225, 226, 227, 228, 229, 230,
		231, 232, 233, 234, 235, 263, 303, 319,
		326, 329, 331, 345, 347, 364, 432, 432,
		432, 216, 216, 328, 412, 432, 442, 444,
		214, 215, 217, 218, 219, 220, 221, 222,
		223, 224, 225, 226, 227, 228, 229, 230,
		231, 232, 233, 234, 235, 263, 303, 319,
		326, 329, 331, 345, 347, 364, 432, 432,
		432, 216, 216, 328, 412, 432, 443, 214,
		215, 217, 218, 219, 220, 221, 222, 223,
		224, 225, 226, 227, 228, 229, 230, 231,
		232, 233, 234, 235, 263, 303, 319, 326,
		329, 331, 345, 347, 364, 432, 432, 432,
		216, 216, 328, 412, 432, 432, 214, 215,
		217, 218, 219, 220, 221, 222, 223, 224,
		225, 226, 227, 228, 229, 230, 231, 232,
		233, 234, 235, 263, 303, 319, 326, 329,
		331, 345, 347, 364, 432, 432, 432, 216,
		216, 328, 412, 432, 445, 214, 215, 217,
		218, 219, 220, 221, 222, 223, 224, 225,
		226, 227, 228, 229, 230, 231, 232, 233,
		234, 235, 263, 303, 319, 326, 329, 331,
		345, 347, 364, 432, 432, 432, 216, 216,
		328, 412, 432, 446, 214, 215, 217, 218,
		219, 220, 221, 222, 223, 224, 225, 226,
		227, 228, 229, 230, 231, 232, 233, 234,
		235, 263, 303, 319, 326, 329, 331, 345,
		347, 364, 432, 432, 432, 216, 216, 328,
		412, 432, 447, 214, 215, 217, 218, 219,
		220, 221, 222, 223, 224, 225, 226, 227,
		228, 229, 230, 231, 232, 233, 234, 235,
		263, 303, 319, 326, 329, 331, 345, 347,
		364, 432, 432, 432, 216, 216, 328, 412,
		432, 432, 214, 215, 217, 218, 219, 220,
		221, 222, 223, 224, 225, 226, 227, 228,
		229, 230, 231, 232, 233, 234, 235, 263,
		303, 319, 326, 329, 331, 345, 347, 364,
		432, 432, 432, 216, 216, 328, 412, 432,
		432, 449, 214, 215, 217, 218, 219, 220,
		221, 222, 223, 224, 225, 226, 227, 228,
		229, 230, 231, 232, 233, 234, 235, 263,
		303, 319, 326, 329, 331, 345, 347, 364,
		432, 432, 432, 216, 216, 328, 412, 432,
		450, 214, 215, 217, 218, 219, 220, 221,
		222, 223, 224, 225, 226, 227, 228, 229,
		230, 231, 232, 233, 234, 235, 263, 303,
		319, 326, 329, 331, 345, 347, 364, 432,
		432, 432, 216, 216, 328, 412, 432, 451,
		214, 215, 217, 218, 219, 220, 221, 222,
		223, 224, 225, 226, 227, 228, 229, 230,
		231, 232, 233, 234, 235, 263, 303, 319,
		326, 329, 331, 345, 347, 364, 432, 432,
		432, 216, 216, 328, 412, 432, 452, 214,
		215, 217, 218, 219, 220, 221, 222, 223,
		224, 225, 226, 227, 228, 229, 230, 231,
		232, 233, 234, 235, 263, 303, 319, 326,
		329, 331, 345, 347, 364, 432, 432, 432,
		216, 216, 328, 412, 432, 432, 214, 215,
		217, 218, 219, 220, 221, 222, 223, 224,
		225, 226, 227, 228, 229, 230, 231, 232,
		233, 234, 235, 263, 303, 319, 326, 329,
		331, 345, 347, 364, 432, 432, 432, 216,
		216, 328, 412, 432, 454, 214, 215, 217,
		218, 219, 220, 221, 222, 223, 224, 225,
		226, 227, 228, 229, 230, 231, 232, 233,
		234, 235, 263, 303, 319, 326, 329, 331,
		345, 347, 364, 432, 432, 432, 216, 216,
		328, 412, 432, 432, 214, 215, 217, 218,
		219, 220, 221, 222, 223, 224, 225, 226,
		227, 228, 229, 230, 231, 232, 233, 234,
		235, 263, 303, 319, 326, 329, 331, 345,
		347, 364, 432, 432, 432, 216, 216, 328,
		412, 432, 456, 432, 214, 215, 217, 218,
		219, 220, 221, 222, 223, 224, 225, 226,
		227, 228, 229, 230, 231, 232, 233, 234,
		235, 263, 303, 319, 326, 329, 331, 345,
		347, 364, 432, 432, 432, 216, 216, 328,
		412, 432, 457, 214, 215, 217, 218, 219,
		220, 221, 222, 223, 224, 225, 226, 227,
		228, 229, 230, 231, 232, 233, 234, 235,
		263, 303, 319, 326, 329, 331, 345, 347,
		364, 432, 432, 432, 216, 216, 328, 412,
		432, 458, 214, 215, 217, 218, 219, 220,
		221, 222, 223, 224, 225, 226, 227, 228,
		229, 230, 231, 232, 233, 234, 235, 263,
		303, 319, 326, 329, 331, 345, 347, 364,
		432, 432, 432, 216, 216, 328, 412, 432,
		459, 214, 215, 217, 218, 219, 220, 221,
		222, 223, 224, 225, 226, 227, 228, 229,
		230, 231, 232, 233, 234, 235, 263, 303,
		319, 326, 329, 331, 345, 347, 364, 432,
		432, 432, 216, 216, 328, 412, 432, 432,
		214, 215, 217, 218, 219, 220, 221, 222,
		223, 224, 225, 226, 227, 228, 229, 230,
		231, 232, 233, 234, 235, 263, 303, 319,
		326, 329, 331, 345, 347, 364, 432, 432,
		432, 216, 216, 328, 412, 432, 461, 214,
		215, 217, 218, 219, 220, 221, 222, 223,
		224, 225, 226, 227, 228, 229, 230, 231,
		232, 233, 234, 235, 263, 303, 319, 326,
		329, 331, 345, 347, 364, 432, 432, 432,
		216, 216, 328, 412, 432, 462, 214, 215,
		217, 218, 219, 220, 221, 222, 223, 224,
		225, 226, 227, 228, 229, 230, 231, 232,
		233, 234, 235, 263, 303, 319, 326, 329,
		331, 345, 347, 364, 432, 432, 432, 216,
		216, 328, 412, 432, 463, 214, 215, 217,
		218, 219, 220, 221, 222, 223, 224, 225,
		226, 227, 228, 229, 230, 231, 232, 233,
		234, 235, 263, 303, 319, 326, 329, 331,
		345, 347, 364, 432, 432, 432, 216, 216,
		328, 412, 432, 464, 214, 215, 217, 218,
		219, 220, 221, 222, 223, 224, 225, 226,
		227, 228, 229, 230, 231, 232, 233, 234,
		235, 263, 303, 319, 326, 329, 331, 345,
		347, 364, 432, 432, 432, 216, 216, 328,
		412, 432, 465, 214, 215, 217, 218, 219,
		220, 221, 222, 223, 224, 225, 226, 227,
		228, 229, 230, 231, 232, 233, 234, 235,
		263, 303, 319, 326, 329, 331, 345, 347,
		364, 432, 432, 432, 216, 216, 328, 412,
		432, 432, 214, 215, 217, 218, 219, 220,
		221, 222, 223, 224, 225, 226, 227, 228,
		229, 230, 231, 232, 233, 234, 235, 263,
		303, 319, 326, 329, 331, 345, 347, 364,
		432, 432, 432, 216, 216, 328, 412, 432,
		467, 214, 215, 217, 218, 219, 220, 221,
		222, 223, 224, 225, 226, 227, 228, 229,
		230, 231, 232, 233, 234, 235, 263, 303,
		319, 326, 329, 331, 345, 347, 364, 432,
		432, 432, 216, 216, 328, 412, 432, 468,
		214, 215, 217, 218, 219, 220, 221, 222,
		223, 224, 225, 226, 227, 228, 229, 230,
		231, 232, 233, 234, 235, 263, 303, 319,
		326, 329, 331, 345, 347, 364, 432, 432,
		432, 216, 216, 328, 412, 432, 469, 214,
		215, 217, 218, 219, 220, 221, 222, 223,
		224, 225, 226, 227, 228, 229, 230, 231,
		232, 233, 234, 235, 263, 303, 319, 326,
		329, 331, 345, 347, 364, 432, 432, 432,
		216, 216, 328, 412, 432, 470, 214, 215,
		217, 218, 219, 220, 221, 222, 223, 224,
		225, 226, 227, 228, 229, 230, 231, 232,
		233, 234, 235, 263, 303, 319, 326, 329,
		331, 345, 347, 364, 432, 432, 432, 216,
		216, 328, 412, 432, 432, 214, 215, 217,
		218, 219, 220, 221, 222, 223, 224, 225,
		226, 227, 228, 229, 230, 231, 232, 233,
		234, 235, 263, 303, 319, 326, 329, 331,
		345, 347, 364, 432, 432, 432, 216, 216,
		328, 412, 432, 472, 478, 214, 215, 217,
		218, 219, 220, 221, 222, 223, 224, 225,
		226, 227, 228, 229, 230, 231, 232, 233,
		234, 235, 263, 303, 319, 326, 329, 331,
		345, 347, 364, 432, 432, 432, 216, 216,
		328, 412, 432, 473, 214, 215, 217, 218,
		219, 220, 221, 222, 223, 224, 225, 226,
		227, 228, 229, 230, 231, 232, 233, 234,
		235, 263, 303, 319, 326, 329, 331, 345,
		347, 364, 432, 432, 432, 216, 216, 328,
		412, 432, 474, 214, 215, 217, 218, 219,
		220, 221, 222, 223, 224, 225, 226, 227,
		228, 229, 230, 231, 232, 233, 234, 235,
		263, 303, 319, 326, 329, 331, 345, 347,
		364, 432, 432, 432, 216, 216, 328, 412,
		432, 475, 214, 215, 217, 218, 219, 220,
		221, 222, 223, 224, 225, 226, 227, 228,
		229, 230, 231, 232, 233, 234, 235, 263,
		303, 319, 326, 329, 331, 345, 347, 364,
		432, 432, 432, 216, 216, 328, 412, 432,
		476, 214, 215, 217, 218, 219, 220, 221,
		222, 223, 224, 225, 226, 227, 228, 229,
		230, 231, 232, 233, 234, 235, 263, 303,
		319, 326, 329, 331, 345, 347, 364, 432,
		432, 432, 216, 216, 328, 412, 432, 477,
		214, 215, 217, 218, 219, 220, 221, 222,
		223, 224, 225, 226, 227, 228, 229, 230,
		231, 232, 233, 234, 235, 263, 303, 319,
		326, 329, 331, 345, 347, 364, 432, 432,
		432, 216, 216, 328, 412, 432, 432, 214,
		215, 217, 218, 219, 220, 221, 222, 223,
		224, 225, 226, 227, 228, 229, 230, 231,
		232, 233, 234, 235, 263, 303, 319, 326,
		329, 331, 345, 347, 364, 432, 432, 432,
		216, 216, 328, 412, 432, 479, 214, 215,
		217, 218, 219, 220, 221, 222, 223, 224,
		225, 226, 227, 228, 229, 230, 231, 232,
		233, 234, 235, 263, 303, 319, 326, 329,
		331, 345, 347, 364, 432, 432, 432, 216,
		216, 328, 412, 432, 432, 214, 215, 217,
		218, 219, 220, 221, 222, 223, 224, 225,
		226, 227, 228, 229, 230, 231, 232, 233,
		234, 235, 263, 303, 319, 326, 329, 331,
		345, 347, 364, 432, 432, 432, 216, 216,
		328, 412, 480, 481, 482, 481, 480, 481,
		481, 481, 480, 400, 480, 402, 400, 400,
		480, 401, 400, 485, 484, 411, 407, 485,
		485, 484, 406, 407, 485, 412, 412, 412,
		412, 412, 412, 412, 412, 412, 412, 412,
		412, 412, 412, 412, 412, 412, 412, 412,
		412, 412, 412, 412, 412, 412, 412, 412,
		412, 412, 412, 412, 412, 412, 412, 412,
		412, 412, 412, 412, 412, 412, 412, 412,
		412, 412, 412, 412, 412, 412, 412, 412,
		412, 412, 412, 412, 412, 412, 412, 412,
		412, 412, 412, 412, 412, 412, 412, 412,
		412, 412, 412, 412, 412, 412, 412, 412,
		412, 412, 412, 412, 412, 412, 412, 412,
		412, 412, 412, 412, 412, 412, 412, 412,
		412, 412, 412, 412, 412, 412, 412, 412,
		412, 412, 412, 412, 412, 412, 412, 412,
		412, 412, 412, 412, 412, 412, 412, 412,
		412, 412, 412, 412, 412, 412, 412, 412,
		412, 412, 412, 412, 412, 412, 412, 412,
		412, 412, 412, 412, 412, 412, 412, 412,
		412, 412, 412, 412, 412, 412, 412, 412,
		412, 412, 412, 412, 412, 412, 412, 412,
		412, 412, 412, 412, 412, 412, 412, 412,
		412, 412, 412, 412, 412, 412, 412, 412,
		412, 412, 412, 412, 412, 412, 412, 412,
		412, 412, 412, 412, 412, 412, 412, 412,
		412, 412, 412, 412, 412, 412, 412, 412,
		412, 412, 412, 412, 412, 412, 412, 412,
		412, 412, 412, 412, 412, 412, 412, 412,
		412, 412, 412, 412, 412, 412, 412, 412,
		412, 412, 412, 412, 412, 412, 412, 412,
		412, 412, 412, 412, 412, 412, 412, 412,
		412, 412, 412, 412, 412, 412, 412, 412,
		412, 412, 412, 412, 412, 412, 412, 412,
		412, 412, 412, 412, 412, 412, 412, 412,
		412, 412, 412, 412, 412, 412, 412, 412,
		412, 412, 412, 412, 412, 412, 412, 412,
		412, 412, 412, 412, 412, 412, 412, 412,
		412, 412, 412, 412, 412, 412, 412, 412,
		412, 412, 412, 412, 412, 412, 412, 412,
		412, 412, 412, 412, 412, 412, 412, 412,
		412, 412, 412, 412, 412, 412, 412, 412,
		412, 412, 412, 412, 412, 412, 412, 412,
		412, 412, 412, 412, 412, 412, 412, 412,
		412, 412, 412, 412, 412, 412, 412, 412,
		412, 412, 412, 412, 412, 412, 412, 412,
		412, 412, 412, 412, 412, 412, 412, 412,
		412, 412, 412, 412, 412, 412, 412, 412,
		412, 412, 412, 412, 412, 412, 412, 412,
		412, 412, 412, 412, 412, 412, 412, 412,
		412, 412, 412, 412, 412, 412, 412, 412,
		412, 412, 412, 412, 412, 412, 412, 412,
		412, 480, 480, 480, 480, 480, 480, 484,
		484, 484, 484, 484, 412, 412, 412, 412,
		412, 412, 412, 412, 412, 412, 412, 412,
		412, 412, 412, 412, 412, 412, 412, 412,
		412, 412, 412, 412, 412, 412, 412, 412,
		412, 412, 412, 412, 412, 412, 412, 412,
		412, 412, 412, 412, 412, 412, 412, 412,
		412, 412, 412, 412, 412, 412, 412, 412,
		412, 412, 412, 412, 412, 412, 412, 412,
		412, 412, 412, 412, 412, 412, 412, 480,
		480, 480, 484, 0
	};
	
	static const short _flux_cond_actions[] = {
		43, 47, 0, 1, 25, 0, 0, 0,
		1, 25, 103, 0, 0, 0, 0, 0,
		0, 0, 0, 103, 0, 103, 0, 0,
		0, 103, 0, 0, 0, 103, 0, 97,
		0, 97, 0, 97, 0, 97, 7, 97,
		0, 101, 0, 101, 0, 101, 0, 101,
		0, 101, 0, 101, 0, 101, 7, 101,
		0, 101, 0, 101, 0, 101, 0, 101,
		23, 101, 185, 185, 185, 0, 185, 0,
		185, 185, 0, 99, 185, 105, 188, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 188, 188, 0,
		0, 0, 0, 188, 188, 188, 105, 188,
		188, 188, 105, 188, 105, 188, 105, 188,
		105, 105, 105, 105, 105, 188, 188, 188,
		188, 188, 105, 188, 188, 188, 188, 188,
		105, 105, 188, 105, 188, 105, 188, 105,
		105, 188, 105, 105, 105, 188, 188, 188,
		188, 188, 188, 105, 188, 188, 105, 188,
		188, 188, 105, 105, 105, 105, 105, 105,
		105, 188, 188, 105, 188, 105, 105, 188,
		188, 188, 188, 105, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 105,
		188, 188, 105, 105, 105, 105, 105, 105,
		188, 188, 188, 188, 188, 188, 188, 188,
		188, 105, 105, 105, 105, 105, 105, 105,
		105, 105, 188, 188, 188, 188, 188, 188,
		188, 188, 188, 188, 105, 105, 105, 105,
		105, 105, 105, 105, 188, 188, 188, 188,
		188, 188, 188, 188, 188, 105, 105, 105,
		105, 105, 105, 188, 188, 188, 188, 188,
		188, 188, 188, 188, 105, 188, 188, 188,
		188, 188, 188, 188, 105, 188, 188, 188,
		188, 188, 188, 188, 188, 188, 188, 188,
		105, 188, 188, 188, 188, 188, 105, 188,
		188, 188, 188, 188, 188, 188, 105, 105,
		105, 105, 105, 105, 105, 188, 188, 188,
		188, 188, 188, 188, 188, 105, 188, 188,
		188, 188, 188, 188, 105, 188, 188, 188,
		188, 188, 188, 105, 105, 105, 105, 105,
		105, 105, 188, 188, 188, 188, 188, 188,
		105, 188, 188, 188, 188, 188, 105, 188,
		105, 188, 188, 105, 188, 188, 188, 188,
		188, 188, 188, 188, 188, 188, 188, 188,
		188, 105, 188, 188, 188, 188, 105, 188,
		105, 188, 188, 188, 105, 188, 188, 188,
		188, 105, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		105, 188, 188, 188, 105, 188, 188, 188,
		105, 105, 105, 188, 105, 105, 105, 188,
		105, 188, 105, 188, 105, 188, 105, 105,
		105, 105, 105, 188, 105, 105, 105, 105,
		105, 188, 188, 188, 188, 188, 105, 105,
		105, 188, 105, 105, 188, 188, 188, 105,
		105, 188, 188, 105, 105, 105, 188, 188,
		188, 105, 105, 105, 188, 188, 188, 188,
		105, 188, 188, 188, 188, 105, 188, 188,
		105, 105, 105, 105, 188, 188, 105, 105,
		188, 188, 105, 188, 188, 188, 105, 188,
		188, 105, 188, 188, 105, 105, 188, 188,
		105, 188, 188, 105, 105, 105, 188, 188,
		188, 105, 188, 105, 188, 188, 105, 105,
		105, 188, 105, 105, 105, 105, 105, 105,
		105, 188, 188, 188, 188, 105, 188, 188,
		188, 188, 188, 188, 188, 105, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 105, 188,
		188, 105, 188, 105, 188, 188, 188, 188,
		188, 188, 188, 188, 188, 188, 188, 105,
		188, 188, 188, 105, 105, 188, 188, 105,
		105, 188, 188, 188, 105, 105, 105, 105,
		188, 105, 188, 188, 188, 105, 105, 105,
		188, 188, 188, 188, 188, 188, 105, 188,
		188, 188, 188, 188, 105, 188, 105, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 105, 188, 188, 188, 188, 105, 105,
		105, 188, 105, 105, 188, 188, 188, 105,
		105, 105, 188, 188, 105, 0, 105, 0,
		0, 105, 188, 0, 0, 105, 0, 105,
		188, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 105,
		105, 188, 105, 105, 105, 188, 188, 188,
		188, 105, 188, 105, 188, 188, 105, 105,
		105, 188, 188, 105, 105, 105, 105, 105,
		188, 188, 105, 188, 188, 105, 105, 188,
		188, 105, 188, 105, 0, 105, 0, 105,
		188, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 105, 105, 188,
		105, 188, 105, 188, 188, 188, 188, 188,
		188, 188, 105, 188, 188, 188, 105, 188,
		105, 105, 188, 188, 105, 105, 188, 105,
		105, 188, 188, 188, 105, 105, 188, 188,
		105, 188, 188, 105, 105, 188, 188, 188,
		188, 188, 105, 0, 0, 0, 0, 0,
		0, 0, 105, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 105, 188, 188, 188,
		188, 188, 105, 105, 105, 188, 105, 188,
		188, 105, 188, 188, 105, 105, 188, 188,
		188, 105, 105, 188, 188, 188, 105, 105,
		105, 105, 188, 105, 188, 188, 188, 188,
		188, 188, 188, 105, 188, 188, 105, 188,
		188, 188, 188, 188, 105, 0, 0, 0,
		0, 0, 105, 105, 188, 105, 188, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 105, 105, 188, 105,
		105, 105, 105, 105, 105, 105, 188, 105,
		188, 105, 105, 105, 105, 105, 105, 188,
		188, 188, 188, 188, 105, 105, 188, 105,
		105, 105, 188, 105, 105, 188, 105, 105,
		188, 105, 105, 188, 105, 105, 188, 0,
		0, 105, 0, 105, 0, 105, 188, 0,
		0, 0, 105, 176, 176, 176, 105, 176,
		176, 176, 105, 176, 105, 176, 176, 105,
		105, 105, 105, 105, 105, 176, 176, 176,
		176, 176, 105, 176, 176, 176, 176, 176,
		105, 105, 176, 105, 176, 105, 176, 105,
		105, 176, 105, 105, 105, 176, 176, 176,
		176, 176, 176, 105, 176, 176, 105, 176,
		176, 176, 105, 105, 105, 105, 105, 105,
		105, 176, 176, 105, 176, 105, 105, 176,
		176, 176, 176, 105, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 105,
		176, 176, 105, 105, 105, 105, 105, 105,
		176, 176, 176, 176, 176, 176, 176, 176,
		176, 105, 105, 105, 105, 105, 105, 105,
		105, 105, 176, 176, 176, 176, 176, 176,
		176, 176, 176, 176, 105, 105, 105, 105,
		105, 105, 105, 105, 176, 176, 176, 176,
		176, 176, 176, 176, 176, 105, 105, 105,
		105, 105, 105, 176, 176, 176, 176, 176,
		176, 176, 176, 176, 105, 176, 176, 176,
		176, 176, 176, 176, 105, 176, 176, 176,
		176, 176, 176, 176, 176, 176, 176, 176,
		105, 176, 176, 176, 176, 176, 105, 176,
		176, 176, 176, 176, 176, 176, 105, 105,
		105, 105, 105, 105, 105, 176, 176, 176,
		176, 176, 176, 176, 176, 105, 176, 176,
		176, 176, 176, 176, 105, 176, 176, 176,
		176, 176, 176, 105, 105, 105, 105, 105,
		105, 105, 176, 176, 176, 176, 176, 176,
		105, 176, 176, 176, 176, 176, 105, 176,
		105, 176, 176, 105, 176, 176, 176, 176,
		176, 176, 176, 176, 176, 176, 176, 176,
		176, 105, 176, 176, 176, 176, 105, 176,
		105, 176, 176, 176, 105, 176, 176, 176,
		176, 105, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		105, 176, 176, 176, 105, 176, 176, 176,
		105, 105, 105, 176, 105, 105, 105, 176,
		105, 176, 105, 176, 105, 176, 105, 105,
		105, 105, 105, 176, 105, 105, 105, 105,
		105, 176, 176, 176, 176, 176, 105, 105,
		105, 176, 105, 105, 176, 176, 176, 105,
		105, 176, 176, 105, 105, 105, 176, 176,
		176, 105, 105, 105, 176, 176, 176, 176,
		105, 176, 176, 176, 176, 105, 176, 176,
		105, 105, 105, 105, 176, 176, 105, 105,
		176, 176, 105, 176, 176, 176, 105, 176,
		176, 105, 176, 176, 105, 105, 176, 176,
		105, 176, 176, 105, 105, 105, 176, 176,
		176, 105, 176, 105, 176, 176, 105, 105,
		105, 176, 105, 105, 105, 105, 105, 105,
		105, 176, 176, 176, 176, 105, 176, 176,
		176, 176, 176, 176, 176, 105, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 105, 176,
		176, 105, 176, 105, 176, 176, 176, 176,
		176, 176, 176, 176, 176, 176, 176, 105,
		176, 176, 176, 105, 105, 176, 176, 105,
		105, 176, 176, 176, 105, 105, 105, 105,
		176, 105, 176, 176, 176, 105, 105, 105,
		176, 176, 176, 176, 176, 176, 105, 176,
		176, 176, 176, 176, 105, 176, 105, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 105, 176, 176, 176, 176, 105, 105,
		105, 176, 105, 105, 176, 176, 176, 105,
		105, 105, 176, 176, 105, 0, 105, 0,
		0, 105, 176, 0, 0, 105, 0, 105,
		176, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 105,
		105, 176, 105, 105, 105, 176, 176, 176,
		176, 105, 176, 105, 176, 176, 105, 105,
		105, 176, 176, 105, 105, 105, 105, 105,
		176, 176, 105, 176, 176, 105, 105, 176,
		176, 105, 176, 105, 0, 105, 0, 105,
		176, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 105, 105, 176,
		105, 176, 105, 176, 176, 176, 176, 176,
		176, 176, 105, 176, 176, 176, 105, 176,
		105, 105, 176, 176, 105, 105, 176, 105,
		105, 176, 176, 176, 105, 105, 176, 176,
		105, 176, 176, 105, 105, 176, 176, 176,
		176, 176, 105, 0, 0, 0, 0, 0,
		0, 0, 105, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 105, 176, 176, 176,
		176, 176, 105, 105, 105, 176, 105, 176,
		176, 105, 176, 176, 105, 105, 176, 176,
		176, 105, 105, 176, 176, 176, 105, 105,
		105, 105, 176, 105, 176, 176, 176, 176,
		176, 176, 176, 105, 176, 176, 105, 176,
		176, 176, 176, 176, 105, 0, 0, 0,
		0, 0, 105, 105, 176, 105, 176, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 105, 105, 176, 105,
		105, 105, 105, 105, 105, 105, 176, 105,
		176, 105, 105, 105, 105, 105, 105, 176,
		176, 176, 176, 176, 105, 105, 176, 105,
		105, 105, 176, 105, 105, 176, 105, 105,
		176, 105, 105, 176, 105, 105, 176, 0,
		0, 105, 0, 105, 0, 105, 176, 0,
		0, 0, 105, 67, 0, 1, 9, 0,
		0, 1, 131, 0, 0, 1, 131, 0,
		0, 0, 1, 9, 0, 0, 0, 0,
		0, 1, 9, 0, 0, 0, 0, 0,
		1, 9, 0, 0, 197, 115, 115, 194,
		194, 0, 194, 194, 194, 194, 0, 117,
		194, 117, 0, 0, 0, 117, 194, 194,
		194, 117, 197, 109, 107, 194, 125, 0,
		0, 7, 33, 53, 55, 31, 27, 69,
		29, 191, 0, 65, 0, 0, 0, 71,
		0, 57, 59, 35, 176, 176, 176, 176,
		176, 176, 176, 176, 176, 176, 61, 0,
		63, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		179, 176, 176, 0, 0, 0, 0, 0,
		0, 0, 95, 1, 25, 0, 0, 0,
		182, 105, 0, 85, 122, 0, 182, 185,
		185, 185, 0, 185, 0, 185, 185, 179,
		77, 182, 185, 185, 185, 0, 185, 0,
		185, 185, 179, 77, 182, 185, 185, 185,
		0, 185, 0, 185, 185, 179, 77, 0,
		182, 185, 185, 185, 0, 185, 0, 185,
		185, 179, 77, 0, 81, 0, 0, 7,
		23, 81, 0, 0, 23, 7, 81, 182,
		185, 185, 185, 0, 185, 0, 185, 185,
		179, 77, 0, 79, 185, 185, 0, 79,
		51, 39, 87, 37, 49, 45, 91, 41,
		89, 188, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		188, 188, 188, 0, 0, 0, 83, 176,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 176, 176,
		176, 0, 0, 0, 105, 176, 176, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 176, 176, 176,
		0, 0, 0, 75, 176, 137, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 176, 176, 176, 0,
		0, 0, 75, 176, 176, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 176, 176, 176, 0, 0,
		0, 75, 176, 176, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 176, 176, 176, 0, 0, 0,
		75, 176, 176, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 176, 176, 176, 0, 0, 0, 75,
		176, 176, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		176, 176, 176, 0, 0, 0, 75, 176,
		176, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 176,
		176, 176, 0, 0, 0, 75, 176, 158,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 176, 176,
		176, 0, 0, 0, 75, 176, 176, 176,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 176, 176,
		176, 0, 0, 0, 75, 176, 176, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 176, 176, 176,
		0, 0, 0, 75, 176, 170, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 176, 176, 176, 0,
		0, 0, 75, 176, 176, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 176, 176, 176, 0, 0,
		0, 75, 176, 176, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 176, 176, 176, 0, 0, 0,
		75, 176, 176, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 176, 176, 176, 0, 0, 0, 75,
		176, 173, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		176, 176, 176, 0, 0, 0, 75, 176,
		164, 176, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		176, 176, 176, 0, 0, 0, 75, 176,
		176, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 176,
		176, 176, 0, 0, 0, 75, 176, 176,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 176, 176,
		176, 0, 0, 0, 75, 176, 176, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 176, 176, 176,
		0, 0, 0, 75, 176, 146, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 176, 176, 176, 0,
		0, 0, 75, 176, 176, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 176, 176, 176, 0, 0,
		0, 75, 176, 143, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 176, 176, 176, 0, 0, 0,
		75, 176, 176, 140, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 176, 176, 176, 0, 0, 0,
		75, 176, 176, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 176, 176, 176, 0, 0, 0, 75,
		176, 176, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		176, 176, 176, 0, 0, 0, 75, 176,
		176, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 176,
		176, 176, 0, 0, 0, 75, 176, 155,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 176, 176,
		176, 0, 0, 0, 75, 176, 176, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 176, 176, 176,
		0, 0, 0, 75, 176, 176, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 176, 176, 176, 0,
		0, 0, 75, 176, 176, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 176, 176, 176, 0, 0,
		0, 75, 176, 176, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 176, 176, 176, 0, 0, 0,
		75, 176, 176, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 176, 176, 176, 0, 0, 0, 75,
		176, 149, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		176, 176, 176, 0, 0, 0, 75, 176,
		176, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 176,
		176, 176, 0, 0, 0, 75, 176, 176,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 176, 176,
		176, 0, 0, 0, 75, 176, 176, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 176, 176, 176,
		0, 0, 0, 75, 176, 176, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 176, 176, 176, 0,
		0, 0, 75, 176, 152, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 176, 176, 176, 0, 0,
		0, 75, 176, 176, 176, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 176, 176, 176, 0, 0,
		0, 75, 176, 176, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 176, 176, 176, 0, 0, 0,
		75, 176, 176, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 176, 176, 176, 0, 0, 0, 75,
		176, 176, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		176, 176, 176, 0, 0, 0, 75, 176,
		176, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 176,
		176, 176, 0, 0, 0, 75, 176, 176,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 176, 176,
		176, 0, 0, 0, 75, 176, 161, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 176, 176, 176,
		0, 0, 0, 75, 176, 176, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 176, 176, 176, 0,
		0, 0, 75, 176, 167, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 176, 176, 176, 0, 0,
		0, 75, 119, 0, 134, 0, 11, 0,
		0, 0, 15, 1, 17, 0, 0, 1,
		9, 0, 0, 197, 111, 0, 0, 194,
		197, 113, 0, 0, 194, 103, 103, 103,
		103, 103, 103, 97, 97, 97, 97, 97,
		101, 101, 101, 101, 101, 101, 101, 101,
		101, 101, 101, 101, 101, 99, 105, 105,
		105, 105, 105, 105, 105, 105, 105, 105,
		105, 105, 105, 105, 105, 105, 105, 105,
		105, 105, 105, 105, 105, 105, 105, 105,
		105, 105, 105, 105, 105, 105, 105, 105,
		105, 105, 105, 105, 105, 105, 105, 105,
		105, 105, 105, 105, 105, 105, 105, 105,
		105, 105, 105, 105, 105, 105, 105, 105,
		105, 105, 105, 105, 105, 105, 105, 105,
		105, 105, 105, 105, 105, 105, 105, 105,
		105, 105, 105, 105, 105, 105, 105, 105,
		105, 105, 105, 105, 105, 105, 105, 105,
		105, 105, 105, 105, 105, 105, 105, 105,
		105, 105, 105, 105, 105, 105, 105, 105,
		105, 105, 105, 105, 105, 105, 105, 105,
		105, 105, 105, 105, 105, 105, 105, 105,
		105, 105, 105, 105, 105, 105, 105, 105,
		105, 105, 105, 105, 105, 105, 105, 105,
		105, 105, 105, 105, 105, 105, 105, 105,
		105, 105, 105, 105, 105, 105, 105, 105,
		105, 105, 105, 105, 105, 105, 105, 105,
		105, 105, 105, 105, 105, 105, 105, 105,
		105, 105, 105, 105, 105, 105, 105, 105,
		105, 105, 105, 105, 105, 105, 105, 105,
		105, 105, 105, 105, 105, 105, 105, 105,
		105, 105, 105, 105, 105, 105, 105, 105,
		105, 105, 105, 105, 105, 105, 105, 105,
		105, 105, 105, 105, 105, 105, 105, 105,
		105, 105, 105, 105, 105, 105, 105, 105,
		105, 105, 105, 105, 105, 105, 105, 105,
		105, 105, 105, 105, 105, 105, 105, 105,
		105, 105, 105, 105, 105, 105, 105, 105,
		105, 105, 105, 105, 105, 105, 105, 105,
		105, 105, 105, 105, 105, 105, 105, 105,
		105, 105, 105, 105, 105, 105, 105, 105,
		105, 105, 105, 105, 105, 105, 105, 105,
		105, 105, 105, 105, 105, 105, 105, 105,
		105, 105, 105, 105, 105, 105, 105, 105,
		105, 105, 105, 105, 105, 105, 105, 105,
		105, 105, 105, 105, 105, 105, 105, 105,
		105, 105, 105, 105, 105, 105, 105, 105,
		105, 105, 105, 105, 105, 105, 105, 105,
		105, 105, 105, 105, 105, 105, 105, 105,
		105, 105, 105, 105, 105, 105, 105, 105,
		105, 105, 105, 105, 105, 105, 105, 105,
		105, 105, 105, 105, 105, 105, 105, 105,
		105, 105, 105, 105, 105, 105, 105, 105,
		105, 21, 21, 19, 19, 19, 19, 115,
		117, 117, 117, 117, 95, 93, 105, 85,
		73, 77, 77, 77, 77, 81, 81, 81,
		77, 79, 79, 87, 91, 89, 83, 105,
		75, 75, 75, 75, 75, 75, 75, 75,
		75, 75, 75, 75, 75, 75, 75, 75,
		75, 75, 75, 75, 75, 75, 75, 75,
		75, 75, 75, 75, 75, 75, 75, 75,
		75, 75, 75, 75, 75, 75, 75, 75,
		75, 75, 75, 75, 75, 75, 75, 15,
		17, 13, 113, 0
	};
	
	static const short _flux_to_state_actions[] = {
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 128, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		3, 0, 0, 0, 128, 0, 0
	};
	
	static const char _flux_from_state_actions[] = {
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 5, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		5, 0, 0, 0, 5, 0, 0
	};
	
	static const char _flux_eof_cond_spaces[] = {
		-1, -1, -1, -1, -1,
		-1, -1, -1, -1, -1, -1, -1, -1,
		-1, -1, -1, -1, -1, -1, -1, -1,
		-1, -1, -1, -1, -1, -1, -1, -1,
		-1, -1, -1, -1, -1, -1, -1, -1,
		-1, -1, -1, -1, -1, -1, -1, -1,
		-1, -1, -1, -1, -1, -1, -1, -1,
		-1, -1, -1, -1, -1, -1, -1, -1,
		-1, -1, -1, -1, -1, -1, -1, -1,
		-1, -1, -1, -1, -1, -1, -1, -1,
		-1, -1, -1, -1, -1, -1, -1, -1,
		-1, -1, -1, -1, -1, -1, -1, -1,
		-1, -1, -1, -1, -1, -1, -1, -1,
		-1, -1, -1, -1, -1, -1, -1, -1,
		-1, -1, -1, -1, -1, -1, -1, -1,
		-1, -1, -1, -1, -1, -1, -1, -1,
		-1, -1, -1, -1, -1, -1, -1, -1,
		-1, -1, -1, -1, -1, -1, -1, -1,
		-1, -1, -1, -1, -1, -1, -1, -1,
		-1, -1, -1, -1, -1, -1, -1, -1,
		-1, -1, -1, -1, -1, -1, -1, -1,
		-1, -1, -1, -1, -1, -1, -1, -1,
		-1, -1, -1, -1, -1, -1, -1, -1,
		-1, -1, -1, -1, -1, -1, -1, -1,
		-1, -1, -1, -1, -1, -1, -1, -1,
		-1, -1, -1, -1, -1, -1, -1, -1,
		-1, -1, -1, -1, -1, -1, -1, -1,
		-1, -1, -1, -1, -1, -1, -1, -1,
		-1, -1, -1, -1, -1, -1, -1, -1,
		-1, -1, -1, -1, -1, -1, -1, -1,
		-1, -1, -1, -1, -1, -1, -1, -1,
		-1, -1, -1, -1, -1, -1, -1, -1,
		-1, -1, -1, -1, -1, -1, -1, -1,
		-1, -1, -1, -1, -1, -1, -1, -1,
		-1, -1, -1, -1, -1, -1, -1, -1,
		-1, -1, -1, -1, -1, -1, -1, -1,
		-1, -1, -1, -1, -1, -1, -1, -1,
		-1, -1, -1, -1, -1, -1, -1, -1,
		-1, -1, -1, -1, -1, -1, -1, -1,
		-1, -1, -1, -1, -1, -1, -1, -1,
		-1, -1, -1, -1, -1, -1, -1, -1,
		-1, -1, -1, -1, -1, -1, -1, -1,
		-1, -1, -1, -1, -1, -1, -1, -1,
		-1, -1, -1, -1, -1, -1, -1, -1,
		-1, -1, -1, -1, -1, -1, -1, -1,
		-1, -1, -1, -1, -1, -1, -1, -1,
		-1, -1, -1, -1, -1, -1, -1, -1,
		-1, -1, -1, -1, -1, -1, -1, -1,
		-1, -1, -1, -1, -1, -1, -1, -1,
		-1, -1, -1, -1, -1, -1, -1, -1,
		-1, -1, -1, -1, -1, -1, -1, -1,
		-1, -1, -1, -1, -1, -1, -1, -1,
		-1, -1, -1, -1, -1, -1, -1, -1,
		-1, -1, -1, -1, -1, -1, -1, -1,
		-1, -1, -1, -1, -1, -1, -1, -1,
		-1, -1, -1, -1, -1, -1, -1, -1,
		-1, -1, -1, -1, -1, -1, -1, -1,
		-1, -1, -1, -1, -1, -1, -1, -1,
		-1, -1, -1, -1, -1, -1, -1, -1,
		-1, -1, -1, -1, -1, -1, -1, -1,
		-1, -1, -1, -1, -1, -1, -1, -1,
		-1, 0
	};
	
	static const char _flux_eof_cond_key_offs[] = {
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0
	};
	
	static const char _flux_eof_cond_key_lens[] = {
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0
	};
	
	static const char _flux_eof_cond_keys[] = {
		0
	};
	
	static const short _flux_eof_trans[] = {
		0, 0, 4014, 4015, 4016, 4017, 4018, 4019,
		4020, 4021, 4022, 4023, 4024, 4025, 4026, 4027,
		4028, 4029, 4030, 4031, 4032, 4033, 4034, 4035,
		4036, 4037, 4038, 4039, 0, 4040, 4041, 4042,
		4043, 4044, 4045, 4046, 4047, 4048, 4049, 4050,
		4051, 4052, 4053, 4054, 4055, 4056, 4057, 4058,
		4059, 4060, 4061, 4062, 4063, 4064, 4065, 4066,
		4067, 4068, 4069, 4070, 4071, 4072, 4073, 4074,
		4075, 4076, 4077, 4078, 4079, 4080, 4081, 4082,
		4083, 4084, 4085, 4086, 4087, 4088, 4089, 4090,
		4091, 4092, 4093, 4094, 4095, 4096, 4097, 4098,
		4099, 4100, 4101, 4102, 4103, 4104, 4105, 4106,
		4107, 4108, 4109, 4110, 4111, 4112, 4113, 4114,
		4115, 4116, 4117, 4118, 4119, 4120, 4121, 4122,
		4123, 4124, 4125, 4126, 4127, 4128, 4129, 4130,
		4131, 4132, 4133, 4134, 4135, 4136, 4137, 4138,
		4139, 4140, 4141, 4142, 4143, 4144, 4145, 4146,
		4147, 4148, 4149, 4150, 4151, 4152, 4153, 4154,
		4155, 4156, 4157, 4158, 4159, 4160, 4161, 4162,
		4163, 4164, 4165, 4166, 4167, 4168, 4169, 4170,
		4171, 4172, 4173, 4174, 4175, 4176, 4177, 4178,
		4179, 4180, 4181, 4182, 4183, 4184, 4185, 4186,
		4187, 4188, 4189, 4190, 4191, 4192, 4193, 4194,
		4195, 4196, 4197, 4198, 4199, 4200, 4201, 4202,
		4203, 4204, 4205, 4206, 4207, 4208, 4209, 4210,
		4211, 4212, 4213, 4214, 4215, 4216, 4217, 4218,
		4219, 4220, 4221, 4222, 4223, 4224, 4225, 4226,
		4227, 4228, 4229, 4230, 4231, 4232, 4233, 4234,
		4235, 4236, 4237, 4238, 4239, 4240, 4241, 4242,
		4243, 4244, 4245, 4246, 4247, 4248, 4249, 4250,
		4251, 4252, 4253, 4254, 4255, 4256, 4257, 4258,
		4259, 4260, 4261, 4262, 4263, 4264, 4265, 4266,
		4267, 4268, 4269, 4270, 4271, 4272, 4273, 4274,
		4275, 4276, 4277, 4278, 4279, 4280, 4281, 4282,
		4283, 4284, 4285, 4286, 4287, 4288, 4289, 4290,
		4291, 4292, 4293, 4294, 4295, 4296, 4297, 4298,
		4299, 4300, 4301, 4302, 4303, 4304, 4305, 4306,
		4307, 4308, 4309, 4310, 4311, 4312, 4313, 4314,
		4315, 4316, 4317, 4318, 4319, 4320, 4321, 4322,
		4323, 4324, 4325, 4326, 4327, 4328, 4329, 4330,
		4331, 4332, 4333, 4334, 4335, 4336, 4337, 4338,
		4339, 4340, 4341, 4342, 4343, 4344, 4345, 4346,
		4347, 4348, 4349, 4350, 4351, 4352, 4353, 4354,
		4355, 4356, 4357, 4358, 4359, 4360, 4361, 4362,
		4363, 4364, 4365, 4366, 4367, 4368, 4369, 4370,
		4371, 4372, 4373, 4374, 4375, 4376, 4377, 4378,
		4379, 4380, 4381, 4382, 4383, 4384, 4385, 4386,
		4387, 4388, 4389, 4390, 4391, 4392, 4393, 4394,
		4395, 4396, 4397, 4398, 4399, 4400, 4401, 4402,
		4403, 4404, 4405, 4406, 4407, 4408, 4409, 0,
		4410, 4411, 4412, 4413, 4414, 4415, 4416, 4417,
		4418, 4419, 4420, 0, 0, 4421, 4422, 4423,
		4424, 4425, 4426, 4427, 4428, 4429, 4430, 4431,
		4432, 4433, 4434, 4435, 4436, 4437, 4438, 4439,
		4440, 4441, 4442, 4443, 4444, 4445, 4446, 4447,
		4448, 4449, 4450, 4451, 4452, 4453, 4454, 4455,
		4456, 4457, 4458, 4459, 4460, 4461, 4462, 4463,
		4464, 4465, 4466, 4467, 4468, 4469, 4470, 4471,
		4472, 4473, 4474, 4475, 4476, 4477, 4478, 4479,
		4480, 4481, 4482, 4483, 4484, 4485, 4486, 4487,
		0, 4488, 4489, 4490, 0, 4491, 0
	};
	
	static const char _flux_nfa_targs[] = {
		0, 0
	};
	
	static const char _flux_nfa_offsets[] = {
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0
	};
	
	static const char _flux_nfa_push_actions[] = {
		0, 0
	};
	
	static const char _flux_nfa_pop_trans[] = {
		0, 0
	};
	
	static const int flux_start = 412;
	static const int flux_error = 0;
	
	static const int flux_en_main_with_regex = 480;
	static const int flux_en_main = 412;
	static const int flux_en_string_expr = 484;
	
	
	
	uint32_t real_scan(
	int32_t mode,
	const char** pp,
	const char* _data,
	const char* pe,
	const char* eof,
	const char** last_newline,
	int32_t& cur_line,
	TokenType& token,
	int32_t& token_start,
	int32_t& token_start_line,
	int32_t& token_start_col,
	int32_t& token_end,
	int32_t& token_end_line,
	int32_t& token_end_col)
	{
		int cs = flux_start;
		switch (cs) {
			case 0:
			cs = flux_en_main;
			break;
			case 1:
			cs = flux_en_main_with_regex;
			break;
			case 2:
			cs = flux_en_string_expr;
			break;
			default:
			break;
		}
		
		const char* p = *pp;
		
		int32_t act=0;
		const char* ts=0;
		const char* te=0;
		
		TokenType tok = TokenType::Illegal;
		
		const char* last_newline_before_token = *last_newline;
		uint32_t cur_line_token_start = cur_line;
		
		// alskdfj

		{
			ts = 0;
			te = 0;
			act = 0;
		}
		

		{
			int _cpc;
			int _klen;const char * _cekeys;unsigned int _trans = 0;const unsigned char * _keys;const char * _acts;unsigned int _nacts;	 {
				if ( p == pe )
				goto _test_eof;
				if ( cs == 0 )
				goto _out;
				_resume:  {
					_acts = ( _flux_actions + (_flux_from_state_actions[cs]));
					_nacts = (unsigned int)(*( _acts));
					_acts += 1;
					while ( _nacts > 0 ) {
						switch ( (*( _acts)) ) {
							case 3:  {
									{
									#line 1 "NONE"
									{ts = p;}}
								break; }
						}
						_nacts -= 1;
						_acts += 1;
					}
					
					_keys = ( _flux_trans_keys + (_flux_key_offsets[cs]));
					_trans = (unsigned int)_flux_index_offsets[cs];
					
					_klen = (int)_flux_single_lengths[cs];
					if ( _klen > 0 ) {
						const unsigned char *_lower = _keys;
						const unsigned char *_upper = _keys + _klen - 1;
						const unsigned char *_mid;
						while ( 1 ) {
							if ( _upper < _lower )
							break;
							
							_mid = _lower + ((_upper-_lower) >> 1);
							if ( ( (*( p))) < (*( _mid)) )
							_upper = _mid - 1;
							else if ( ( (*( p))) > (*( _mid)) )
							_lower = _mid + 1;
							else {
								_trans += (unsigned int)(_mid - _keys);
								goto _match;
							}
						}
						_keys += _klen;
						_trans += (unsigned int)_klen;
					}
					
					_klen = (int)_flux_range_lengths[cs];
					if ( _klen > 0 ) {
						const unsigned char *_lower = _keys;
						const unsigned char *_upper = _keys + (_klen<<1) - 2;
						const unsigned char *_mid;
						while ( 1 ) {
							if ( _upper < _lower )
							break;
							
							_mid = _lower + (((_upper-_lower) >> 1) & ~1);
							if ( ( (*( p))) < (*( _mid)) )
							_upper = _mid - 2;
							else if ( ( (*( p))) > (*( _mid + 1)) )
							_lower = _mid + 2;
							else {
								_trans += (unsigned int)((_mid - _keys)>>1);
								goto _match;
							}
						}
						_trans += (unsigned int)_klen;
					}
					
					_match:  {
						goto _match_cond;
					}
				}
				_match_cond:  {
					cs = (int)_flux_cond_targs[_trans];
					
					if ( _flux_cond_actions[_trans] == 0 )
					goto _again;
					
					_acts = ( _flux_actions + (_flux_cond_actions[_trans]));
					_nacts = (unsigned int)(*( _acts));
					_acts += 1;
					while ( _nacts > 0 ) {
						switch ( (*( _acts)) )
						{
							case 0:  {
									{
									#line 12 "cpp/pl/flux/scanner.rl"

        // We do this for every newline we find.
        // This allows us to return correct line/column for each token
        // back to the caller.
        cur_line += 1;
        *last_newline = 									p + 1;
    }
								break; }
							case 4:  {
									{
									#line 1 "NONE"
									{te = p+1;}}
								break; }
							case 5:  {
									{
									#line 69 "cpp/pl/flux/scanner.rl"
									{act = 1;}}
								break; }
							case 6:  {
									{
									#line 77 "cpp/pl/flux/scanner.rl"
									{act = 4;}}
								break; }
							case 7:  {
									{
									#line 69 "cpp/pl/flux/scanner.rl"
									{te = p+1;{
											#line 69 "cpp/pl/flux/scanner.rl"
 tok = TokenType::Regex; 											{p += 1; goto _out; } }}}
								break; }
							case 8:  {
									{
									#line 20 "cpp/pl/flux/scanner.rl"
									{te = p+1;{
											#line 20 "cpp/pl/flux/scanner.rl"

        // We do this for each newline we find in the whitespace between tokens,
        // so we can record the location of the first byte of a token.
        last_newline_before_token = *last_newline;
        cur_line_token_start = cur_line;
    										}}}
								break; }
							case 9:  {
									{
									#line 77 "cpp/pl/flux/scanner.rl"
									{te = p+1;{
											#line 77 "cpp/pl/flux/scanner.rl"
 											{p = p - 1; } {cs = 412;goto _again;}}}}
								break; }
							case 10:  {
									{
									#line 69 "cpp/pl/flux/scanner.rl"
									{te = p;p = p - 1;{
											#line 69 "cpp/pl/flux/scanner.rl"
 tok = TokenType::Regex; 											{p += 1; goto _out; } }}}
								break; }
							case 11:  {
									{
									#line 1 "-"
									{te = p;p = p - 1;}}
								break; }
							case 12:  {
									{
									#line 77 "cpp/pl/flux/scanner.rl"
									{te = p;p = p - 1;{
											#line 77 "cpp/pl/flux/scanner.rl"
 											{p = p - 1; } {cs = 412;goto _again;}}}}
								break; }
							case 13:  {
									{
									#line 77 "cpp/pl/flux/scanner.rl"
									{p = ((te))-1;
										{
											#line 77 "cpp/pl/flux/scanner.rl"
 											{p = p - 1; } {cs = 412;goto _again;}}}}
								break; }
							case 14:  {
									{
									#line 1 "NONE"
									{switch( act ) {
											case 1:  {
												p = ((te))-1;
												{
													#line 69 "cpp/pl/flux/scanner.rl"
 tok = TokenType::Regex; 													{p += 1; goto _out; } } break; }
											case 4:  {
												p = ((te))-1;
												{
													#line 77 "cpp/pl/flux/scanner.rl"
 													{p = p - 1; } {cs = 412;goto _again;}} break; }
										}}
								}
								break; }
							case 15:  {
									{
									#line 84 "cpp/pl/flux/scanner.rl"
									{act = 6;}}
								break; }
							case 16:  {
									{
									#line 85 "cpp/pl/flux/scanner.rl"
									{act = 7;}}
								break; }
							case 17:  {
									{
									#line 86 "cpp/pl/flux/scanner.rl"
									{act = 8;}}
								break; }
							case 18:  {
									{
									#line 87 "cpp/pl/flux/scanner.rl"
									{act = 9;}}
								break; }
							case 19:  {
									{
									#line 88 "cpp/pl/flux/scanner.rl"
									{act = 10;}}
								break; }
							case 20:  {
									{
									#line 89 "cpp/pl/flux/scanner.rl"
									{act = 11;}}
								break; }
							case 21:  {
									{
									#line 90 "cpp/pl/flux/scanner.rl"
									{act = 12;}}
								break; }
							case 22:  {
									{
									#line 91 "cpp/pl/flux/scanner.rl"
									{act = 13;}}
								break; }
							case 23:  {
									{
									#line 92 "cpp/pl/flux/scanner.rl"
									{act = 14;}}
								break; }
							case 24:  {
									{
									#line 93 "cpp/pl/flux/scanner.rl"
									{act = 15;}}
								break; }
							case 25:  {
									{
									#line 94 "cpp/pl/flux/scanner.rl"
									{act = 16;}}
								break; }
							case 26:  {
									{
									#line 95 "cpp/pl/flux/scanner.rl"
									{act = 17;}}
								break; }
							case 27:  {
									{
									#line 96 "cpp/pl/flux/scanner.rl"
									{act = 18;}}
								break; }
							case 28:  {
									{
									#line 98 "cpp/pl/flux/scanner.rl"
									{act = 19;}}
								break; }
							case 29:  {
									{
									#line 99 "cpp/pl/flux/scanner.rl"
									{act = 20;}}
								break; }
							case 30:  {
									{
									#line 100 "cpp/pl/flux/scanner.rl"
									{act = 21;}}
								break; }
							case 31:  {
									{
									#line 101 "cpp/pl/flux/scanner.rl"
									{act = 22;}}
								break; }
							case 32:  {
									{
									#line 104 "cpp/pl/flux/scanner.rl"
									{act = 25;}}
								break; }
							case 33:  {
									{
									#line 132 "cpp/pl/flux/scanner.rl"
									{act = 52;}}
								break; }
							case 34:  {
									{
									#line 82 "cpp/pl/flux/scanner.rl"
									{te = p+1;{
											#line 82 "cpp/pl/flux/scanner.rl"
 tok = TokenType::Comment; 											{p += 1; goto _out; } }}}
								break; }
							case 35:  {
									{
									#line 102 "cpp/pl/flux/scanner.rl"
									{te = p+1;{
											#line 102 "cpp/pl/flux/scanner.rl"
 tok = TokenType::Time; 											{p += 1; goto _out; } }}}
								break; }
							case 36:  {
									{
									#line 103 "cpp/pl/flux/scanner.rl"
									{te = p+1;{
											#line 103 "cpp/pl/flux/scanner.rl"
 tok = TokenType::String; 											{p += 1; goto _out; } }}}
								break; }
							case 37:  {
									{
									#line 106 "cpp/pl/flux/scanner.rl"
									{te = p+1;{
											#line 106 "cpp/pl/flux/scanner.rl"
 tok = TokenType::Add; 											{p += 1; goto _out; } }}}
								break; }
							case 38:  {
									{
									#line 107 "cpp/pl/flux/scanner.rl"
									{te = p+1;{
											#line 107 "cpp/pl/flux/scanner.rl"
 tok = TokenType::Sub; 											{p += 1; goto _out; } }}}
								break; }
							case 39:  {
									{
									#line 108 "cpp/pl/flux/scanner.rl"
									{te = p+1;{
											#line 108 "cpp/pl/flux/scanner.rl"
 tok = TokenType::Mul; 											{p += 1; goto _out; } }}}
								break; }
							case 40:  {
									{
									#line 110 "cpp/pl/flux/scanner.rl"
									{te = p+1;{
											#line 110 "cpp/pl/flux/scanner.rl"
 tok = TokenType::Mod; 											{p += 1; goto _out; } }}}
								break; }
							case 41:  {
									{
									#line 111 "cpp/pl/flux/scanner.rl"
									{te = p+1;{
											#line 111 "cpp/pl/flux/scanner.rl"
 tok = TokenType::Pow; 											{p += 1; goto _out; } }}}
								break; }
							case 42:  {
									{
									#line 112 "cpp/pl/flux/scanner.rl"
									{te = p+1;{
											#line 112 "cpp/pl/flux/scanner.rl"
 tok = TokenType::Eq; 											{p += 1; goto _out; } }}}
								break; }
							case 43:  {
									{
									#line 115 "cpp/pl/flux/scanner.rl"
									{te = p+1;{
											#line 115 "cpp/pl/flux/scanner.rl"
 tok = TokenType::Lte; 											{p += 1; goto _out; } }}}
								break; }
							case 44:  {
									{
									#line 116 "cpp/pl/flux/scanner.rl"
									{te = p+1;{
											#line 116 "cpp/pl/flux/scanner.rl"
 tok = TokenType::Gte; 											{p += 1; goto _out; } }}}
								break; }
							case 45:  {
									{
									#line 117 "cpp/pl/flux/scanner.rl"
									{te = p+1;{
											#line 117 "cpp/pl/flux/scanner.rl"
 tok = TokenType::Neq; 											{p += 1; goto _out; } }}}
								break; }
							case 46:  {
									{
									#line 118 "cpp/pl/flux/scanner.rl"
									{te = p+1;{
											#line 118 "cpp/pl/flux/scanner.rl"
 tok = TokenType::RegexEq; 											{p += 1; goto _out; } }}}
								break; }
							case 47:  {
									{
									#line 119 "cpp/pl/flux/scanner.rl"
									{te = p+1;{
											#line 119 "cpp/pl/flux/scanner.rl"
 tok = TokenType::RegexNeq; 											{p += 1; goto _out; } }}}
								break; }
							case 48:  {
									{
									#line 121 "cpp/pl/flux/scanner.rl"
									{te = p+1;{
											#line 121 "cpp/pl/flux/scanner.rl"
 tok = TokenType::Arrow; 											{p += 1; goto _out; } }}}
								break; }
							case 49:  {
									{
									#line 122 "cpp/pl/flux/scanner.rl"
									{te = p+1;{
											#line 122 "cpp/pl/flux/scanner.rl"
 tok = TokenType::PipeReceive; 											{p += 1; goto _out; } }}}
								break; }
							case 50:  {
									{
									#line 123 "cpp/pl/flux/scanner.rl"
									{te = p+1;{
											#line 123 "cpp/pl/flux/scanner.rl"
 tok = TokenType::LParen; 											{p += 1; goto _out; } }}}
								break; }
							case 51:  {
									{
									#line 124 "cpp/pl/flux/scanner.rl"
									{te = p+1;{
											#line 124 "cpp/pl/flux/scanner.rl"
 tok = TokenType::RParen; 											{p += 1; goto _out; } }}}
								break; }
							case 52:  {
									{
									#line 125 "cpp/pl/flux/scanner.rl"
									{te = p+1;{
											#line 125 "cpp/pl/flux/scanner.rl"
 tok = TokenType::LBrack; 											{p += 1; goto _out; } }}}
								break; }
							case 53:  {
									{
									#line 126 "cpp/pl/flux/scanner.rl"
									{te = p+1;{
											#line 126 "cpp/pl/flux/scanner.rl"
 tok = TokenType::RBrack; 											{p += 1; goto _out; } }}}
								break; }
							case 54:  {
									{
									#line 127 "cpp/pl/flux/scanner.rl"
									{te = p+1;{
											#line 127 "cpp/pl/flux/scanner.rl"
 tok = TokenType::LBrace; 											{p += 1; goto _out; } }}}
								break; }
							case 55:  {
									{
									#line 128 "cpp/pl/flux/scanner.rl"
									{te = p+1;{
											#line 128 "cpp/pl/flux/scanner.rl"
 tok = TokenType::RBrace; 											{p += 1; goto _out; } }}}
								break; }
							case 56:  {
									{
									#line 129 "cpp/pl/flux/scanner.rl"
									{te = p+1;{
											#line 129 "cpp/pl/flux/scanner.rl"
 tok = TokenType::Colon; 											{p += 1; goto _out; } }}}
								break; }
							case 57:  {
									{
									#line 130 "cpp/pl/flux/scanner.rl"
									{te = p+1;{
											#line 130 "cpp/pl/flux/scanner.rl"
 tok = TokenType::PipeForward; 											{p += 1; goto _out; } }}}
								break; }
							case 58:  {
									{
									#line 131 "cpp/pl/flux/scanner.rl"
									{te = p+1;{
											#line 131 "cpp/pl/flux/scanner.rl"
 tok = TokenType::Comma; 											{p += 1; goto _out; } }}}
								break; }
							case 59:  {
									{
									#line 134 "cpp/pl/flux/scanner.rl"
									{te = p+1;{
											#line 134 "cpp/pl/flux/scanner.rl"
 tok = TokenType::QuestionMark; 											{p += 1; goto _out; } }}}
								break; }
							case 60:  {
									{
									#line 20 "cpp/pl/flux/scanner.rl"
									{te = p+1;{
											#line 20 "cpp/pl/flux/scanner.rl"

        // We do this for each newline we find in the whitespace between tokens,
        // so we can record the location of the first byte of a token.
        last_newline_before_token = *last_newline;
        cur_line_token_start = cur_line;
    										}}}
								break; }
							case 61:  {
									{
									#line 82 "cpp/pl/flux/scanner.rl"
									{te = p;p = p - 1;{
											#line 82 "cpp/pl/flux/scanner.rl"
 tok = TokenType::Comment; 											{p += 1; goto _out; } }}}
								break; }
							case 62:  {
									{
									#line 98 "cpp/pl/flux/scanner.rl"
									{te = p;p = p - 1;{
											#line 98 "cpp/pl/flux/scanner.rl"
 tok = TokenType::Ident; 											{p += 1; goto _out; } }}}
								break; }
							case 63:  {
									{
									#line 99 "cpp/pl/flux/scanner.rl"
									{te = p;p = p - 1;{
											#line 99 "cpp/pl/flux/scanner.rl"
 tok = TokenType::Int; 											{p += 1; goto _out; } }}}
								break; }
							case 64:  {
									{
									#line 101 "cpp/pl/flux/scanner.rl"
									{te = p;p = p - 1;{
											#line 101 "cpp/pl/flux/scanner.rl"
 tok = TokenType::Duration; 											{p += 1; goto _out; } }}}
								break; }
							case 65:  {
									{
									#line 102 "cpp/pl/flux/scanner.rl"
									{te = p;p = p - 1;{
											#line 102 "cpp/pl/flux/scanner.rl"
 tok = TokenType::Time; 											{p += 1; goto _out; } }}}
								break; }
							case 66:  {
									{
									#line 104 "cpp/pl/flux/scanner.rl"
									{te = p;p = p - 1;{
											#line 104 "cpp/pl/flux/scanner.rl"
 tok = TokenType::Attribute; 											{p += 1; goto _out; } }}}
								break; }
							case 67:  {
									{
									#line 109 "cpp/pl/flux/scanner.rl"
									{te = p;p = p - 1;{
											#line 109 "cpp/pl/flux/scanner.rl"
 tok = TokenType::Div; 											{p += 1; goto _out; } }}}
								break; }
							case 68:  {
									{
									#line 113 "cpp/pl/flux/scanner.rl"
									{te = p;p = p - 1;{
											#line 113 "cpp/pl/flux/scanner.rl"
 tok = TokenType::Lt; 											{p += 1; goto _out; } }}}
								break; }
							case 69:  {
									{
									#line 114 "cpp/pl/flux/scanner.rl"
									{te = p;p = p - 1;{
											#line 114 "cpp/pl/flux/scanner.rl"
 tok = TokenType::Gt; 											{p += 1; goto _out; } }}}
								break; }
							case 70:  {
									{
									#line 120 "cpp/pl/flux/scanner.rl"
									{te = p;p = p - 1;{
											#line 120 "cpp/pl/flux/scanner.rl"
 tok = TokenType::Assign; 											{p += 1; goto _out; } }}}
								break; }
							case 71:  {
									{
									#line 133 "cpp/pl/flux/scanner.rl"
									{te = p;p = p - 1;{
											#line 133 "cpp/pl/flux/scanner.rl"
 tok = TokenType::Quote; 											{p += 1; goto _out; } }}}
								break; }
							case 72:  {
									{
									#line 1 "-"
									{te = p;p = p - 1;}}
								break; }
							case 73:  {
									{
									#line 99 "cpp/pl/flux/scanner.rl"
									{p = ((te))-1;
										{
											#line 99 "cpp/pl/flux/scanner.rl"
 tok = TokenType::Int; 											{p += 1; goto _out; } }}}
								break; }
							case 74:  {
									{
									#line 101 "cpp/pl/flux/scanner.rl"
									{p = ((te))-1;
										{
											#line 101 "cpp/pl/flux/scanner.rl"
 tok = TokenType::Duration; 											{p += 1; goto _out; } }}}
								break; }
							case 75:  {
									{
									#line 102 "cpp/pl/flux/scanner.rl"
									{p = ((te))-1;
										{
											#line 102 "cpp/pl/flux/scanner.rl"
 tok = TokenType::Time; 											{p += 1; goto _out; } }}}
								break; }
							case 76:  {
									{
									#line 133 "cpp/pl/flux/scanner.rl"
									{p = ((te))-1;
										{
											#line 133 "cpp/pl/flux/scanner.rl"
 tok = TokenType::Quote; 											{p += 1; goto _out; } }}}
								break; }
							case 77:  {
									{
									#line 1 "NONE"
									{switch( act ) {
											case 0:  {
												{
													#line 1 "NONE"
													{cs = 0;goto _again;}} break; }
											case 6:  {
												p = ((te))-1;
												{
													#line 84 "cpp/pl/flux/scanner.rl"
 tok = TokenType::And; 													{p += 1; goto _out; } } break; }
											case 7:  {
												p = ((te))-1;
												{
													#line 85 "cpp/pl/flux/scanner.rl"
 tok = TokenType::Or; 													{p += 1; goto _out; } } break; }
											case 8:  {
												p = ((te))-1;
												{
													#line 86 "cpp/pl/flux/scanner.rl"
 tok = TokenType::Not; 													{p += 1; goto _out; } } break; }
											case 9:  {
												p = ((te))-1;
												{
													#line 87 "cpp/pl/flux/scanner.rl"
 tok = TokenType::Import; 													{p += 1; goto _out; } } break; }
											case 10:  {
												p = ((te))-1;
												{
													#line 88 "cpp/pl/flux/scanner.rl"
 tok = TokenType::Package; 													{p += 1; goto _out; } } break; }
											case 11:  {
												p = ((te))-1;
												{
													#line 89 "cpp/pl/flux/scanner.rl"
 tok = TokenType::Return; 													{p += 1; goto _out; } } break; }
											case 12:  {
												p = ((te))-1;
												{
													#line 90 "cpp/pl/flux/scanner.rl"
 tok = TokenType::Option; 													{p += 1; goto _out; } } break; }
											case 13:  {
												p = ((te))-1;
												{
													#line 91 "cpp/pl/flux/scanner.rl"
 tok = TokenType::Builtin; 													{p += 1; goto _out; } } break; }
											case 14:  {
												p = ((te))-1;
												{
													#line 92 "cpp/pl/flux/scanner.rl"
 tok = TokenType::TestCase; 													{p += 1; goto _out; } } break; }
											case 15:  {
												p = ((te))-1;
												{
													#line 93 "cpp/pl/flux/scanner.rl"
 tok = TokenType::If; 													{p += 1; goto _out; } } break; }
											case 16:  {
												p = ((te))-1;
												{
													#line 94 "cpp/pl/flux/scanner.rl"
 tok = TokenType::Then; 													{p += 1; goto _out; } } break; }
											case 17:  {
												p = ((te))-1;
												{
													#line 95 "cpp/pl/flux/scanner.rl"
 tok = TokenType::Else; 													{p += 1; goto _out; } } break; }
											case 18:  {
												p = ((te))-1;
												{
													#line 96 "cpp/pl/flux/scanner.rl"
 tok = TokenType::Exists; 													{p += 1; goto _out; } } break; }
											case 19:  {
												p = ((te))-1;
												{
													#line 98 "cpp/pl/flux/scanner.rl"
 tok = TokenType::Ident; 													{p += 1; goto _out; } } break; }
											case 20:  {
												p = ((te))-1;
												{
													#line 99 "cpp/pl/flux/scanner.rl"
 tok = TokenType::Int; 													{p += 1; goto _out; } } break; }
											case 21:  {
												p = ((te))-1;
												{
													#line 100 "cpp/pl/flux/scanner.rl"
 tok = TokenType::Float; 													{p += 1; goto _out; } } break; }
											case 22:  {
												p = ((te))-1;
												{
													#line 101 "cpp/pl/flux/scanner.rl"
 tok = TokenType::Duration; 													{p += 1; goto _out; } } break; }
											case 25:  {
												p = ((te))-1;
												{
													#line 104 "cpp/pl/flux/scanner.rl"
 tok = TokenType::Attribute; 													{p += 1; goto _out; } } break; }
											case 52:  {
												p = ((te))-1;
												{
													#line 132 "cpp/pl/flux/scanner.rl"
 tok = TokenType::Dot; 													{p += 1; goto _out; } } break; }
										}}
								}
								break; }
							case 78:  {
									{
									#line 146 "cpp/pl/flux/scanner.rl"
									{act = 60;}}
								break; }
							case 79:  {
									{
									#line 143 "cpp/pl/flux/scanner.rl"
									{te = p+1;{
											#line 143 "cpp/pl/flux/scanner.rl"
 tok = TokenType::StringExpr; 											{p += 1; goto _out; } }}}
								break; }
							case 80:  {
									{
									#line 144 "cpp/pl/flux/scanner.rl"
									{te = p+1;{
											#line 144 "cpp/pl/flux/scanner.rl"
 											{p = p - 1; } te -= 1; tok = TokenType::Text; {p += 1; goto _out; } }}}
								break; }
							case 81:  {
									{
									#line 145 "cpp/pl/flux/scanner.rl"
									{te = p+1;{
											#line 145 "cpp/pl/flux/scanner.rl"
 tok = TokenType::Quote; 											{p += 1; goto _out; } }}}
								break; }
							case 82:  {
									{
									#line 146 "cpp/pl/flux/scanner.rl"
									{te = p;p = p - 1;{
											#line 146 "cpp/pl/flux/scanner.rl"
 tok = TokenType::Text; 											{p += 1; goto _out; } }}}
								break; }
							case 83:  {
									{
									#line 146 "cpp/pl/flux/scanner.rl"
									{p = ((te))-1;
										{
											#line 146 "cpp/pl/flux/scanner.rl"
 tok = TokenType::Text; 											{p += 1; goto _out; } }}}
								break; }
							case 84:  {
									{
									#line 1 "NONE"
									{switch( act ) {
											case 0:  {
												{
													#line 1 "NONE"
													{cs = 0;goto _again;}} break; }
											case 60:  {
												p = ((te))-1;
												{
													#line 146 "cpp/pl/flux/scanner.rl"
 tok = TokenType::Text; 													{p += 1; goto _out; } } break; }
										}}
								}
								break; }
						}
						_nacts -= 1;
						_acts += 1;
					}
					
					
				}
				_again:  {
					_acts = ( _flux_actions + (_flux_to_state_actions[cs]));
					_nacts = (unsigned int)(*( _acts));
					_acts += 1;
					while ( _nacts > 0 ) {
						switch ( (*( _acts)) ) {
							case 1:  {
									{
									#line 1 "NONE"
									{ts = 0;}}
								break; }
							case 2:  {
									{
									#line 1 "NONE"
									{act = 0;}}
								break; }
						}
						_nacts -= 1;
						_acts += 1;
					}
					
					if ( cs == 0 )
					goto _out;
					p += 1;
					if ( p != pe )
					goto _resume;
				}
				_test_eof:  { {}
					if ( p == eof )
					{
						if ( _flux_eof_cond_spaces[cs] != -1 ) {
							_cekeys = ( _flux_eof_cond_keys + (_flux_eof_cond_key_offs[cs]));
							_klen = (int)_flux_eof_cond_key_lens[cs];
							_cpc = 0;
							{
								const char *_lower = _cekeys;
								const char *_upper = _cekeys + _klen - 1;
								const char *_mid;
								while ( 1 ) {
									if ( _upper < _lower )
									break;
									
									_mid = _lower + ((_upper-_lower) >> 1);
									if ( _cpc < (int)(*( _mid)) )
									_upper = _mid - 1;
									else if ( _cpc > (int)(*( _mid)) )
									_lower = _mid + 1;
									else {
										goto _ok;
									}
								}
								cs = 0;
								goto _out;
							}
							_ok: {}
						}
						if ( _flux_eof_trans[cs] > 0 ) {
							_trans = (unsigned int)_flux_eof_trans[cs] - 1;
							goto _match_cond;
						}
					}
					
				}
				_out:  { {}
				}
			}
		}
		
		
		// Update output args.
		token = tok;
		
		token_start = ts - _data;
		token_start_line = cur_line_token_start;
		token_start_col = ts - last_newline_before_token + 1;
		
		token_end = te - _data;
		
		if (*last_newline > te) {
			// te (the token end pointer) will only be less than last_newline
			// (pointer to the last newline the scanner saw) if we are trying
			// to find a multi-line token (either string or regex literal)
			// but don't find the closing `/` or `"`.
			// In that case we need to reset last_newline and cur_line.
			cur_line = cur_line_token_start;
			*last_newline = last_newline_before_token;
		}
		
		token_end_line = cur_line;
		token_end_col = te - *last_newline + 1;
		
		*pp = p;
		if (cs == flux_error) {
			return 1;
		} else {
			return 0;
		}
	}
}
